openapi: 3.0.1
info:
  title: Cosmos SDK - Legacy REST and gRPC Gateway docs
  description: A REST interface for state queries, legacy transactions
  version: 1.0.0
servers:
- url: /
paths:
  /node_info:
    get:
      tags:
      - Terra REST
      summary: The properties of the connected node
      description: Information about the connected node
      responses:
        200:
          description: Node status
          content:
            application/json:
              schema:
                type: object
                properties:
                  application_version:
                    type: object
                    properties:
                      build_tags:
                        type: string
                      client_name:
                        type: string
                      commit:
                        type: string
                      go:
                        type: string
                      name:
                        type: string
                      server_name:
                        type: string
                      version:
                        type: string
                  node_info:
                    type: object
                    properties:
                      id:
                        type: string
                      moniker:
                        type: string
                        example: validator-name
                      protocol_version:
                        type: object
                        properties:
                          p2p:
                            type: string
                            example: "7"
                          block:
                            type: string
                            example: "10"
                          app:
                            type: string
                            example: "0"
                      network:
                        type: string
                        example: gaia-2
                      channels:
                        type: string
                      listen_addr:
                        type: string
                        example: 192.168.56.1:26656
                      version:
                        type: string
                        description: Tendermint version
                        example: 0.15.0
                      other:
                        type: object
                        properties:
                          tx_index:
                            type: string
                            example: on
                          rpc_address:
                            type: string
                            example: tcp://0.0.0.0:26657
                        description: more information on versions
        500:
          description: Failed to query node status
          content: {}
  /syncing:
    get:
      tags:
      - Tendermint RPC
      summary: Syncing state of node
      description: Get if the node is currently syning with other nodes
      responses:
        200:
          description: Node syncing status
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
        500:
          description: Server internal error
          content: {}
  /blocks/latest:
    get:
      tags:
      - Tendermint RPC
      summary: Get the latest block
      responses:
        200:
          description: The latest block
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_meta:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          chain_id:
                            type: string
                            example: columbus-5
                          height:
                            type: number
                            example: 1.0
                          time:
                            type: string
                            example: 2017-12-30T05:53:09.287+01:00
                          num_txs:
                            type: number
                            example: 0.0
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          total_txs:
                            type: number
                            example: 35.0
                          last_commit_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          data_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          next_validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          consensus_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          app_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          last_results_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          evidence_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          proposer_address:
                            type: string
                            description: bech32 encoded address
                            example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                          version:
                            type: object
                            properties:
                              block:
                                type: string
                                example: "10"
                              app:
                                type: string
                                example: "0"
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0.0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          chain_id:
                            type: string
                            example: columbus-5
                          height:
                            type: number
                            example: 1.0
                          time:
                            type: string
                            example: 2017-12-30T05:53:09.287+01:00
                          num_txs:
                            type: number
                            example: 0.0
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          total_txs:
                            type: number
                            example: 35.0
                          last_commit_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          data_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          next_validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          consensus_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          app_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          last_results_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          evidence_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          proposer_address:
                            type: string
                            description: bech32 encoded address
                            example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                          version:
                            type: object
                            properties:
                              block:
                                type: string
                                example: "10"
                              app:
                                type: string
                                example: "0"
                      txs:
                        type: array
                        items:
                          type: string
                      evidence:
                        type: array
                        items:
                          type: string
                      last_commit:
                        type: object
                        properties:
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          precommits:
                            type: array
                            items:
                              type: object
                              properties:
                                validator_address:
                                  type: string
                                validator_index:
                                  type: string
                                  example: "0"
                                height:
                                  type: string
                                  example: "0"
                                round:
                                  type: string
                                  example: "0"
                                timestamp:
                                  type: string
                                  example: 2017-12-30T05:53:09.287+01:00
                                type:
                                  type: number
                                  example: 2.0
                                block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                    parts:
                                      type: object
                                      properties:
                                        total:
                                          type: number
                                          example: 0.0
                                        hash:
                                          type: string
                                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                signature:
                                  type: string
                                  example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        500:
          description: Server internal error
          content: {}
  /blocks/{height}:
    get:
      tags:
      - Tendermint RPC
      summary: Get a block at a certain height
      parameters:
      - name: height
        in: path
        description: Block height
        required: true
        schema:
          type: number
        example: 1
      responses:
        200:
          description: The block at a specific height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_meta:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          chain_id:
                            type: string
                            example: columbus-5
                          height:
                            type: number
                            example: 1.0
                          time:
                            type: string
                            example: 2017-12-30T05:53:09.287+01:00
                          num_txs:
                            type: number
                            example: 0.0
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          total_txs:
                            type: number
                            example: 35.0
                          last_commit_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          data_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          next_validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          consensus_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          app_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          last_results_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          evidence_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          proposer_address:
                            type: string
                            description: bech32 encoded address
                            example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                          version:
                            type: object
                            properties:
                              block:
                                type: string
                                example: "10"
                              app:
                                type: string
                                example: "0"
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0.0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          chain_id:
                            type: string
                            example: columbus-5
                          height:
                            type: number
                            example: 1.0
                          time:
                            type: string
                            example: 2017-12-30T05:53:09.287+01:00
                          num_txs:
                            type: number
                            example: 0.0
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          total_txs:
                            type: number
                            example: 35.0
                          last_commit_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          data_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          next_validators_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          consensus_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          app_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          last_results_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          evidence_hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          proposer_address:
                            type: string
                            description: bech32 encoded address
                            example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                          version:
                            type: object
                            properties:
                              block:
                                type: string
                                example: "10"
                              app:
                                type: string
                                example: "0"
                      txs:
                        type: array
                        items:
                          type: string
                      evidence:
                        type: array
                        items:
                          type: string
                      last_commit:
                        type: object
                        properties:
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                              parts:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    example: 0.0
                                  hash:
                                    type: string
                                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          precommits:
                            type: array
                            items:
                              type: object
                              properties:
                                validator_address:
                                  type: string
                                validator_index:
                                  type: string
                                  example: "0"
                                height:
                                  type: string
                                  example: "0"
                                round:
                                  type: string
                                  example: "0"
                                timestamp:
                                  type: string
                                  example: 2017-12-30T05:53:09.287+01:00
                                type:
                                  type: number
                                  example: 2.0
                                block_id:
                                  type: object
                                  properties:
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                    parts:
                                      type: object
                                      properties:
                                        total:
                                          type: number
                                          example: 0.0
                                        hash:
                                          type: string
                                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                signature:
                                  type: string
                                  example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        400:
          description: Invalid height
          content: {}
        404:
          description: Request block height doesn't
          content: {}
        500:
          description: Server internal error
          content: {}
  /validatorsets/latest:
    get:
      tags:
      - Tendermint RPC
      summary: Get the latest validator set
      responses:
        200:
          description: The validator set at the latest block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: bech32 encoded address
                          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                        pub_key:
                          type: object
                          properties:
                            type:
                              type: string
                            value:
                              type: string
                        voting_power:
                          type: string
                          example: "1000"
                        proposer_priority:
                          type: string
                          example: "1000"
        500:
          description: Server internal error
          content: {}
  /validatorsets/{height}:
    get:
      tags:
      - Tendermint RPC
      summary: Get a validator set a certain height
      parameters:
      - name: height
        in: path
        description: Block height
        required: true
        schema:
          type: number
        example: 1
      responses:
        200:
          description: The validator set at a specific block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          description: bech32 encoded address
                          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                        pub_key:
                          type: object
                          properties:
                            type:
                              type: string
                            value:
                              type: string
                        voting_power:
                          type: string
                          example: "1000"
                        proposer_priority:
                          type: string
                          example: "1000"
        400:
          description: Invalid height
          content: {}
        404:
          description: Block at height not available
          content: {}
        500:
          description: Server internal error
          content: {}
  /txs/{hash}:
    get:
      tags:
      - Transactions
      summary: Get a Tx by hash
      description: Retrieve a transaction using its hash.
      parameters:
      - name: hash
        in: path
        description: Tx hash
        required: true
        schema:
          type: string
        example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
                  height:
                    type: number
                    example: 368.0
                  tx:
                    type: object
                    properties:
                      msg:
                        type: array
                        items:
                          type: string
                      fee:
                        type: object
                        properties:
                          gas:
                            type: string
                          amount:
                            type: array
                            items:
                              type: object
                              properties:
                                denom:
                                  type: string
                                  example: uluna
                                amount:
                                  type: string
                                  example: "50"
                      memo:
                        type: string
                      signature:
                        type: object
                        properties:
                          signature:
                            type: string
                            example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                          pub_key:
                            type: object
                            properties:
                              type:
                                type: string
                                example: tendermint/PubKeySecp256k1
                              value:
                                type: string
                                example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                          account_number:
                            type: string
                            example: "0"
                          sequence:
                            type: string
                            example: "0"
                  result:
                    type: object
                    properties:
                      log:
                        type: string
                      gas_wanted:
                        type: string
                        example: "200000"
                      gas_used:
                        type: string
                        example: "26354"
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /txs:
    get:
      tags:
      - Transactions
      summary: Search transactions
      description: Search transactions by events.
      parameters:
      - name: message.action
        in: query
        description: 'transaction events such as ''message.action=send'' which results
          in the following endpoint: ''GET /txs?message.action=send''. note that each
          module documents its own events. look for xx_events.md in the corresponding
          cosmos-sdk/docs/spec directory'
        schema:
          type: string
        example: send
      - name: message.sender
        in: query
        description: 'transaction events with sender: ''GET /txs?message.action=send&message.sender=terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv'''
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
        example: 1
      - name: limit
        in: query
        description: Maximum number of items per page
        schema:
          type: integer
        example: 1
      - name: tx.minheight
        in: query
        description: transactions on blocks with height greater or equal this value
        schema:
          type: integer
        example: 25
      - name: tx.maxheight
        in: query
        description: transactions on blocks with height less than or equal this value
        schema:
          type: integer
        example: 800000
      responses:
        200:
          description: All txs matching the provided events
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: number
                    example: 1.0
                  count:
                    type: number
                    example: 1.0
                  page_number:
                    type: number
                    example: 1.0
                  page_total:
                    type: number
                    example: 1.0
                  limit:
                    type: number
                    example: 30.0
                  txs:
                    type: array
                    items:
                      type: object
                      properties:
                        hash:
                          type: string
                          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
                        height:
                          type: number
                          example: 368.0
                        tx:
                          type: object
                          properties:
                            msg:
                              type: array
                              items:
                                type: string
                            fee:
                              type: object
                              properties:
                                gas:
                                  type: string
                                amount:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                        example: uluna
                                      amount:
                                        type: string
                                        example: "50"
                            memo:
                              type: string
                            signature:
                              type: object
                              properties:
                                signature:
                                  type: string
                                  example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                                pub_key:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: tendermint/PubKeySecp256k1
                                    value:
                                      type: string
                                      example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                                account_number:
                                  type: string
                                  example: "0"
                                sequence:
                                  type: string
                                  example: "0"
                        result:
                          type: object
                          properties:
                            log:
                              type: string
                            gas_wanted:
                              type: string
                              example: "200000"
                            gas_used:
                              type: string
                              example: "26354"
                            tags:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
        400:
          description: Invalid search events
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      requestBody:
        description: The tx must be a signed StdTx. The supported broadcast modes
          include `"block"`(return after tx commit), `"sync"`(return afer CheckTx)
          and `"async"`(return right away).
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  type: object
                  properties:
                    msg:
                      type: array
                      items:
                        type: string
                    fee:
                      type: object
                      properties:
                        gas:
                          type: string
                        amount:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: uluna
                              amount:
                                type: string
                                example: "50"
                    memo:
                      type: string
                    signature:
                      type: object
                      properties:
                        signature:
                          type: string
                          example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                        pub_key:
                          type: object
                          properties:
                            type:
                              type: string
                              example: tendermint/PubKeySecp256k1
                            value:
                              type: string
                              example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                        account_number:
                          type: string
                          example: "0"
                        sequence:
                          type: string
                          example: "0"
                mode:
                  type: string
                  example: block
                sequences:
                  type: array
                  items:
                    type: string
                    example: "1"
                fee_granter:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: true
      responses:
        200:
          description: Tx broadcasting result
          content:
            application/json:
              schema:
                type: object
                properties:
                  check_tx:
                    type: object
                    properties:
                      code:
                        type: integer
                      data:
                        type: string
                      gas_used:
                        type: integer
                      gas_wanted:
                        type: integer
                      info:
                        type: string
                      log:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                    example:
                      code: 0
                      data: data
                      log: log
                      gas_used: 5000
                      gas_wanted: 10000
                      info: info
                      tags:
                      - ""
                      - ""
                  deliver_tx:
                    type: object
                    properties:
                      code:
                        type: integer
                      data:
                        type: string
                      gas_used:
                        type: integer
                      gas_wanted:
                        type: integer
                      info:
                        type: string
                      log:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                    example:
                      code: 5
                      data: data
                      log: log
                      gas_used: 5000
                      gas_wanted: 10000
                      info: info
                      tags:
                      - ""
                      - ""
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  height:
                    type: integer
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: txBroadcast
  /txs/encode:
    post:
      tags:
      - Transactions
      summary: Encode a legacy transaction to the Proto wire format
      description: Encode a legacy transaction (signed or not) from JSON to base64-encoded
        Proto serialized bytes
      requestBody:
        description: The tx to encode
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  type: object
                  properties:
                    msg:
                      type: array
                      items:
                        type: string
                    fee:
                      type: object
                      properties:
                        gas:
                          type: string
                        amount:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: uluna
                              amount:
                                type: string
                                example: "50"
                    memo:
                      type: string
                    signature:
                      type: object
                      properties:
                        signature:
                          type: string
                          example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                        pub_key:
                          type: object
                          properties:
                            type:
                              type: string
                              example: tendermint/PubKeySecp256k1
                            value:
                              type: string
                              example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                        account_number:
                          type: string
                          example: "0"
                        sequence:
                          type: string
                          example: "0"
                sequences:
                  type: array
                  items:
                    type: string
                    example: "1"
                fee_granter:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: true
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          content:
            application/json:
              schema:
                type: object
                properties:
                  tx:
                    type: string
                    example: The base64-encoded Proto-serialized bytes for the tx
        400:
          description: The tx was malformed
          content: {}
        500:
          description: Server internal error
          content: {}
      deprecated: true
      x-codegen-request-body-name: tx
  /txs/decode:
    post:
      tags:
      - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino
        serialized bytes to JSON
      requestBody:
        description: The tx to decode
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  type: string
                  example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
        required: true
      responses:
        200:
          description: The tx was successfully decoded
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: The tx was malformed
          content: {}
        500:
          description: Server internal error
          content: {}
      deprecated: true
      x-codegen-request-body-name: tx
  /txs/estimate_fee:
    post:
      tags:
      - Transactions
      summary: Estimate fee and gas of a transaction
      description: Estimate fee and gas of a transaction according to given parameters
      requestBody:
        description: The sender and tx information
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                msgs:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        200:
          description: The fee was successfully estimated
          content:
            application/json:
              schema:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        400:
          description: The tx was malformed
          content: {}
        500:
          description: Server internal error
          content: {}
      deprecated: true
      x-codegen-request-body-name: transaction
  /bank/balances/{address}:
    get:
      tags:
      - Bank
      summary: Get the account balances
      parameters:
      - name: address
        in: path
        description: Account address in bech32 format
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account balances
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        500:
          description: Server internal error
          content: {}
      deprecated: true
  /bank/accounts/{address}/transfers:
    post:
      tags:
      - Bank
      summary: Send coins from one account to another
      parameters:
      - name: address
        in: path
        description: Account address in bech32 format
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      requestBody:
        description: The sender and tx information
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                coins:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        required: true
      responses:
        202:
          description: Tx was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid request
          content: {}
        500:
          description: Server internal error
          content: {}
      deprecated: true
      x-codegen-request-body-name: account
  /bank/total:
    get:
      tags:
      - Bank
      summary: Total supply of coins in the chain
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /bank/total/{denomination}:
    get:
      tags:
      - Bank
      summary: Total supply of a single coin denomination
      parameters:
      - name: denomination
        in: path
        description: Coin denomination
        required: true
        schema:
          type: string
        example: uluna
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid coin denomination
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /auth/accounts/{address}:
    get:
      tags:
      - Auth
      summary: Get the account information on blockchain
      parameters:
      - name: address
        in: path
        description: Account address
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: object
                properties:
                  Account:
                    type: object
                    properties:
                      type:
                        type: string
                        example: core/Account
                      value:
                        type: object
                        properties:
                          account_number:
                            type: string
                          address:
                            type: string
                          public_key:
                            type: string
                          sequence:
                            type: string
                  LazyGradedVestingAccount:
                    type: object
                    properties:
                      type:
                        type: string
                        example: core/LazyGradedVestingAccount
                      value:
                        type: object
                        properties:
                          BaseVestingAccount:
                            type: object
                            properties:
                              BaseAccount:
                                type: object
                                properties:
                                  account_number:
                                    type: string
                                  address:
                                    type: string
                                  public_key:
                                    type: string
                                  sequence:
                                    type: string
                              original_vesting:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                      example: uluna
                                    amount:
                                      type: string
                                      example: "50"
                              delegated_free:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                      example: uluna
                                    amount:
                                      type: string
                                      example: "50"
                              delegated_vesting:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                      example: uluna
                                    amount:
                                      type: string
                                      example: "50"
                              end_time:
                                type: string
                                example: "0"
                          vesting_schedules:
                            type: array
                            items:
                              type: object
                              properties:
                                denom:
                                  type: string
                                  example: usdr
                                lazy_schedules:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      start_time:
                                        type: string
                                        example: "1556085600"
                                      end_time:
                                        type: string
                                        example: "1556085600"
                                      ratio:
                                        type: string
                                        example: "0.100000000000000000"
        500:
          description: Server internal error
          content: {}
      deprecated: true
  /staking/delegators/{delegatorAddr}/delegations:
    get:
      tags:
      - Staking
      summary: Get all delegations from a delegator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                        validator_address:
                          type: string
                        shares:
                          type: string
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Staking
      summary: Submit delegation
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      requestBody:
        description: Delegate an amount of liquid coins to a validator
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                delegator_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                validator_address:
                  type: string
                  description: bech32 encoded address
                  example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator address or delegation request body
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    get:
      tags:
      - Staking
      summary: Query the current delegation between a delegator and a validator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegation:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                      validator_address:
                        type: string
                      shares:
                        type: string
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        400:
          description: Invalid delegator address or validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    get:
      tags:
      - Staking
      summary: Get all unbonding delegations from a delegator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                    validator_address:
                      type: string
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          initial_balance:
                            type: string
                          balance:
                            type: string
                          creation_height:
                            type: string
                          completion_time:
                            type: string
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Staking
      summary: Submit an unbonding delegation
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      requestBody:
        description: Unbond an amount of bonded shares from a validator
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                delegator_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                validator_address:
                  type: string
                  description: bech32 encoded address
                  example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                amount:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator address or unbonding delegation request body
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    get:
      tags:
      - Staking
      summary: Query all unbonding delegations between a delegator and a validator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegator_address:
                    type: string
                  validator_address:
                    type: string
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        initial_balance:
                          type: string
                        balance:
                          type: string
                        creation_height:
                          type: string
                        completion_time:
                          type: string
        400:
          description: Invalid delegator address or validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/redelegations:
    get:
      tags:
      - Staking
      summary: Get all redelegations (filter by query params)
      parameters:
      - name: delegator
        in: query
        description: Bech32 AccAddress of Delegator
        schema:
          type: string
      - name: validator_from
        in: query
        description: Bech32 ValAddress of SrcValidator
        schema:
          type: string
      - name: validator_to
        in: query
        description: Bech32 ValAddress of DstValidator
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                    validator_src_address:
                      type: string
                    validator_dst_address:
                      type: string
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          creation_height:
                            type: integer
                          completion_time:
                            type: integer
                          initial_balance:
                            type: string
                          balance:
                            type: string
                          shares_dst:
                            type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/delegators/{delegatorAddr}/redelegations:
    post:
      tags:
      - Staking
      summary: Submit a redelegation
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      requestBody:
        description: The sender and tx information
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                delegator_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                validator_src_address:
                  type: string
                  description: bech32 encoded address
                  example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                validator_dst_address:
                  type: string
                  description: bech32 encoded address
                  example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                amount:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        required: false
      responses:
        200:
          description: Tx was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator address or redelegation request body
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/validators:
    get:
      tags:
      - Staking
      summary: Query all validators that a delegator is bonded to
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                      description: bech32 encoded address
                      example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                    consensus_pubkey:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: string
                    jailed:
                      type: boolean
                    status:
                      type: integer
                    tokens:
                      type: string
                    delegator_shares:
                      type: string
                    description:
                      type: object
                      properties:
                        moniker:
                          type: string
                        identity:
                          type: string
                        website:
                          type: string
                        security_contact:
                          type: string
                        details:
                          type: string
                    bond_height:
                      type: string
                      example: "0"
                    bond_intra_tx_counter:
                      type: integer
                      example: 0
                    unbonding_height:
                      type: string
                      example: "0"
                    unbonding_time:
                      type: string
                      example: 1970-01-01T00:00:00Z
                    commission:
                      type: object
                      properties:
                        rate:
                          type: string
                          example: "0"
                        max_rate:
                          type: string
                          example: "0"
                        max_change_rate:
                          type: string
                          example: "0"
                        update_time:
                          type: string
                          example: 1970-01-01T00:00:00Z
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    get:
      tags:
      - Staking
      summary: Query a validator that a delegator is bonded to
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - name: validatorAddr
        in: path
        description: Bech32 ValAddress of Delegator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: bech32 encoded address
                    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                  consensus_pubkey:
                    type: object
                    properties:
                      type:
                        type: string
                      value:
                        type: string
                  jailed:
                    type: boolean
                  status:
                    type: integer
                  tokens:
                    type: string
                  delegator_shares:
                    type: string
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                      identity:
                        type: string
                      website:
                        type: string
                      security_contact:
                        type: string
                      details:
                        type: string
                  bond_height:
                    type: string
                    example: "0"
                  bond_intra_tx_counter:
                    type: integer
                    example: 0
                  unbonding_height:
                    type: string
                    example: "0"
                  unbonding_time:
                    type: string
                    example: 1970-01-01T00:00:00Z
                  commission:
                    type: object
                    properties:
                      rate:
                        type: string
                        example: "0"
                      max_rate:
                        type: string
                        example: "0"
                      max_change_rate:
                        type: string
                        example: "0"
                      update_time:
                        type: string
                        example: 1970-01-01T00:00:00Z
        400:
          description: Invalid delegator address or validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/validators:
    get:
      tags:
      - Staking
      summary: Get all validator candidates. By default it returns only the bonded
        validators.
      parameters:
      - name: status
        in: query
        description: The validator bond status. Must be either 'bonded', 'unbonded',
          or 'unbonding'.
        schema:
          type: string
        example: bonded
      - name: page
        in: query
        description: The page number.
        schema:
          type: integer
        example: 1
      - name: limit
        in: query
        description: The maximum number of items per page.
        schema:
          type: integer
        example: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                      description: bech32 encoded address
                      example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                    consensus_pubkey:
                      type: object
                      properties:
                        type:
                          type: string
                        value:
                          type: string
                    jailed:
                      type: boolean
                    status:
                      type: integer
                    tokens:
                      type: string
                    delegator_shares:
                      type: string
                    description:
                      type: object
                      properties:
                        moniker:
                          type: string
                        identity:
                          type: string
                        website:
                          type: string
                        security_contact:
                          type: string
                        details:
                          type: string
                    bond_height:
                      type: string
                      example: "0"
                    bond_intra_tx_counter:
                      type: integer
                      example: 0
                    unbonding_height:
                      type: string
                      example: "0"
                    unbonding_time:
                      type: string
                      example: 1970-01-01T00:00:00Z
                    commission:
                      type: object
                      properties:
                        rate:
                          type: string
                          example: "0"
                        max_rate:
                          type: string
                          example: "0"
                        max_change_rate:
                          type: string
                          example: "0"
                        update_time:
                          type: string
                          example: 1970-01-01T00:00:00Z
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/validators/{validatorAddr}:
    get:
      tags:
      - Staking
      summary: Query the information from a single validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: bech32 encoded address
                    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                  consensus_pubkey:
                    type: object
                    properties:
                      type:
                        type: string
                      value:
                        type: string
                  jailed:
                    type: boolean
                  status:
                    type: integer
                  tokens:
                    type: string
                  delegator_shares:
                    type: string
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                      identity:
                        type: string
                      website:
                        type: string
                      security_contact:
                        type: string
                      details:
                        type: string
                  bond_height:
                    type: string
                    example: "0"
                  bond_intra_tx_counter:
                    type: integer
                    example: 0
                  unbonding_height:
                    type: string
                    example: "0"
                  unbonding_time:
                    type: string
                    example: 1970-01-01T00:00:00Z
                  commission:
                    type: object
                    properties:
                      rate:
                        type: string
                        example: "0"
                      max_rate:
                        type: string
                        example: "0"
                      max_change_rate:
                        type: string
                        example: "0"
                      update_time:
                        type: string
                        example: 1970-01-01T00:00:00Z
        400:
          description: Invalid validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/validators/{validatorAddr}/delegations:
    get:
      tags:
      - Staking
      summary: Get all delegations from a validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                        validator_address:
                          type: string
                        shares:
                          type: string
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        400:
          description: Invalid validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/validators/{validatorAddr}/unbonding_delegations:
    get:
      tags:
      - Staking
      summary: Get all unbonding delegations from a validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                    validator_address:
                      type: string
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          initial_balance:
                            type: string
                          balance:
                            type: string
                          creation_height:
                            type: string
                          completion_time:
                            type: string
        400:
          description: Invalid validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/pool:
    get:
      tags:
      - Staking
      summary: Get the current state of the staking pool
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bonded_tokens:
                    type: string
                  not_bonded_tokens:
                    type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /staking/parameters:
    get:
      tags:
      - Staking
      summary: Get the current staking parameter values
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                  max_entries:
                    type: integer
                  historical_entries:
                    type: integer
                  bond_denom:
                    type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /slashing/signing_infos:
    get:
      tags:
      - Slashing
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      parameters:
      - name: page
        in: query
        description: Page number
        required: true
        schema:
          type: integer
        example: 1
      - name: limit
        in: query
        description: Maximum number of items per page
        required: true
        schema:
          type: integer
        example: 5
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      example: terravalcons1qsdpq864szmfk8nh82qcg7lyle6k95w07acdqn
                    start_height:
                      type: string
                    index_offset:
                      type: string
                    jailed_until:
                      type: string
                    missed_blocks_counter:
                      type: string
        400:
          description: Invalid validator public key for one of the validators
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /slashing/validators/{validatorAddr}/unjail:
    post:
      tags:
      - Slashing
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 validator address
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    msg:
                      type: array
                      items:
                        type: string
                    fee:
                      type: object
                      properties:
                        gas:
                          type: string
                        amount:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: uluna
                              amount:
                                type: string
                                example: "50"
                    memo:
                      type: string
                    signature:
                      type: object
                      properties:
                        signature:
                          type: string
                          example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                        pub_key:
                          type: object
                          properties:
                            type:
                              type: string
                              example: tendermint/PubKeySecp256k1
                            value:
                              type: string
                              example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                        account_number:
                          type: string
                          example: "0"
                        sequence:
                          type: string
                          example: "0"
        required: true
      responses:
        200:
          description: Tx was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid validator address or base_req
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: UnjailBody
  /slashing/parameters:
    get:
      tags:
      - Slashing
      summary: Get the current slashing parameters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  signed_blocks_window:
                    type: string
                  min_signed_per_window:
                    type: string
                  downtime_jail_duration:
                    type: string
                  slash_fraction_double_sign:
                    type: string
                  slash_fraction_downtime:
                    type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/proposals:
    get:
      tags:
      - Governance
      summary: Query proposals
      description: Query proposals information with parameters
      parameters:
      - name: voter
        in: query
        description: voter address
        schema:
          type: string
      - name: depositor
        in: query
        description: depositor address
        schema:
          type: string
      - name: status
        in: query
        description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`,
          `"passed"`, `"rejected"`
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "1"
                    content:
                      type: object
                      properties:
                        type:
                          type: string
                          example: gov/TextProposal
                        value:
                          type: object
                          properties:
                            title:
                              type: string
                            description:
                              type: string
                    status:
                      type: number
                    final_tally_result:
                      type: object
                      properties:
                        "yes":
                          type: string
                          example: "0.0000000000"
                        abstain:
                          type: string
                          example: "0.0000000000"
                        "no":
                          type: string
                          example: "0.0000000000"
                        no_with_veto:
                          type: string
                          example: "0.0000000000"
                    total_deposit:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    submit_time:
                      type: string
                    deposit_end_time:
                      type: string
                    voting_start_time:
                      type: string
                    voting_end_time:
                      type: string
        400:
          description: Invalid query parameters
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Governance
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      requestBody:
        description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`,
          `"software_upgrade"`
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  type: string
                  example: text
                proposer:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                initial_deposit:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        required: true
      responses:
        200:
          description: Tx was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid proposal body
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: post_proposal_body
  /gov/proposals/param_change:
    post:
      tags:
      - Governance
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      requestBody:
        description: The parameter change proposal body that contains all parameter
          changes
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                title:
                  type: string
                description:
                  type: string
                proposer:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                deposit:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                changes:
                  type: array
                  items:
                    type: object
                    properties:
                      subspace:
                        type: string
                        example: staking
                      key:
                        type: string
                        example: MaxValidators
                      subkey:
                        type: string
                        example: ""
                      value:
                        type: object
                        properties: {}
        required: true
      responses:
        200:
          description: The transaction was successfully generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid proposal body
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: post_proposal_body
  /gov/proposals/{proposalId}:
    get:
      tags:
      - Governance
      summary: Query a proposal
      description: Query a proposal by id
      parameters:
      - name: proposalId
        in: path
        required: true
        schema:
          type: string
        example: "2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "1"
                  content:
                    type: object
                    properties:
                      type:
                        type: string
                        example: gov/TextProposal
                      value:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                  status:
                    type: number
                  final_tally_result:
                    type: object
                    properties:
                      "yes":
                        type: string
                        example: "0.0000000000"
                      abstain:
                        type: string
                        example: "0.0000000000"
                      "no":
                        type: string
                        example: "0.0000000000"
                      no_with_veto:
                        type: string
                        example: "0.0000000000"
                  total_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
                  submit_time:
                    type: string
                  deposit_end_time:
                    type: string
                  voting_start_time:
                    type: string
                  voting_end_time:
                    type: string
        400:
          description: Invalid proposal id
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/proposals/{proposalId}/proposer:
    get:
      tags:
      - Governance
      summary: Query proposer
      description: Query for the proposer for a proposal
      parameters:
      - name: proposalId
        in: path
        required: true
        schema:
          type: string
        example: "2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  proposal_id:
                    type: string
                  proposer:
                    type: string
        400:
          description: Invalid proposal ID
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/proposals/{proposalId}/deposits:
    get:
      tags:
      - Governance
      summary: Query deposits
      description: Query deposits by proposalId
      parameters:
      - name: proposalId
        in: path
        required: true
        schema:
          type: string
        example: "2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    proposal_id:
                      type: string
                    depositor:
                      type: string
                      description: bech32 encoded address
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        400:
          description: Invalid proposal id
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Governance
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                depositor:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                amount:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid proposal id or deposit body
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: post_deposit_body
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      tags:
      - Governance
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      - name: depositor
        in: path
        description: Bech32 depositor address
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
                  proposal_id:
                    type: string
                  depositor:
                    type: string
                    description: bech32 encoded address
                    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        400:
          description: Invalid proposal id or depositor address
          content: {}
        404:
          description: Found no deposit
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/proposals/{proposalId}/votes:
    get:
      tags:
      - Governance
      summary: Query voters
      description: Query voters information by proposalId
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    voter:
                      type: string
                    proposal_id:
                      type: string
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          option:
                            type: string
                            description: |-
                              VoteOption enumerates the valid vote options for a given governance proposal.
                              - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option. - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option. - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option. - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option. - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                            default: VOTE_OPTION_UNSPECIFIED
                            enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                          weight:
                            type: string
        400:
          description: Invalid proposal id
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Governance
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      requestBody:
        description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"`
          and `"abstain"`
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                voter:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                option:
                  type: string
                  example: yes
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid proposal id or vote body
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: post_vote_body
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      tags:
      - Governance
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      - name: voter
        in: path
        description: Bech32 voter address
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  voter:
                    type: string
                  proposal_id:
                    type: string
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        option:
                          type: string
                          description: |-
                            VoteOption enumerates the valid vote options for a given governance proposal.
                            - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option. - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option. - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option. - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option. - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                          default: VOTE_OPTION_UNSPECIFIED
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        weight:
                          type: string
        400:
          description: Invalid proposal id or voter address
          content: {}
        404:
          description: Found no vote
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/proposals/{proposalId}/tally:
    get:
      tags:
      - Governance
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal
        is pending deposits (i.e status 'DepositPeriod') it returns an empty tally
        result.
      parameters:
      - name: proposalId
        in: path
        description: proposal id
        required: true
        schema:
          type: string
        example: "2"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  "yes":
                    type: string
                    example: "0.0000000000"
                  abstain:
                    type: string
                    example: "0.0000000000"
                  "no":
                    type: string
                    example: "0.0000000000"
                  no_with_veto:
                    type: string
                    example: "0.0000000000"
        400:
          description: Invalid proposal id
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/parameters/deposit:
    get:
      tags:
      - Governance
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units
        are in nanoseconds.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
                  max_deposit_period:
                    type: string
                    example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
          content: {}
        404:
          description: Found no deposit parameters
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/parameters/tallying:
    get:
      tags:
      - Governance
      summary: Query governance tally parameters
      description: Query governance tally parameters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: <other_path> is not a valid query request path
          content: {}
        404:
          description: Found no tally parameters
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /gov/parameters/voting:
    get:
      tags:
      - Governance
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are
        in nanoseconds.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: <other_path> is not a valid query request path
          content: {}
        404:
          description: Found no voting parameters
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /distribution/delegators/{delegatorAddr}/rewards:
    get:
      tags:
      - Distribution
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single
        delegator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                          description: bech32 encoded address
                          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                        reward:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                example: uluna
                              amount:
                                type: string
                                example: "50"
                  total:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Distribution
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator address
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Withdraw request body
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    get:
      tags:
      - Distribution
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Distribution
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator address or delegation body
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Withdraw request body
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    get:
      tags:
      - Distribution
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address
        in which the user will receive the reward funds
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
        example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: bech32 encoded address
                example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        400:
          description: Invalid delegator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Distribution
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      parameters:
      - name: delegatorAddr
        in: path
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                withdraw_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid delegator or withdraw address
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Withdraw request body
  /distribution/validators/{validatorAddr}:
    get:
      tags:
      - Distribution
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: bech32 encoded address
                    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                  self_bond_rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
                  val_commission:
                    type: object
                    properties:
                      commission:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
        400:
          description: Invalid validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    get:
      tags:
      - Distribution
      summary: Fee distribution outstanding rewards of a single validator
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: uluna
                        amount:
                          type: string
                          example: "50"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /distribution/validators/{validatorAddr}/rewards:
    get:
      tags:
      - Distribution
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
        example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        400:
          description: Invalid validator address
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Distribution
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      parameters:
      - name: validatorAddr
        in: path
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Invalid validator address
          content: {}
        401:
          description: Key password is wrong
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Withdraw request body
  /distribution/community_pool:
    get:
      tags:
      - Distribution
      summary: Community pool parameters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /distribution/parameters:
    get:
      tags:
      - Distribution
      summary: Fee distribution parameters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /minting/parameters:
    get:
      tags:
      - Mint
      summary: Minting module parameters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /minting/inflation:
    get:
      tags:
      - Mint
      summary: Current minting inflation value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /minting/annual-provisions:
    get:
      tags:
      - Mint
      summary: Current minting annual provisions value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /market/swap:
    get:
      tags:
      - Market
      summary: Query swap result amount
      parameters:
      - name: offer_coin
        in: query
        description: coin expression want to swap
        required: true
        schema:
          type: string
        example: 1000000uluna
      - name: ask_denom
        in: query
        description: Then coin denom want to ask
        required: true
        schema:
          type: string
        example: usdr
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Market
      summary: Swap coin with another coin
      requestBody:
        content:
          '*/*':
            schema:
              required:
              - ask_denom
              - base_req
              - offer_coin
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                offer_coin:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
                ask_denom:
                  type: string
                  example: uluna
                receiver:
                  type: string
                  description: the `receiver` field can be skipped when the receiver
                    is trader
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Swap coin request body
  /market/terra_pool_delta:
    get:
      tags:
      - Market
      summary: Get terra pool delta, is usdr amount used for swap operation from the
        TerraPool.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: float
                example: 1.0E+7
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /market/parameters:
    get:
      tags:
      - Market
      summary: Get market params
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  base_pool:
                    type: number
                    example: 1000000.0
                  pool_recovery_period:
                    type: number
                    example: 16000.0
                  min_stability_spread:
                    type: number
                    example: 0.02
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /oracle/denoms/{denom}/exchange_rate:
    get:
      tags:
      - Oracle
      summary: Get the current effective exchange rate in Luna for the asset
      parameters:
      - name: denom
        in: path
        description: The coin denom to get
        required: true
        schema:
          type: string
      responses:
        200:
          description: current exchange rate of denom i.e. "1000.0"
          content:
            application/json:
              schema:
                type: number
                example: 1872.0
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /oracle/denoms/exchange_rates:
    get:
      tags:
      - Oracle
      summary: Get all activated exchange rates
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: ukrw
                    amount:
                      type: string
                      example: "50.000"
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /oracle/denoms/actives:
    get:
      tags:
      - Oracle
      summary: Get all activated denoms
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                example:
                - ukrw
                - usdr
                items:
                  type: string
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /oracle/voters/{validator}/feeder:
    get:
      tags:
      - Oracle
      summary: Get delegated oracle feeder of a validator
      parameters:
      - name: validator
        in: path
        description: Feeder right delegator
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: bech32 encoded address
                example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Oracle
      summary: Generate oracle feeder right delegation message
      parameters:
      - name: validator
        in: path
        description: Feeder right delegator
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                feeder:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: feeder right delegation request body
  /oracle/voters/{validator}/miss:
    get:
      tags:
      - Oracle
      summary: Get the number of vote periods missed in this oracle slash window.
      parameters:
      - name: validator
        in: path
        description: oracle operator
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: integer
                example: 100.0
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /oracle/voters/{validator}/aggregate_prevote:
    get:
      tags:
      - Oracle
      summary: Get the currently outstanding aggregate exchange rate oracle prevote
        of a validator
      parameters:
      - name: validator
        in: path
        description: oracle operator
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    example: 061bf1e27dfff121f40c826e593c8a28ec299a02
                  voter:
                    type: string
                    description: bech32 encoded address
                    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
                  submit_block:
                    type: number
                    example: 1.0
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Oracle
      summary: Generate oracle aggregate exchange rate prevote message containing
        a hash
      parameters:
      - name: validator
        in: path
        description: oracle operator
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                exchange_rates:
                  type: string
                  description: exchange rates of Luna in denom currencies are to make
                    aggregate prevote hash; this field is required to submit prevote
                    in case absence of hash
                  example: 1000.0ukrw,1.2uusd,0.99usdr
                salt:
                  type: string
                  description: salt is to make prevote hash; this field is required
                    to submit prevote in case  absence of hash
                  example: abcd
                hash:
                  type: string
                  description: hex string; hash of next vote; empty == skip prevote
                  example: 061bf1e27dfff121f40c826e593c8a28ec299a02
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Aggregate Prevote request body
  /oracle/voters/{validator}/aggregate_vote:
    get:
      tags:
      - Oracle
      summary: Get the currently outstanding aggregate exchange rate oracle vote of
        a validator
      parameters:
      - name: validator
        in: path
        description: oracle operator
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exchange_rates:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: ukrw
                        amount:
                          type: string
                          example: "50.000"
                  voter:
                    type: string
                    description: bech32 encoded address
                    example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
    post:
      tags:
      - Oracle
      summary: Generate oracle aggregate exchange rate vote message containing exchange
        rates and salt to prove the aggregate prevote
      parameters:
      - name: validator
        in: path
        description: oracle operator
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                exchange_rates:
                  type: string
                  description: proof exchange rates of Luna in denom currency were
                    used to make aggregate prevote hash
                  example: 1000.0ukrw,1.2uusd,0.99usdr
                salt:
                  type: string
                  description: proof salt was used to make prevote hash; initial prevote
                    does not require this field
                  example: abcd
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: Aggregate Vote request body
  /oracle/parameters:
    get:
      tags:
      - Oracle
      summary: Get oracle params
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vote_period:
                    type: number
                    example: 900.0
                  vote_threshold:
                    type: number
                    example: 0.67
                  drop_threshold:
                    type: number
                    example: 10.0
                  oracle_reward_band:
                    type: number
                    example: 0.02
        400:
          description: Bad Request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /treasury/tax_rate:
    get:
      tags:
      - Treasury
      summary: Get current tax rate
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: float
                example: 0.05
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /treasury/tax_cap/{denom}:
    get:
      tags:
      - Treasury
      summary: Get tax cap of the denom
      parameters:
      - name: denom
        in: path
        description: Denom
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                example: 100000
        404:
          description: Not Found
          content: {}
      deprecated: true
  /treasury/tax_caps:
    get:
      tags:
      - Treasury
      summary: Get tax caps for the all whitelisted denoms
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    tax_cap:
                      type: string
                      example: "50"
        404:
          description: Not Found
          content: {}
      deprecated: true
  /treasury/reward_weight:
    get:
      tags:
      - Treasury
      summary: Get current reward weight
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: number
                description: 5%
                format: float
                example: 0.05
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /treasury/tax_proceeds:
    get:
      tags:
      - Treasury
      summary: Get current tax proceeds
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
  /treasury/seigniorage_proceeds:
    get:
      tags:
      - Treasury
      summary: retrieves the size of the seigniorage pool
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                example: 0
        500:
          description: Internal Server
          content: {}
      deprecated: true
  /treasury/parameters:
    get:
      tags:
      - Treasury
      summary: Get treasury module params
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tax_policy:
                    type: object
                    properties:
                      rate_min:
                        type: number
                        description: 0.05%
                        format: float
                        example: 0.00050
                      rate_max:
                        type: number
                        description: 1%
                        format: float
                        example: 0.01
                      cap:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                      change_max:
                        type: number
                        description: 0.025%
                        format: float
                        example: 0.00025
                  reward_policy:
                    type: object
                    properties:
                      rate_min:
                        type: number
                        description: 0.05%
                        format: float
                        example: 0.00050
                      rate_max:
                        type: number
                        description: 1%
                        format: float
                        example: 0.01
                      cap:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                      change_max:
                        type: number
                        description: 0.025%
                        format: float
                        example: 0.00025
                  seigniorage_burden_target:
                    type: number
                    description: 67%
                    format: float
                    example: 0.67
                  mining_increment:
                    type: number
                    format: float
                    example: 1.07
                  window_short:
                    type: integer
                    example: 4
                  window_long:
                    type: integer
                    example: 52
                  window_probation:
                    type: integer
                    example: 12
        404:
          description: Not Found
          content: {}
      deprecated: true
  /treasury/indicators:
    get:
      tags:
      - Treasury
      summary: Get the current treasury indicators
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
      deprecated: true
  /wasm/codes:
    post:
      tags:
      - Wasm
      summary: Generate wasm store code message
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                wasm_bytes:
                  type: string
                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: store code request body
  /wasm/codes/{codeID}:
    get:
      tags:
      - Wasm
      summary: Get code info of the code ID
      parameters:
      - name: codeID
        in: path
        description: code ID you want to instantiate
        required: true
        schema:
          type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code_hash:
                    type: string
                  creator:
                    type: string
      deprecated: true
    post:
      tags:
      - Wasm
      summary: Instantiate wasm contract
      parameters:
      - name: codeID
        in: path
        description: code ID you want to instantiate
        required: true
        schema:
          type: number
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                init_coins:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                init_msg:
                  type: string
                  description: json formatted string
                  example: '{}'
                admin:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: instantiate contract request body
  /wasm/codes/{codeID}/migrate:
    post:
      tags:
      - Wasm
      summary: Migrate old wasm code to new wasm code
      parameters:
      - name: codeID
        in: path
        description: code ID you want to migrate
        required: true
        schema:
          type: number
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                wasm_bytes:
                  type: string
                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: migrate contract request body
  /wasm/contracts/{contractAddress}:
    get:
      tags:
      - Wasm
      summary: Get contract info of the contract Address
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to execute
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code_id:
                    type: string
                  address:
                    type: string
                    description: bech32 encoded address
                    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                  creator:
                    type: string
                    description: bech32 encoded address
                    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                  admin:
                    type: string
                    description: bech32 encoded address
                    example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                  init_msg:
                    type: string
      deprecated: true
    post:
      tags:
      - Wasm
      summary: Execute wasm contract message
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to execute
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                coins:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                exec_msg:
                  type: string
                  example: '{}'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: execute contract request body
  /wasm/contracts/{contractAddress}/migrate:
    post:
      tags:
      - Wasm
      summary: Migrate wasm contract to new code base
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to migrate
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                new_code_id:
                  type: number
                  format: integer
                  example: 10.0
                migrate_msg:
                  type: string
                  example: '{}'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: migrate contract request body
  /wasm/contracts/{contractAddress}/admin/update:
    post:
      tags:
      - Wasm
      summary: Update wasm contract admin to new address
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to update admin
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
                new_admin:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: update contract admin request body
  /wasm/contracts/{contractAddress}/admin/clear:
    post:
      tags:
      - Wasm
      summary: Clear wasm contract admin to make the contract un-migratable
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to clear admin
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                base_req:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Sender address or Keybase name to generate a transaction
                      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                    memo:
                      type: string
                      example: Sent via Terra Station
                    chain_id:
                      type: string
                      example: Columbus-5
                    account_number:
                      type: string
                      example: "0"
                    sequence:
                      type: string
                      example: "1"
                    gas:
                      type: string
                      example: "200000"
                    gas_adjustment:
                      type: string
                      example: "1.2"
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: uluna
                          amount:
                            type: string
                            example: "50"
                    simulate:
                      type: boolean
                      description: Estimate gas for a transaction (cannot be used
                        in conjunction with generate_only)
                      example: false
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
        400:
          description: Bad request
          content: {}
        500:
          description: Internal Server Error
          content: {}
      deprecated: true
      x-codegen-request-body-name: clear contract admin request body
  /wasm/contracts/{contractAddress}/store:
    get:
      tags:
      - Wasm
      summary: Get stored information with query msg
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to lookup
        required: true
        schema:
          type: string
      - name: query_msg
        in: query
        description: json formatted query msg
        required: true
        schema:
          type: string
        example: '{}'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
      deprecated: true
  /wasm/contracts/{contractAddress}/store/raw:
    get:
      tags:
      - Wasm
      summary: Get stored information with store key
      parameters:
      - name: contractAddress
        in: path
        description: contract address you want to lookup
        required: true
        schema:
          type: string
      - name: key
        in: query
        description: base64 encoded raw key to access
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
      deprecated: true
  /wasm/parameters:
    get:
      tags:
      - Wasm
      summary: Get wasm module params
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  max_contract_size:
                    type: number
                    description: allowed max contract bytes size
                    format: integer
                    example: 1000000.0
                  max_contract_gas:
                    type: number
                    description: allowed max gas usages per each contract execution
                    format: integer
                    example: 1000000.0
                  max_contract_msg_size:
                    type: number
                    description: allowed max contract exe msg bytes size
                    format: integer
                    example: 1000000.0
                  max_contract_data_size:
                    type: number
                    description: allowed max contract return data size
                    format: integer
                    example: 100.0
                  event_params:
                    type: object
                    properties:
                      max_attribute_num:
                        type: string
                        description: 'allowed max # of contract attribute num'
                        example: "128"
                      max_attribute_key_length:
                        type: string
                        description: allowed max length of a contract event attribute
                          key
                        example: "128"
                      max_attribute_value_length:
                        type: string
                        description: allowed max length of a contract event attribute
                          value
                        example: "128"
        404:
          description: Not Found
          content: {}
      deprecated: true
  /cosmos/auth/v1beta1/accounts:
    get:
      tags:
      - Query
      summary: Accounts returns all the existing accounts
      description: 'Since: cosmos-sdk 0.43'
      operationId: Accounts
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  accounts:
                    title: accounts are the existing accounts
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAccountsResponse is the response type for the Query/Accounts RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      tags:
      - Query
      summary: Account returns account details based on address.
      operationId: Account
      parameters:
      - name: address
        in: path
        description: address defines the address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryAccountResponse is the response type for the Query/Account
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/auth/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_memo_characters:
                        type: string
                        format: uint64
                      tx_sig_limit:
                        type: string
                        format: uint64
                      tx_size_cost_per_byte:
                        type: string
                        format: uint64
                      sig_verify_cost_ed25519:
                        type: string
                        format: uint64
                      sig_verify_cost_secp256k1:
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/authz/v1beta1/grants:
    get:
      tags:
      - Query
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: Grants
      parameters:
      - name: granter
        in: query
        schema:
          type: string
      - name: grantee
        in: query
        schema:
          type: string
      - name: msg_type_url
        in: query
        description: Optional, msg_type_url, when set, will query only grants matching
          given msg type.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    description: authorizations is a list of grants granted for grantee
                      by granter.
                    items:
                      type: object
                      properties:
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        expiration:
                          type: string
                          format: date-time
                      description: |-
                        Grant gives permissions to execute
                        the provide method with expiration time.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryGrantsResponse is the response type for the Query/Authorizations
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      tags:
      - Query
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: AllBalances
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    description: balances is the balances of all the coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      tags:
      - Query
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance
      parameters:
      - name: address
        in: path
        description: address is the address to query balances for.
        required: true
        schema:
          type: string
      - name: denom
        in: query
        description: denom is the coin denom to query balances for.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QueryBalanceResponse is the response type for the Query/Balance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      tags:
      - Query
      summary: DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadatas:
                    type: array
                    description: metadata provides the client information for all
                      the registered tokens.
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        denom_units:
                          title: denom_units represents the list of DenomUnit's for
                            a given coin
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                description: denom represents the string name of the
                                  given denom unit (e.g uatom).
                              exponent:
                                type: integer
                                description: |-
                                  exponent represents power of 10 exponent that one must
                                  raise the base_denom to in order to equal the given DenomUnit's denom
                                  1 denom = 1^exponent base_denom
                                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                  exponent = 6, thus: 1 atom = 10^6 uatom).
                                format: int64
                              aliases:
                                title: aliases is a list of string aliases for the
                                  given denom
                                type: array
                                items:
                                  type: string
                            description: |-
                              DenomUnit represents a struct that describes a given
                              denomination unit of the basic token.
                        base:
                          type: string
                          description: base represents the base denom (should be the
                            DenomUnit with exponent = 0).
                        display:
                          type: string
                          description: |-
                            display indicates the suggested denom that should be
                            displayed in clients.
                        name:
                          title: 'name defines the name of the token (eg: Cosmos Atom)'
                          type: string
                          description: 'Since: cosmos-sdk 0.43'
                        symbol:
                          type: string
                          description: |-
                            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                            be the same as the display.

                            Since: cosmos-sdk 0.43
                      description: |-
                        Metadata represents a struct that describes
                        a basic token.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      tags:
      - Query
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      parameters:
      - name: denom
        in: path
        description: denom is the coin denom to query the metadata for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      description:
                        type: string
                      denom_units:
                        title: denom_units represents the list of DenomUnit's for
                          a given coin
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              description: denom represents the string name of the
                                given denom unit (e.g uatom).
                            exponent:
                              type: integer
                              description: |-
                                exponent represents power of 10 exponent that one must
                                raise the base_denom to in order to equal the given DenomUnit's denom
                                1 denom = 1^exponent base_denom
                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                                exponent = 6, thus: 1 atom = 10^6 uatom).
                              format: int64
                            aliases:
                              title: aliases is a list of string aliases for the given
                                denom
                              type: array
                              items:
                                type: string
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                      base:
                        type: string
                        description: base represents the base denom (should be the
                          DenomUnit with exponent = 0).
                      display:
                        type: string
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                      name:
                        title: 'name defines the name of the token (eg: Cosmos Atom)'
                        type: string
                        description: 'Since: cosmos-sdk 0.43'
                      symbol:
                        type: string
                        description: |-
                          symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                          be the same as the display.

                          Since: cosmos-sdk 0.43
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                description: |-
                  QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          description: |-
                            SendEnabled maps coin denom to a send_enabled status (whether a denom is
                            sendable).
                      default_send_enabled:
                        type: boolean
                    description: Params defines the parameters for the bank module.
                description: QueryParamsResponse defines the response type for querying
                  x/bank parameters.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply:
    get:
      tags:
      - Query
      summary: TotalSupply queries the total supply of all coins.
      operationId: TotalSupply
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
                  method
                type: object
                properties:
                  supply:
                    title: supply is the supply of the coins
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      pagination defines the pagination in the response.

                      Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/bank/v1beta1/supply/{denom}:
    get:
      tags:
      - Query
      summary: SupplyOf queries the supply of a single coin.
      operationId: SupplyOf
      parameters:
      - name: denom
        in: path
        description: denom is the coin denom to query balances for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      tags:
      - Service
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a Tendermint block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Tendermint
                                                      Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Tendermint
                                                    Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Tendermint Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      tags:
      - Service
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_id:
                    title: BlockID
                    type: object
                    properties:
                      hash:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      part_set_header:
                        title: PartsetHeader
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a Tendermint
                          block header.
                      data:
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                        properties:
                          txs:
                            type: array
                            description: |-
                              Txs that will be applied by state @ block.Height+1.
                              NOTE: not all txs here are valid.  We're just agreeing on the order first.
                              This means that block.AppHash does not include these txs.
                            items:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          description: |-
                                            SignedMsgType is a type of signed message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          title: BlockID
                                          type: object
                                          properties:
                                            hash:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            part_set_header:
                                              title: PartsetHeader
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: |-
                                        Vote represents a prevote, precommit, or commit vote from validators for
                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: |-
                                                    Consensus captures the consensus rules for processing a block in the blockchain,
                                                    including all blockchain data structures and the rules of the application's
                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                last_commit_hash:
                                                  title: hashes of block data
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                data_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  title: hashes from the app output
                                                    from the prev block
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                next_validators_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  title: consensus info
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                proposer_address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure
                                                of a Tendermint block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  title: BlockID
                                                  type: object
                                                  properties:
                                                    hash:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      title: PartsetHeader
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                          type: string
                                                          format: byte
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                      validator_address:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    title: PublicKey defines the keys
                                                      available for use with Tendermint
                                                      Validators
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                        type: string
                                                        format: byte
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  title: PublicKey defines the keys
                                                    available for use with Tendermint
                                                    Validators
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                      type: string
                                                      format: byte
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          pub_key:
                                            title: PublicKey defines the keys available
                                              for use with Tendermint Validators
                                            type: object
                                            properties:
                                              ed25519:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                              secp256k1:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                validator_address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                description: GetBlockByHeightResponse is the response type for the
                  Query/GetBlockByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      tags:
      - Service
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  default_node_info:
                    type: object
                    properties:
                      protocol_version:
                        type: object
                        properties:
                          p2p:
                            type: string
                            format: uint64
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      network:
                        type: string
                      version:
                        type: string
                      channels:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      moniker:
                        type: string
                      other:
                        type: object
                        properties:
                          tx_index:
                            type: string
                          rpc_address:
                            type: string
                  application_version:
                    type: object
                    properties:
                      name:
                        type: string
                      app_name:
                        type: string
                      version:
                        type: string
                      git_commit:
                        type: string
                      build_tags:
                        type: string
                      go_version:
                        type: string
                      build_deps:
                        type: array
                        items:
                          title: Module is the type for VersionInfo
                          type: object
                          properties:
                            path:
                              title: module path
                              type: string
                            version:
                              title: module version
                              type: string
                            sum:
                              title: checksum
                              type: string
                      cosmos_sdk_version:
                        title: 'Since: cosmos-sdk 0.43'
                        type: string
                    description: VersionInfo is the type for the GetNodeInfoResponse
                      message.
                description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      tags:
      - Service
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                description: GetSyncingResponse is the response type for the Query/GetSyncing
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      tags:
      - Service
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetLatestValidatorSetResponse is the response type for
                  the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      tags:
      - Service
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight
      parameters:
      - name: height
        in: path
        required: true
        schema:
          type: string
          format: int64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: GetValidatorSetByHeightResponse is the response type
                  for the Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/distribution/v1beta1/community_pool:
    get:
      tags:
      - Query
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: array
                    description: pool defines community pool's coins.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryCommunityPoolResponse is the response type for the Query/CommunityPool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      tags:
      - Query
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines all the rewards accrued by a delegator.
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                        reward:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              DecCoin defines a token with a denomination and a decimal amount.

                              NOTE: The amount field is an Dec which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        DelegationDelegatorReward represents the properties
                        of a delegator's delegation reward.
                  total:
                    type: array
                    description: total defines the sum of all the rewards.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationTotalRewardsResponse is the response type for the
                  Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      tags:
      - Query
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    description: rewards defines the rewards accrued by a delegation.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryDelegationRewardsResponse is the response type for the
                  Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      tags:
      - Query
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DelegatorValidators
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the validators a delegator is
                      delegating for.
                    items:
                      type: string
                description: |-
                  QueryDelegatorValidatorsResponse is the response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      tags:
      - Query
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress
      parameters:
      - name: delegator_address
        in: path
        description: delegator_address defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  withdraw_address:
                    type: string
                    description: withdraw_address defines the delegator address to
                      query for.
                description: |-
                  QueryDelegatorWithdrawAddressResponse is the response type for the
                  Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries params of the distribution module.
      operationId: DistributionParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      community_tax:
                        type: string
                      base_proposer_reward:
                        type: string
                      bonus_proposer_reward:
                        type: string
                      withdraw_addr_enabled:
                        type: boolean
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      tags:
      - Query
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorCommissionResponse is the response type for the
                  Query/ValidatorCommission RPC method
                type: object
                properties:
                  commission:
                    type: object
                    properties:
                      commission:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: commission defines the commision the validator received.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      tags:
      - Query
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  rewards:
                    type: object
                    properties:
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            DecCoin defines a token with a denomination and a decimal amount.

                            NOTE: The amount field is an Dec which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
                      for a validator inexpensive to track, allows simple sanity checks.
                description: |-
                  QueryValidatorOutstandingRewardsResponse is the response type for the
                  Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      tags:
      - Query
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes
      parameters:
      - name: validator_address
        in: path
        description: validator_address defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: starting_height
        in: query
        description: starting_height defines the optional starting height to query
          the slashes.
        schema:
          type: string
          format: uint64
      - name: ending_height
        in: query
        description: starting_height defines the optional ending height to query the
          slashes.
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  slashes:
                    type: array
                    description: slashes defines the slashes the validator received.
                    items:
                      type: object
                      properties:
                        validator_period:
                          type: string
                          format: uint64
                        fraction:
                          type: string
                      description: |-
                        ValidatorSlashEvent represents a validator slash event.
                        Height is implicit within the store key.
                        This is needed to calculate appropriate amount of staking tokens
                        for delegations which are withdrawn after a slash has occurred.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorSlashesResponse is the response type for the
                  Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/evidence/v1beta1/evidence:
    get:
      tags:
      - Query
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: array
                    description: evidence returns all evidences.
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/evidence/v1beta1/evidence/{evidence_hash}:
    get:
      tags:
      - Query
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence
      parameters:
      - name: evidence_hash
        in: path
        description: evidence_hash defines the hash of the requested evidence.
        required: true
        schema:
          type: string
          format: byte
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  evidence:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: QueryEvidenceResponse is the response type for the Query/Evidence
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      tags:
      - Query
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance
      parameters:
      - name: granter
        in: path
        description: granter is the address of the user granting an allowance of their
          funds.
        required: true
        schema:
          type: string
      - name: grantee
        in: path
        description: grantee is the address of the user being granted an allowance
          of another user's funds.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowance:
                    title: Grant is stored in the KVStore to record a grant with full
                      context
                    type: object
                    properties:
                      granter:
                        type: string
                        description: granter is the address of the user granting an
                          allowance of their funds.
                      grantee:
                        type: string
                        description: grantee is the address of the user being granted
                          an allowance of another user's funds.
                      allowance:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: allowance can be any of basic and filtered fee
                          allowance.
                    description: allowance is a allowance granted for grantee by granter.
                description: QueryAllowanceResponse is the response type for the Query/Allowance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      tags:
      - Query
      summary: Allowances returns all the grants for address.
      operationId: Allowances
      parameters:
      - name: grantee
        in: path
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    description: allowances are allowance's granted for grantee by
                      granter.
                    items:
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting
                            an allowance of their funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: allowance can be any of basic and filtered
                            fee allowance.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines an pagination for the response.
                description: QueryAllowancesResponse is the response type for the
                  Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the gov module.
      operationId: GovParams
      parameters:
      - name: params_type
        in: path
        description: |-
          params_type defines which parameters to query for, can be one of "voting",
          "tallying" or "deposit".
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  voting_params:
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Length of the voting period.
                    description: voting_params defines the parameters related to voting.
                  deposit_params:
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      max_deposit_period:
                        type: string
                        description: |-
                          Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                           months.
                    description: deposit_params defines the parameters related to
                      deposit.
                  tally_params:
                    type: object
                    properties:
                      quorum:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          Minimum percentage of total stake needed to vote for a result to be
                           considered valid.
                        format: byte
                      threshold:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: 'Minimum proportion of Yes votes for proposal
                          to pass. Default value: 0.5.'
                        format: byte
                      veto_threshold:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          Minimum value of Veto votes to Total votes ratio for proposal to be
                           vetoed. Default value: 1/3.
                        format: byte
                    description: tally_params defines the parameters related to tally.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals:
    get:
      tags:
      - Query
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals
      parameters:
      - name: proposal_status
        in: query
        description: |-
          proposal_status defines the status of the proposals.

           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
          period.
           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
          period.
           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
          passed.
           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
          been rejected.
           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
          failed.
        schema:
          type: string
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
      - name: voter
        in: query
        description: voter defines the voter address for the proposals.
        schema:
          type: string
      - name: depositor
        in: query
        description: depositor defines the deposit addresses from the proposals.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        content:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        status:
                          type: string
                          description: |-
                            ProposalStatus enumerates the valid statuses of a proposal.

                             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                            period.
                             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                            period.
                             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                            passed.
                             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                            been rejected.
                             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                            failed.
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        final_tally_result:
                          type: object
                          properties:
                            "yes":
                              type: string
                            abstain:
                              type: string
                            "no":
                              type: string
                            no_with_veto:
                              type: string
                          description: TallyResult defines a standard tally for a
                            governance proposal.
                        submit_time:
                          type: string
                          format: date-time
                        deposit_end_time:
                          type: string
                          format: date-time
                        total_deposit:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                        voting_start_time:
                          type: string
                          format: date-time
                        voting_end_time:
                          type: string
                          format: date-time
                      description: Proposal defines the core field members of a governance
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryProposalsResponse is the response type for the Query/Proposals RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      tags:
      - Query
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      content:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      status:
                        type: string
                        description: |-
                          ProposalStatus enumerates the valid statuses of a proposal.

                           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                          period.
                           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                          period.
                           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                          passed.
                           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                          been rejected.
                           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                          failed.
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      final_tally_result:
                        type: object
                        properties:
                          "yes":
                            type: string
                          abstain:
                            type: string
                          "no":
                            type: string
                          no_with_veto:
                            type: string
                        description: TallyResult defines a standard tally for a governance
                          proposal.
                      submit_time:
                        type: string
                        format: date-time
                      deposit_end_time:
                        type: string
                        format: date-time
                      total_deposit:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      voting_start_time:
                        type: string
                        format: date-time
                      voting_end_time:
                        type: string
                        format: date-time
                    description: Proposal defines the core field members of a governance
                      proposal.
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      tags:
      - Query
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposits:
                    type: array
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        depositor:
                          type: string
                        amount:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                      description: |-
                        Deposit defines an amount deposited by an account address to an active
                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      tags:
      - Query
      summary: Deposit queries single deposit information based proposalID, depositAddr.
      operationId: Deposit
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: depositor
        in: path
        description: depositor defines the deposit addresses from the proposals.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  deposit:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      depositor:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                    description: |-
                      Deposit defines an amount deposited by an account address to an active
                      proposal.
                description: QueryDepositResponse is the response type for the Query/Deposit
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      tags:
      - Query
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      "yes":
                        type: string
                      abstain:
                        type: string
                      "no":
                        type: string
                      no_with_veto:
                        type: string
                    description: TallyResult defines a standard tally for a governance
                      proposal.
                description: QueryTallyResultResponse is the response type for the
                  Query/Tally RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      tags:
      - Query
      summary: Votes queries votes of a given proposal.
      operationId: Votes
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    description: votes defined the queried votes.
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        voter:
                          type: string
                        option:
                          type: string
                          description: |-
                            Deprecated: Prefer to use `options` instead. This field is set in queries
                            if and only if `len(options) == 1` and that option has weight 1. In all
                            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                          default: VOTE_OPTION_UNSPECIFIED
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        options:
                          title: 'Since: cosmos-sdk 0.43'
                          type: array
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                description: |-
                                  VoteOption enumerates the valid vote options for a given governance proposal.

                                   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                                   - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                                   - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                                   - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                                   - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                                default: VOTE_OPTION_UNSPECIFIED
                                enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              weight:
                                type: string
                            description: |-
                              WeightedVoteOption defines a unit of vote for vote split.

                              Since: cosmos-sdk 0.43
                      description: |-
                        Vote defines a vote on a governance proposal.
                        A Vote consists of a proposal ID, the voter, and the vote option.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: QueryVotesResponse is the response type for the Query/Votes
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      tags:
      - Query
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: Vote
      parameters:
      - name: proposal_id
        in: path
        description: proposal_id defines the unique id of the proposal.
        required: true
        schema:
          type: string
          format: uint64
      - name: voter
        in: path
        description: voter defines the oter address for the proposals.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      voter:
                        type: string
                      option:
                        type: string
                        description: |-
                          Deprecated: Prefer to use `options` instead. This field is set in queries
                          if and only if `len(options) == 1` and that option has weight 1. In all
                          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                        default: VOTE_OPTION_UNSPECIFIED
                        enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      options:
                        title: 'Since: cosmos-sdk 0.43'
                        type: array
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                              description: |-
                                VoteOption enumerates the valid vote options for a given governance proposal.

                                 - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                                 - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                                 - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                                 - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                                 - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                              default: VOTE_OPTION_UNSPECIFIED
                              enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            weight:
                              type: string
                          description: |-
                            WeightedVoteOption defines a unit of vote for vote split.

                            Since: cosmos-sdk 0.43
                    description: |-
                      Vote defines a vote on a governance proposal.
                      A Vote consists of a proposal ID, the voter, and the vote option.
                description: QueryVoteResponse is the response type for the Query/Vote
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      tags:
      - Query
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  annual_provisions:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: annual_provisions is the current minting annual provisions
                      value.
                    format: byte
                description: |-
                  QueryAnnualProvisionsResponse is the response type for the
                  Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/inflation:
    get:
      tags:
      - Query
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  inflation:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: inflation is the current minting inflation value.
                    format: byte
                description: |-
                  QueryInflationResponse is the response type for the Query/Inflation RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/mint/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      mint_denom:
                        title: type of coin to mint
                        type: string
                      inflation_rate_change:
                        title: maximum annual change in inflation rate
                        type: string
                      inflation_max:
                        title: maximum inflation rate
                        type: string
                      inflation_min:
                        title: minimum inflation rate
                        type: string
                      goal_bonded:
                        title: goal of percent bonded atoms
                        type: string
                      blocks_per_year:
                        title: expected blocks per year
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/params/v1beta1/params:
    get:
      tags:
      - Query
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: Params
      parameters:
      - name: subspace
        in: query
        description: subspace defines the module to query the parameter for.
        schema:
          type: string
      - name: key
        in: query
        description: key defines the key of the parameter in the subspace.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  param:
                    type: object
                    properties:
                      subspace:
                        type: string
                      key:
                        type: string
                      value:
                        type: string
                    description: param defines the queried parameter.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries the parameters of slashing module
      operationId: SlashingParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryParamsResponse is the response type for the Query/Params
                  RPC method
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      signed_blocks_window:
                        type: string
                        format: int64
                      min_signed_per_window:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      downtime_jail_duration:
                        type: string
                      slash_fraction_double_sign:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      slash_fraction_downtime:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: Params represents the parameters used for by the
                      slashing module.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      tags:
      - Query
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
                  method
                type: object
                properties:
                  info:
                    title: info is the signing info of all validators
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        start_height:
                          title: Height at which validator was first a candidate OR
                            was unjailed
                          type: string
                          format: int64
                        index_offset:
                          type: string
                          description: |-
                            Index which is incremented each time the validator was a bonded
                            in a block and may have signed a precommit or not. This in conjunction with the
                            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                          format: int64
                        jailed_until:
                          type: string
                          description: Timestamp until which the validator is jailed
                            due to liveness downtime.
                          format: date-time
                        tombstoned:
                          type: boolean
                          description: |-
                            Whether or not a validator has been tombstoned (killed out of validator set). It is set
                            once the validator commits an equivocation or for any other configured misbehiavor.
                        missed_blocks_counter:
                          type: string
                          description: |-
                            A counter kept to avoid unnecessary array reads.
                            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                          format: int64
                      description: |-
                        ValidatorSigningInfo defines a validator's signing info for monitoring their
                        liveness activity.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      tags:
      - Query
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo
      parameters:
      - name: cons_address
        in: path
        description: cons_address is the address to query signing info of
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
                  method
                type: object
                properties:
                  val_signing_info:
                    title: val_signing_info is the signing info of requested val cons
                      address
                    type: object
                    properties:
                      address:
                        type: string
                      start_height:
                        title: Height at which validator was first a candidate OR
                          was unjailed
                        type: string
                        format: int64
                      index_offset:
                        type: string
                        description: |-
                          Index which is incremented each time the validator was a bonded
                          in a block and may have signed a precommit or not. This in conjunction with the
                          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                        format: int64
                      jailed_until:
                        type: string
                        description: Timestamp until which the validator is jailed
                          due to liveness downtime.
                        format: date-time
                      tombstoned:
                        type: boolean
                        description: |-
                          Whether or not a validator has been tombstoned (killed out of validator set). It is set
                          once the validator commits an equivocation or for any other configured misbehiavor.
                      missed_blocks_counter:
                        type: string
                        description: |-
                          A counter kept to avoid unnecessary array reads.
                          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                        format: int64
                    description: |-
                      ValidatorSigningInfo defines a validator's signing info for monitoring their
                      liveness activity.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      operationId: DelegatorDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_responses:
                    type: array
                    description: delegation_responses defines all the delegations'
                      info of a delegator.
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorDelegationsResponse is response type for the
                  Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      tags:
      - Query
      summary: Redelegations queries redelegations of given address.
      operationId: Redelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: src_validator_addr
        in: query
        description: src_validator_addr defines the validator address to redelegate
          from.
        schema:
          type: string
      - name: dst_validator_addr
        in: query
        description: dst_validator_addr defines the validator address to redelegate
          to.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  redelegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        redelegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_src_address:
                              type: string
                              description: validator_src_address is the validator
                                redelegation source operator address.
                            validator_dst_address:
                              type: string
                              description: validator_dst_address is the validator
                                redelegation destination operator address.
                            entries:
                              type: array
                              description: entries are the redelegation entries.
                              items:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                          description: |-
                            Redelegation contains the list of a particular delegator's redelegating bonds
                            from a particular source validator to a particular destination validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              redelegation_entry:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                  completion_time:
                                    type: string
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                              balance:
                                type: string
                            description: |-
                              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                              contains a balance in addition to shares which is more suitable for client
                              responses.
                      description: |-
                        RedelegationResponse is equivalent to a Redelegation except that its entries
                        contain a balance in addition to shares which is more suitable for client
                        responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryRedelegationsResponse is response type for the Query/Redelegations RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: |-
        DelegatorUnbondingDelegations queries all unbonding delegations of a given
        delegator address.
      operationId: DelegatorUnbondingDelegations
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryUnbondingDelegatorDelegationsResponse is response type for the
                  Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      operationId: StakingDelegatorValidators
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    description: validators defines the the validators' info of a
                      delegator.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                        unbonding_time:
                          type: string
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: min_self_delegation is the validator's self
                            declared minimum self delegation.
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryDelegatorValidatorsResponse is response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator
      parameters:
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                      unbonding_time:
                        type: string
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: min_self_delegation is the validator's self declared
                          minimum self delegation.
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
                description: |-
                  QueryDelegatorValidatorResponse response type for the
                  Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      tags:
      - Query
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo
      parameters:
      - name: height
        in: path
        description: height defines at which height to query the historical info.
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  hist:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: |-
                              Consensus captures the consensus rules for processing a block in the blockchain,
                              including all blockchain data structures and the rules of the application's
                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            title: prev block info
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          last_commit_hash:
                            title: hashes of block data
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          data_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validators_hash:
                            title: hashes from the app output from the prev block
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          next_validators_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          consensus_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          app_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          last_results_hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          evidence_hash:
                            title: consensus info
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          proposer_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: Header defines the structure of a Tendermint
                          block header.
                      valset:
                        type: array
                        items:
                          type: object
                          properties:
                            operator_address:
                              type: string
                              description: operator_address defines the address of
                                the validator's operator; bech encoded in JSON.
                            consensus_pubkey:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                  description: |-
                                    A URL/resource name that uniquely identifies the type of the serialized
                                    protocol buffer message. This string must contain at least
                                    one "/" character. The last segment of the URL's path must represent
                                    the fully qualified name of the type (as in
                                    `path/google.protobuf.Duration`). The name should be in a canonical form
                                    (e.g., leading "." is not accepted).

                                    In practice, teams usually precompile into the binary all types that they
                                    expect it to use in the context of Any. However, for URLs which use the
                                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                                    server that maps type URLs to message definitions as follows:

                                    * If no scheme is provided, `https` is assumed.
                                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                      value in binary format, or produce an error.
                                    * Applications are allowed to cache lookup results based on the
                                      URL, or have them precompiled into a binary to avoid any
                                      lookup. Therefore, binary compatibility needs to be preserved
                                      on changes to types. (Use versioned type names to manage
                                      breaking changes.)

                                    Note: this functionality is not currently available in the official
                                    protobuf release, and it is not used for type URLs beginning with
                                    type.googleapis.com.

                                    Schemes other than `http`, `https` (or the empty scheme) might be
                                    used with implementation specific semantics.
                                value:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  description: Must be a valid serialized protocol
                                    buffer of the above specified type.
                                  format: byte
                              description: |-
                                `Any` contains an arbitrary serialized protocol buffer message along with a
                                URL that describes the type of the serialized message.

                                Protobuf library provides support to pack/unpack Any values in the form
                                of utility functions or additional generated methods of the Any type.

                                Example 1: Pack and unpack a message in C++.

                                    Foo foo = ...;
                                    Any any;
                                    any.PackFrom(foo);
                                    ...
                                    if (any.UnpackTo(&foo)) {
                                      ...
                                    }

                                Example 2: Pack and unpack a message in Java.

                                    Foo foo = ...;
                                    Any any = Any.pack(foo);
                                    ...
                                    if (any.is(Foo.class)) {
                                      foo = any.unpack(Foo.class);
                                    }

                                 Example 3: Pack and unpack a message in Python.

                                    foo = Foo(...)
                                    any = Any()
                                    any.Pack(foo)
                                    ...
                                    if any.Is(Foo.DESCRIPTOR):
                                      any.Unpack(foo)
                                      ...

                                 Example 4: Pack and unpack a message in Go

                                     foo := &pb.Foo{...}
                                     any, err := ptypes.MarshalAny(foo)
                                     ...
                                     foo := &pb.Foo{}
                                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                       ...
                                     }

                                The pack methods provided by protobuf library will by default use
                                'type.googleapis.com/full.type.name' as the type URL and the unpack
                                methods only use the fully qualified type name after the last '/'
                                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                                name "y.z".


                                JSON
                                ====
                                The JSON representation of an `Any` value uses the regular
                                representation of the deserialized, embedded message, with an
                                additional field `@type` which contains the type URL. Example:

                                    package google.profile;
                                    message Person {
                                      string first_name = 1;
                                      string last_name = 2;
                                    }

                                    {
                                      "@type": "type.googleapis.com/google.profile.Person",
                                      "firstName": <string>,
                                      "lastName": <string>
                                    }

                                If the embedded message type is well-known and has a custom JSON
                                representation, that representation will be embedded adding a field
                                `value` which holds the custom JSON in addition to the `@type`
                                field. Example (for message [google.protobuf.Duration][]):

                                    {
                                      "@type": "type.googleapis.com/google.protobuf.Duration",
                                      "value": "1.212s"
                                    }
                            jailed:
                              type: boolean
                              description: jailed defined whether the validator has
                                been jailed from bonded status or not.
                            status:
                              type: string
                              description: status is the validator status (bonded/unbonding/unbonded).
                              default: BOND_STATUS_UNSPECIFIED
                              enum:
                              - BOND_STATUS_UNSPECIFIED
                              - BOND_STATUS_UNBONDED
                              - BOND_STATUS_UNBONDING
                              - BOND_STATUS_BONDED
                            tokens:
                              type: string
                              description: tokens define the delegated tokens (incl.
                                self-delegation).
                            delegator_shares:
                              type: string
                              description: delegator_shares defines total shares issued
                                to a validator's delegators.
                            description:
                              type: object
                              properties:
                                moniker:
                                  type: string
                                  description: moniker defines a human-readable name
                                    for the validator.
                                identity:
                                  type: string
                                  description: identity defines an optional identity
                                    signature (ex. UPort or Keybase).
                                website:
                                  type: string
                                  description: website defines an optional website
                                    link.
                                security_contact:
                                  type: string
                                  description: security_contact defines an optional
                                    email for security contact.
                                details:
                                  type: string
                                  description: details define other optional details.
                              description: description defines the description terms
                                for the validator.
                            unbonding_height:
                              type: string
                              description: unbonding_height defines, if unbonding,
                                the height at which this validator has begun unbonding.
                              format: int64
                            unbonding_time:
                              type: string
                              description: unbonding_time defines, if unbonding, the
                                min time for the validator to complete unbonding.
                              format: date-time
                            commission:
                              type: object
                              properties:
                                commission_rates:
                                  type: object
                                  properties:
                                    rate:
                                      type: string
                                      description: rate is the commission rate charged
                                        to delegators, as a fraction.
                                    max_rate:
                                      type: string
                                      description: max_rate defines the maximum commission
                                        rate which validator can ever charge, as a
                                        fraction.
                                    max_change_rate:
                                      type: string
                                      description: max_change_rate defines the maximum
                                        daily increase of the validator commission,
                                        as a fraction.
                                  description: commission_rates defines the initial
                                    commission rates to be used for creating a validator.
                                update_time:
                                  type: string
                                  description: update_time is the last time the commission
                                    rate was changed.
                                  format: date-time
                              description: commission defines the commission parameters.
                            min_self_delegation:
                              type: string
                              description: min_self_delegation is the validator's
                                self declared minimum self delegation.
                          description: |-
                            Validator defines a validator, together with the total amount of the
                            Validator's bond shares and their exchange rate to coins. Slashing results in
                            a decrease in the exchange rate, allowing correct calculation of future
                            undelegations without iterating over delegators. When coins are delegated to
                            this validator, the validator is credited with a delegation whose number of
                            bond shares is based on the amount of coins delegated divided by the current
                            exchange rate. Voting power can be calculated as total bonded shares
                            multiplied by exchange rate.
                    description: hist defines the historical info at the given height.
                description: |-
                  QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/params:
    get:
      tags:
      - Query
      summary: Parameters queries the staking parameters.
      operationId: StakingParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      unbonding_time:
                        type: string
                        description: unbonding_time is the time duration of unbonding.
                      max_validators:
                        type: integer
                        description: max_validators is the maximum number of validators.
                        format: int64
                      max_entries:
                        type: integer
                        description: max_entries is the max entries for either unbonding
                          delegation or redelegation (per pair/trio).
                        format: int64
                      historical_entries:
                        type: integer
                        description: historical_entries is the number of historical
                          entries to persist.
                        format: int64
                      bond_denom:
                        type: string
                        description: bond_denom defines the bondable coin denomination.
                    description: params holds all the parameters of this module.
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/pool:
    get:
      tags:
      - Query
      summary: Pool queries the pool info.
      operationId: Pool
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  pool:
                    type: object
                    properties:
                      not_bonded_tokens:
                        type: string
                      bonded_tokens:
                        type: string
                    description: pool defines the pool info.
                description: QueryPoolResponse is response type for the Query/Pool
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators:
    get:
      tags:
      - Query
      summary: Validators queries all validators that match the given status.
      operationId: Validators
      parameters:
      - name: status
        in: query
        description: status enables to query for validators matching a given status.
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorsResponse is response type for the Query/Validators
                  RPC method
                type: object
                properties:
                  validators:
                    type: array
                    description: validators contains all the queried validators.
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                        status:
                          type: string
                          description: status is the validator status (bonded/unbonding/unbonded).
                          default: BOND_STATUS_UNSPECIFIED
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for
                                the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email
                                for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                          description: description defines the description terms for
                            the validator.
                        unbonding_height:
                          type: string
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                        unbonding_time:
                          type: string
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                            update_time:
                              type: string
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                          description: commission defines the commission parameters.
                        min_self_delegation:
                          type: string
                          description: min_self_delegation is the validator's self
                            declared minimum self delegation.
                      description: |-
                        Validator defines a validator, together with the total amount of the
                        Validator's bond shares and their exchange rate to coins. Slashing results in
                        a decrease in the exchange rate, allowing correct calculation of future
                        undelegations without iterating over delegators. When coins are delegated to
                        this validator, the validator is credited with a delegation whose number of
                        bond shares is based on the amount of coins delegated divided by the current
                        exchange rate. Voting power can be calculated as total bonded shares
                        multiplied by exchange rate.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      tags:
      - Query
      summary: Validator queries validator info for given validator address.
      operationId: Validator
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: QueryValidatorResponse is response type for the Query/Validator
                  RPC method
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                      status:
                        type: string
                        description: status is the validator status (bonded/unbonding/unbonded).
                        default: BOND_STATUS_UNSPECIFIED
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                      description:
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for
                              the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email
                              for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                        description: description defines the description terms for
                          the validator.
                      unbonding_height:
                        type: string
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                      unbonding_time:
                        type: string
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                      commission:
                        type: object
                        properties:
                          commission_rates:
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                          update_time:
                            type: string
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                        description: commission defines the commission parameters.
                      min_self_delegation:
                        type: string
                        description: min_self_delegation is the validator's self declared
                          minimum self delegation.
                    description: |-
                      Validator defines a validator, together with the total amount of the
                      Validator's bond shares and their exchange rate to coins. Slashing results in
                      a decrease in the exchange rate, allowing correct calculation of future
                      undelegations without iterating over delegators. When coins are delegated to
                      this validator, the validator is credited with a delegation whose number of
                      bond shares is based on the amount of coins delegated divided by the current
                      exchange rate. Voting power can be calculated as total bonded shares
                      multiplied by exchange rate.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      tags:
      - Query
      summary: ValidatorDelegations queries delegate info for given validator.
      operationId: ValidatorDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryValidatorDelegationsResponse is response type for the
                  Query/ValidatorDelegations RPC method
                type: object
                properties:
                  delegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded
                                address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: |-
                            Delegation represents the bond with tokens held by an account. It is
                            owned by one delegator, and is associated with the voting power of one
                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: |-
                            Coin defines a token with a denomination and an amount.

                            NOTE: The amount field is an Int which implements the custom method
                            signatures required by gogoproto.
                      description: |-
                        DelegationResponse is equivalent to Delegation except that it contains a
                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      tags:
      - Query
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  delegation_response:
                    type: object
                    properties:
                      delegation:
                        type: object
                        properties:
                          delegator_address:
                            type: string
                            description: delegator_address is the bech32-encoded address
                              of the delegator.
                          validator_address:
                            type: string
                            description: validator_address is the bech32-encoded address
                              of the validator.
                          shares:
                            type: string
                            description: shares define the delegation shares received.
                        description: |-
                          Delegation represents the bond with tokens held by an account. It is
                          owned by one delegator, and is associated with the voting power of one
                          validator.
                      balance:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: |-
                          Coin defines a token with a denomination and an amount.

                          NOTE: The amount field is an Int which implements the custom method
                          signatures required by gogoproto.
                    description: |-
                      DelegationResponse is equivalent to Delegation except that it contains a
                      balance in addition to shares which is more suitable for client responses.
                description: QueryDelegationResponse is response type for the Query/Delegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      tags:
      - Query
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: delegator_addr
        in: path
        description: delegator_addr defines the delegator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbond:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                        description: delegator_address is the bech32-encoded address
                          of the delegator.
                      validator_address:
                        type: string
                        description: validator_address is the bech32-encoded address
                          of the validator.
                      entries:
                        type: array
                        description: entries are the unbonding delegation entries.
                        items:
                          type: object
                          properties:
                            creation_height:
                              type: string
                              description: creation_height is the height which the
                                unbonding took place.
                              format: int64
                            completion_time:
                              type: string
                              description: completion_time is the unix time for unbonding
                                completion.
                              format: date-time
                            initial_balance:
                              type: string
                              description: initial_balance defines the tokens initially
                                scheduled to receive at completion.
                            balance:
                              type: string
                              description: balance defines the tokens to receive at
                                completion.
                          description: UnbondingDelegationEntry defines an unbonding
                            object with relevant metadata.
                    description: |-
                      UnbondingDelegation stores all of a single delegator's unbonding bonds
                      for a single validator in an time-ordered list.
                description: |-
                  QueryDelegationResponse is response type for the Query/UnbondingDelegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      tags:
      - Query
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      operationId: ValidatorUnbondingDelegations
      parameters:
      - name: validator_addr
        in: path
        description: validator_addr defines the validator address to query for.
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address
                            of the validator.
                        entries:
                          type: array
                          description: entries are the unbonding delegation entries.
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                              completion_time:
                                type: string
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive
                                  at completion.
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                      description: |-
                        UnbondingDelegation stores all of a single delegator's unbonding bonds
                        for a single validator in an time-ordered list.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryValidatorUnbondingDelegationsResponse is response type for the
                  Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/tx/v1beta1/simulate:
    post:
      tags:
      - Service
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.SimulateRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  gas_info:
                    type: object
                    properties:
                      gas_wanted:
                        type: string
                        description: GasWanted is the maximum units of work we allow
                          this tx to perform.
                        format: uint64
                      gas_used:
                        type: string
                        description: GasUsed is the amount of gas actually consumed.
                        format: uint64
                    description: gas_info is the information about gas used in the
                      simulation.
                  result:
                    type: object
                    properties:
                      data:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: |-
                          Data is any data returned from message or handler execution. It MUST be
                          length prefixed in order to separate data from multiple message executions.
                        format: byte
                      log:
                        type: string
                        description: Log contains the log information from message
                          or handler execution.
                      events:
                        type: array
                        description: |-
                          Events contains a slice of Event objects that were emitted during message
                          or handler execution.
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  value:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                    description: result is the result of the simulation.
                description: |-
                  SimulateResponse is the response type for the
                  Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs:
    get:
      tags:
      - Service
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent
      parameters:
      - name: events
        in: query
        description: events is the list of transaction event type.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: order_by
        in: query
        description: |2-
           - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
           - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
           - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
        schema:
          type: string
          default: ORDER_BY_UNSPECIFIED
          enum:
          - ORDER_BY_UNSPECIFIED
          - ORDER_BY_ASC
          - ORDER_BY_DESC
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
    post:
      tags:
      - Service
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                tx_bytes:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: tx_bytes is the raw transaction.
                  format: byte
                mode:
                  type: string
                  description: |-
                    BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

                     - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                     - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
                    the tx to be committed in a block.
                     - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                    a CheckTx execution response only.
                     - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                    immediately.
                  default: BROADCAST_MODE_UNSPECIFIED
                  enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
              description: |-
                BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
                RPC method.
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tx_response:
                    type: object
                    properties:
                      height:
                        title: The block height
                        type: string
                        format: int64
                      txhash:
                        type: string
                        description: The transaction hash.
                      codespace:
                        title: Namespace for the Code
                        type: string
                      code:
                        type: integer
                        description: Response code.
                        format: int64
                      data:
                        type: string
                        description: Result bytes, if any.
                      raw_log:
                        type: string
                        description: |-
                          The output of the application's logger (raw string). May be
                          non-deterministic.
                      logs:
                        type: array
                        description: The output of the application's logger (typed).
                          May be non-deterministic.
                        items:
                          type: object
                          properties:
                            msg_index:
                              type: integer
                              format: int64
                            log:
                              type: string
                            events:
                              type: array
                              description: |-
                                Events contains a slice of Event objects that were emitted during some
                                execution.
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  attributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      description: |-
                                        Attribute defines an attribute wrapper where the key and value are
                                        strings instead of raw bytes.
                                description: |-
                                  StringEvent defines en Event object wrapper where all the attributes
                                  contain key/value pairs that are strings instead of raw bytes.
                          description: ABCIMessageLog defines a structure containing
                            an indexed tx ABCI message log.
                      info:
                        type: string
                        description: Additional information. May be non-deterministic.
                      gas_wanted:
                        type: string
                        description: Amount of gas requested for transaction.
                        format: int64
                      gas_used:
                        type: string
                        description: Amount of gas consumed by transaction.
                        format: int64
                      tx:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      timestamp:
                        type: string
                        description: |-
                          Time of the previous block. For heights > 1, it's the weighted median of
                          the timestamps of the valid votes in the block.LastCommit. For height == 1,
                          it's genesis time.
                      events:
                        type: array
                        description: |-
                          Events defines all the events emitted by processing a transaction. Note,
                          these events include those emitted by processing all the messages and those
                          emitted from the ante handler. Whereas Logs contains the events, with
                          additional metadata, emitted only by processing the messages.

                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  value:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                          description: |-
                            Event allows application developers to attach additional information to
                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                            Later, transactions may be queried using these events.
                    description: |-
                      TxResponse defines a structure containing relevant tx data and metadata. The
                      tags are stringified and the log is JSON decoded.
                description: |-
                  BroadcastTxResponse is the response type for the
                  Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      tags:
      - Service
      summary: GetTx fetches a tx by hash.
      operationId: GetTx
      parameters:
      - name: hash
        in: path
        description: hash is the tx hash to query, encoded as a hex string.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      tags:
      - Query
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan
      parameters:
      - name: name
        in: path
        description: name is the name of the applied plan to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  height:
                    type: string
                    description: height is the block height at which the plan was
                      applied.
                    format: int64
                description: |-
                  QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      tags:
      - Query
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        description: |-
                          Sets the name for the upgrade. This name will be used by the upgraded
                          version of the software to apply any special "on-upgrade" commands during
                          the first BeginBlock method after the upgrade is applied. It is also used
                          to detect whether a software version can handle a given upgrade. If no
                          upgrade handler with this name has been set in the software, it will be
                          assumed that the software is out-of-date when the upgrade Time or Height is
                          reached and the software will exit.
                      time:
                        type: string
                        description: |-
                          Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                          has been removed from the SDK.
                          If this field is not empty, an error will be thrown.
                        format: date-time
                      height:
                        type: string
                        description: |-
                          The height at which the upgrade must be performed.
                          Only used if Time is not set.
                        format: int64
                      info:
                        title: |-
                          Any application specific upgrade info to be included on-chain
                          such as a git commit that validators could automatically upgrade to
                        type: string
                      upgraded_client_state:
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: plan is the current upgrade plan.
                description: |-
                  QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      tags:
      - Query
      summary: ModuleVersions queries the list of module versions from state.
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      parameters:
      - name: module_name
        in: query
        description: |-
          module_name is a field to query a specific module
          consensus version from state. Leaving this empty will
          fetch the full list of module versions from state.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  module_versions:
                    type: array
                    description: module_versions is a list of module names with their
                      consensus versions.
                    items:
                      type: object
                      properties:
                        name:
                          title: name of the app module
                          type: string
                        version:
                          title: consensus version of the app module
                          type: string
                          format: uint64
                      description: |-
                        ModuleVersion specifies a module and its consensus version.

                        Since: cosmos-sdk 0.43
                description: |-
                  QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
                  RPC method.

                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      tags:
      - Query
      summary: |-
        UpgradedConsensusState queries the consensus state that will serve
        as a trusted kernel for the next version of this chain. It will only be
        stored at the last height of this chain.
        UpgradedConsensusState RPC not supported with legacy querier
        This rpc is deprecated now that IBC has its own replacement
        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState
      parameters:
      - name: last_height
        in: path
        description: |-
          last height of the current chain must be sent in request
          as this is the height under which next consensus state is stored
        required: true
        schema:
          type: string
          format: int64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    title: 'Since: cosmos-sdk 0.43'
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /terra/tx/v1beta1/compute_tax:
    post:
      tags:
      - Service
      summary: EstimateFee simulates executing a transaction for estimating gas usage.
      operationId: ComputeTax
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/terra.tx.v1beta1.ComputeTaxRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tax_amount:
                    title: amount is the amount of coins to be paid as a fee
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  ComputeTaxResponse is the response type for the Service.ComputeTax
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
      x-codegen-request-body-name: body
  /terra/market/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: MarketParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      base_pool:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      pool_recovery_period:
                        type: string
                        format: uint64
                      min_stability_spread:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/market/v1beta1/swap:
    get:
      tags:
      - Query
      summary: Swap returns simulated swap amount.
      operationId: Swap
      parameters:
      - name: offer_coin
        in: query
        description: offer_coin defines the coin being offered (i.e. 1000000uluna).
        schema:
          type: string
      - name: ask_denom
        in: query
        description: ask_denom defines the denom of the coin to swap to.
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  return_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: return_coin defines the coin returned as a result
                      of the swap simulation.
                description: QuerySwapResponse is the response type for the Query/Swap
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/market/v1beta1/terra_pool_delta:
    get:
      tags:
      - Query
      summary: TerraPoolDelta returns terra_pool_delta amount.
      operationId: TerraPoolDelta
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  terra_pool_delta:
                    title: terra_pool_delta defines the gap between the TerraPool
                      and the TerraBasePool
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: QueryTerraPoolDeltaResponse is the response type for
                  the Query/TerraPoolDelta RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/actives:
    get:
      tags:
      - Query
      summary: Actives returns all active denoms
      operationId: Actives
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  actives:
                    type: array
                    description: actives defines a list of the denomination which
                      oracle prices aggreed upon.
                    items:
                      type: string
                description: |-
                  QueryActivesResponse is response type for the
                  Query/Actives RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/exchange_rates:
    get:
      tags:
      - Query
      summary: ExchangeRates returns exchange rates of all denoms
      operationId: ExchangeRates
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  exchange_rates:
                    type: array
                    description: exchange_rates defines a list of the exchange rate
                      for all whitelisted denoms.
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        DecCoin defines a token with a denomination and a decimal amount.

                        NOTE: The amount field is an Dec which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryExchangeRatesResponse is response type for the
                  Query/ExchangeRates RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/tobin_taxes:
    get:
      tags:
      - Query
      summary: TobinTaxes returns tobin taxes of all denoms
      operationId: TobinTaxes
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tobin_taxes:
                    title: tobin_taxes defines a list of the tobin tax of all whitelisted
                      denoms
                    type: array
                    items:
                      title: Denom - the object to hold configurations of each denom
                      type: object
                      properties:
                        name:
                          type: string
                        tobin_tax:
                          type: string
                description: |-
                  QueryTobinTaxesResponse is response type for the
                  Query/TobinTaxes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/vote_targets:
    get:
      tags:
      - Query
      summary: VoteTargets returns all vote target denoms
      operationId: VoteTargets
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  vote_targets:
                    type: array
                    description: |-
                      vote_targets defines a list of the denomination in which everyone
                      should vote in the current vote period.
                    items:
                      type: string
                description: |-
                  QueryVoteTargetsResponse is response type for the
                  Query/VoteTargets RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/{denom}/exchange_rate:
    get:
      tags:
      - Query
      summary: ExchangeRate returns exchange rate of a denom
      operationId: ExchangeRate
      parameters:
      - name: denom
        in: path
        description: denom defines the denomination to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  exchange_rate:
                    title: exchange_rate defines the exchange rate of Luna denominated
                      in various Terra
                    type: string
                description: |-
                  QueryExchangeRateResponse is response type for the
                  Query/ExchangeRate RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/denoms/{denom}/tobin_tax:
    get:
      tags:
      - Query
      summary: TobinTax returns tobin tax of a denom
      operationId: TobinTax
      parameters:
      - name: denom
        in: path
        description: denom defines the denomination to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tobin_tax:
                    title: tobin_taxe defines the tobin tax of a denom
                    type: string
                description: |-
                  QueryTobinTaxResponse is response type for the
                  Query/TobinTax RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: OracleParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      vote_period:
                        type: string
                        format: uint64
                      vote_threshold:
                        type: string
                      reward_band:
                        type: string
                      reward_distribution_window:
                        type: string
                        format: uint64
                      whitelist:
                        type: array
                        items:
                          title: Denom - the object to hold configurations of each
                            denom
                          type: object
                          properties:
                            name:
                              type: string
                            tobin_tax:
                              type: string
                      slash_fraction:
                        type: string
                      slash_window:
                        type: string
                        format: uint64
                      min_valid_per_window:
                        type: string
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/valdiators/{validator_addr}/aggregate_vote:
    get:
      tags:
      - Query
      summary: AggregateVote returns an aggregate vote of a validator
      operationId: AggregateVote
      parameters:
      - name: validator_addr
        in: path
        description: validator defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  aggregate_vote:
                    title: aggregate_vote defines oracle aggregate vote submitted
                      by a validator in the current vote period
                    type: object
                    properties:
                      exchange_rate_tuples:
                        type: array
                        items:
                          title: ExchangeRateTuple - struct to store interpreted exchange
                            rates data to store
                          type: object
                          properties:
                            denom:
                              type: string
                            exchange_rate:
                              type: string
                      voter:
                        type: string
                    description: |-
                      MsgAggregateExchangeRateVote - struct for voting on
                      the exchange rates of Luna denominated in various Terra assets.
                description: |-
                  QueryAggregateVoteResponse is response type for the
                  Query/AggregateVote RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/validators/aggregate_prevotes:
    get:
      tags:
      - Query
      summary: AggregatePrevotes returns aggregate prevotes of all validators
      operationId: AggregatePrevotes
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  aggregate_prevotes:
                    title: aggregate_prevotes defines all oracle aggregate prevotes
                      submitted in the current vote period
                    type: array
                    items:
                      title: |-
                        struct for aggregate prevoting on the ExchangeRateVote.
                        The purpose of aggregate prevote is to hide vote exchange rates with hash
                        which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
                      type: object
                      properties:
                        hash:
                          type: string
                        voter:
                          type: string
                        submit_block:
                          type: string
                          format: uint64
                description: |-
                  QueryAggregatePrevotesResponse is response type for the
                  Query/AggregatePrevotes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/validators/aggregate_votes:
    get:
      tags:
      - Query
      summary: AggregateVotes returns aggregate votes of all validators
      operationId: AggregateVotes
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  aggregate_votes:
                    title: aggregate_votes defines all oracle aggregate votes submitted
                      in the current vote period
                    type: array
                    items:
                      type: object
                      properties:
                        exchange_rate_tuples:
                          type: array
                          items:
                            title: ExchangeRateTuple - struct to store interpreted
                              exchange rates data to store
                            type: object
                            properties:
                              denom:
                                type: string
                              exchange_rate:
                                type: string
                        voter:
                          type: string
                      description: |-
                        MsgAggregateExchangeRateVote - struct for voting on
                        the exchange rates of Luna denominated in various Terra assets.
                description: |-
                  QueryAggregateVotesResponse is response type for the
                  Query/AggregateVotes RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/validators/{validator_addr}/aggregate_prevote:
    get:
      tags:
      - Query
      summary: AggregatePrevote returns an aggregate prevote of a validator
      operationId: AggregatePrevote
      parameters:
      - name: validator_addr
        in: path
        description: validator defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  aggregate_prevote:
                    title: |-
                      struct for aggregate prevoting on the ExchangeRateVote.
                      The purpose of aggregate prevote is to hide vote exchange rates with hash
                      which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
                    type: object
                    properties:
                      hash:
                        type: string
                      voter:
                        type: string
                      submit_block:
                        type: string
                        format: uint64
                description: |-
                  QueryAggregatePrevoteResponse is response type for the
                  Query/AggregatePrevote RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/validators/{validator_addr}/feeder:
    get:
      tags:
      - Query
      summary: FeederDelegation returns feeder delegation of a validator
      operationId: FeederDelegation
      parameters:
      - name: validator_addr
        in: path
        description: validator defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  feeder_addr:
                    title: feeder_addr defines the feeder delegation of a validator
                    type: string
                description: |-
                  QueryFeederDelegationResponse is response type for the
                  Query/FeederDelegation RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/oracle/v1beta1/validators/{validator_addr}/miss:
    get:
      tags:
      - Query
      summary: MissCounter returns oracle miss counter of a validator
      operationId: MissCounter
      parameters:
      - name: validator_addr
        in: path
        description: validator defines the validator address to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  miss_counter:
                    title: miss_counter defines the oracle miss counter of a validator
                    type: string
                    format: uint64
                description: |-
                  QueryMissCounterResponse is response type for the
                  Query/MissCounter RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/indicators:
    get:
      tags:
      - Query
      summary: Indicators return the current trl informations
      operationId: Indicators
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  trl_year:
                    type: string
                  trl_month:
                    type: string
                description: |-
                  QueryIndicatorsResponse is response type for the
                  Query/Indicators RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: TreasuryParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      tax_policy:
                        title: PolicyConstraints - defines policy constraints can
                          be applied in tax & reward policies
                        type: object
                        properties:
                          rate_min:
                            type: string
                          rate_max:
                            type: string
                          cap:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                          change_rate_max:
                            type: string
                      reward_policy:
                        title: PolicyConstraints - defines policy constraints can
                          be applied in tax & reward policies
                        type: object
                        properties:
                          rate_min:
                            type: string
                          rate_max:
                            type: string
                          cap:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: |-
                              Coin defines a token with a denomination and an amount.

                              NOTE: The amount field is an Int which implements the custom method
                              signatures required by gogoproto.
                          change_rate_max:
                            type: string
                      seigniorage_burden_target:
                        type: string
                      mining_increment:
                        type: string
                      window_short:
                        type: string
                        format: uint64
                      window_long:
                        type: string
                        format: uint64
                      window_probation:
                        type: string
                        format: uint64
                      burn_tax_split:
                        type: string
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/reward_weight:
    get:
      tags:
      - Query
      summary: RewardWeight return the current reward weight
      operationId: RewardWeight
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  reward_weight:
                    type: string
                description: |-
                  QueryRewardWeightResponse is response type for the
                  Query/RewardWeight RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/seigniorage_proceeds:
    get:
      tags:
      - Query
      summary: SeigniorageProceeds return the current seigniorage proceeds
      operationId: SeigniorageProceeds
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  seigniorage_proceeds:
                    type: string
                description: |-
                  QuerySeigniorageProceedsResponse is response type for the
                  Query/SeigniorageProceeds RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/tax_caps:
    get:
      tags:
      - Query
      summary: TaxCaps returns the all tax caps
      operationId: TaxCaps
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tax_caps:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        tax_cap:
                          type: string
                      description: |-
                        QueryTaxCapsResponseItem is response item type for the
                        Query/TaxCaps RPC method.
                description: |-
                  QueryTaxCapsResponse is response type for the
                  Query/TaxCaps RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/tax_caps/{denom}:
    get:
      tags:
      - Query
      summary: TaxCap returns the tax cap of a denom
      operationId: TaxCap
      parameters:
      - name: denom
        in: path
        description: denom defines the denomination to query for.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tax_cap:
                    type: string
                description: |-
                  QueryTaxCapResponse is response type for the
                  Query/TaxCap RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/tax_proceeds:
    get:
      tags:
      - Query
      summary: TaxProceeds return the current tax proceeds
      operationId: TaxProceeds
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tax_proceeds:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: |-
                        Coin defines a token with a denomination and an amount.

                        NOTE: The amount field is an Int which implements the custom method
                        signatures required by gogoproto.
                description: |-
                  QueryTaxProceedsResponse is response type for the
                  Query/TaxProceeds RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/treasury/v1beta1/tax_rate:
    get:
      tags:
      - Query
      summary: TaxRate return the current tax rate
      operationId: TaxRate
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  tax_rate:
                    type: string
                description: |-
                  QueryTaxRateResponse is response type for the
                  Query/TaxRate RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/codes/{code_id}:
    get:
      tags:
      - Query
      summary: CodeInfo returns the stored code info
      operationId: CodeInfo
      parameters:
      - name: code_id
        in: path
        description: grpc-gateway_out does not support Go style CodID
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code_info:
                    title: CodeInfo is data for the uploaded contract WASM code
                    type: object
                    properties:
                      code_id:
                        title: CodeID is the sequentially increasing unique identifier
                        type: string
                        format: uint64
                      code_hash:
                        title: CodeHash is the unique identifier created by wasmvm
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      creator:
                        title: Creator address who initially stored the code
                        type: string
                description: |-
                  QueryCodeInfoResponse is response type for the
                  QueryyCodeInfo RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/codes/{code_id}/byte_code:
    get:
      tags:
      - Query
      summary: ByteCode returns the stored byte code
      operationId: ByteCode
      parameters:
      - name: code_id
        in: path
        description: grpc-gateway_out does not support Go style CodID
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  byte_code:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  QueryByteCodeResponse is response type for the
                  QueryyByteCode RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/contracts/{contract_address}:
    get:
      tags:
      - Query
      summary: ContractInfo returns the stored contract info
      operationId: ContractInfo
      parameters:
      - name: contract_address
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  contract_info:
                    title: ContractInfo stores a WASM contract instance
                    type: object
                    properties:
                      address:
                        title: Address is the address of the contract
                        type: string
                      creator:
                        title: Creator is the contract creator address
                        type: string
                      admin:
                        title: Admin is who can execute the contract migration
                        type: string
                      code_id:
                        title: CodeID is the reference to the stored Wasm code
                        type: string
                        format: uint64
                      init_msg:
                        title: InitMsg is the raw message used when instantiating
                          a contract
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                description: |-
                  QueryContractInfoResponse is response type for the
                  Query/ContractInfo RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/contracts/{contract_address}/store:
    get:
      tags:
      - Query
      summary: ContractStore return smart query result from the contract
      operationId: ContractStore
      parameters:
      - name: contract_address
        in: path
        required: true
        schema:
          type: string
      - name: query_msg
        in: query
        schema:
          type: string
          format: byte
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  query_result:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  QueryContractStoreResponse is response type for the
                  Query/ContractStore RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/contracts/{contract_address}/store/raw:
    get:
      tags:
      - Query
      summary: RawStore return single key from the raw store data of a contract
      operationId: RawStore
      parameters:
      - name: contract_address
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
          format: byte
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  data:
                    title: Data contains the raw store data
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: |-
                  QueryRawStoreResponse is response type for the
                  Query/RawStore RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /terra/wasm/v1beta1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters.
      operationId: WasmParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      max_contract_size:
                        type: string
                        format: uint64
                      max_contract_gas:
                        type: string
                        format: uint64
                      max_contract_msg_size:
                        type: string
                        format: uint64
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /ibc/core/channel/v1/channels:
    get:
      tags:
      - Query
      summary: Channels queries all the IBC channels of a chain.
      operationId: Channels
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    description: list of stored channels of the chain.
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          default: ORDER_NONE_UNSPECIFIED
                          enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns
                                the other end of the channel.
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                        connection_hops:
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                          items:
                            type: string
                        version:
                          title: opaque channel version, which is agreed upon during
                            the handshake
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        channel_id:
                          title: channel identifier
                          type: string
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: QueryChannelsResponse is the response type for the Query/Channels
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}:
    get:
      tags:
      - Query
      summary: Channel queries an IBC Channel.
      operationId: Channel
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  channel:
                    title: channel associated with the request identifiers
                    type: object
                    properties:
                      state:
                        title: current state of the channel end
                        type: string
                        description: |-
                          State defines if a channel is in one of the following states:
                          CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                           - STATE_INIT: A channel has just started the opening handshake.
                           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                           - STATE_OPEN: A channel has completed the handshake. Open channels are
                          ready to send and receive packets.
                           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                          packets.
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                        - STATE_CLOSED
                      ordering:
                        title: whether the channel is ordered or unordered
                        type: string
                        description: |-
                          - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                          which they were sent.
                           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        default: ORDER_NONE_UNSPECIFIED
                        enum:
                        - ORDER_NONE_UNSPECIFIED
                        - ORDER_UNORDERED
                        - ORDER_ORDERED
                      counterparty:
                        title: counterparty channel end
                        type: object
                        properties:
                          port_id:
                            type: string
                            description: port on the counterparty chain which owns
                              the other end of the channel.
                          channel_id:
                            title: channel end on the counterparty chain
                            type: string
                      connection_hops:
                        title: |-
                          list of connection identifiers, in order, along which packets sent on
                          this channel will travel
                        type: array
                        items:
                          type: string
                      version:
                        title: opaque channel version, which is agreed upon during
                          the handshake
                        type: string
                    description: |-
                      Channel defines pipeline for exactly-once packet delivery between specific
                      modules on separate blockchains, which has at least one end capable of
                      sending packets and one end capable of receiving packets.
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryChannelResponse is the response type for the Query/Channel RPC method.
                  Besides the Channel end, it includes a proof and the height from which the
                  proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state:
    get:
      tags:
      - Query
      summary: |-
        ChannelClientState queries for the client state for the channel associated
        with the provided channel identifiers.
      operationId: ChannelClientState
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
                properties:
                  identified_client_state:
                    title: client state associated with the channel
                    type: object
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        title: client state
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      operationId: ChannelConsensusState
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        description: revision number of the consensus state
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        description: revision height of the consensus state
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the channel
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence:
    get:
      tags:
      - Query
      summary: NextSequenceReceive returns the next receive sequence for a given channel.
      operationId: NextSequenceReceive
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QuerySequenceResponse is the request type for the
                  Query/QueryNextSequenceReceiveResponse RPC method
                type: object
                properties:
                  next_sequence_receive:
                    title: next sequence receive number
                    type: string
                    format: uint64
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements:
    get:
      tags:
      - Query
      summary: |-
        PacketAcknowledgements returns all the packet acknowledgements associated
        with a channel.
      operationId: PacketAcknowledgements
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      - name: packet_commitment_sequences
        in: query
        description: list of packet sequences.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketAcknowledgemetsResponse is the request type for the
                  Query/QueryPacketAcknowledgements RPC method
                type: object
                properties:
                  acknowledgements:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          description: packet sequence.
                          format: uint64
                        data:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: embedded data that represents packet state.
                          format: byte
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}:
    get:
      tags:
      - Query
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      operationId: PacketAcknowledgement
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketAcknowledgementResponse defines the client query response for a
                  packet which also includes a proof and the height from which the
                  proof was retrieved
                type: object
                properties:
                  acknowledgement:
                    title: packet associated with the request fields
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments:
    get:
      tags:
      - Query
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      operationId: PacketCommitments
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketCommitmentsResponse is the request type for the
                  Query/QueryPacketCommitments RPC method
                type: object
                properties:
                  commitments:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          description: packet sequence.
                          format: uint64
                        data:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: embedded data that represents packet state.
                          format: byte
                      description: |-
                        PacketState defines the generic type necessary to retrieve and store
                        packet commitments, acknowledgements, and receipts.
                        Caller is responsible for knowing the context necessary to interpret this
                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks:
    get:
      tags:
      - Query
      summary: |-
        UnreceivedAcks returns all the unreceived IBC acknowledgements associated
        with a channel and sequences.
      operationId: UnreceivedAcks
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: packet_ack_sequences
        in: path
        description: list of acknowledgement sequences
        required: true
        style: simple
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryUnreceivedAcksResponse is the response type for the
                  Query/UnreceivedAcks RPC method
                type: object
                properties:
                  sequences:
                    title: list of unreceived acknowledgement sequences
                    type: array
                    items:
                      type: string
                      format: uint64
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets:
    get:
      tags:
      - Query
      summary: |-
        UnreceivedPackets returns all the unreceived IBC packets associated with a
        channel and sequences.
      operationId: UnreceivedPackets
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: packet_commitment_sequences
        in: path
        description: list of packet sequences
        required: true
        style: simple
        explode: false
        schema:
          minItems: 1
          type: array
          items:
            type: string
            format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryUnreceivedPacketsResponse is the response type for the
                  Query/UnreceivedPacketCommitments RPC method
                type: object
                properties:
                  sequences:
                    title: list of unreceived packet sequences
                    type: array
                    items:
                      type: string
                      format: uint64
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}:
    get:
      tags:
      - Query
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: PacketCommitment
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketCommitmentResponse defines the client query response for a packet
                  which also includes a proof and the height from which the proof was
                  retrieved
                type: object
                properties:
                  commitment:
                    title: packet associated with the request fields
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}:
    get:
      tags:
      - Query
      summary: |-
        PacketReceipt queries if a given packet sequence has been received on the
        queried chain
      operationId: PacketReceipt
      parameters:
      - name: channel_id
        in: path
        description: channel unique identifier
        required: true
        schema:
          type: string
      - name: port_id
        in: path
        description: port unique identifier
        required: true
        schema:
          type: string
      - name: sequence
        in: path
        description: packet sequence
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryPacketReceiptResponse defines the client query response for a packet
                  receipt which also includes a proof, and the height from which the proof was
                  retrieved
                type: object
                properties:
                  received:
                    title: success flag for if receipt exists
                    type: boolean
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/channel/v1/connections/{connection}/channels:
    get:
      tags:
      - Query
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      operationId: ConnectionChannels
      parameters:
      - name: connection
        in: path
        description: connection unique identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionChannelsResponse is the Response type for the
                  Query/QueryConnectionChannels RPC method
                type: object
                properties:
                  channels:
                    type: array
                    description: list of channels associated with a connection.
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          description: |-
                            State defines if a channel is in one of the following states:
                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          description: |-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                          default: ORDER_NONE_UNSPECIFIED
                          enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns
                                the other end of the channel.
                            channel_id:
                              title: channel end on the counterparty chain
                              type: string
                        connection_hops:
                          title: |-
                            list of connection identifiers, in order, along which packets sent on
                            this channel will travel
                          type: array
                          items:
                            type: string
                        version:
                          title: opaque channel version, which is agreed upon during
                            the handshake
                          type: string
                        port_id:
                          title: port identifier
                          type: string
                        channel_id:
                          title: channel identifier
                          type: string
                      description: |-
                        IdentifiedChannel defines a channel with additional port and channel
                        identifier fields.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/client/v1/params:
    get:
      tags:
      - Query
      summary: ClientParams queries all parameters of the ibc client.
      operationId: ClientParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      allowed_clients:
                        type: array
                        description: allowed_clients defines the list of allowed client
                          state types.
                        items:
                          type: string
                    description: params defines the parameters of the module.
                description: |-
                  QueryClientParamsResponse is the response type for the Query/ClientParams RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_states:
    get:
      tags:
      - Query
      summary: ClientStates queries all the IBC light clients of a chain.
      operationId: ClientStates
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  client_states:
                    type: array
                    description: list of stored ClientStates of the chain.
                    items:
                      type: object
                      properties:
                        client_id:
                          title: client identifier
                          type: string
                        client_state:
                          title: client state
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      description: |-
                        IdentifiedClientState defines a client state with an additional client
                        identifier field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: |-
                  QueryClientStatesResponse is the response type for the Query/ClientStates RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_states/{client_id}:
    get:
      tags:
      - Query
      summary: ClientState queries an IBC light client.
      operationId: ClientState
      parameters:
      - name: client_id
        in: path
        description: client state unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  client_state:
                    title: client state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryClientStateResponse is the response type for the Query/ClientState RPC
                  method. Besides the client state, it includes a proof and the height from
                  which the proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/client_status/{client_id}:
    get:
      tags:
      - Query
      summary: Status queries the status of an IBC client.
      operationId: ClientStatus
      parameters:
      - name: client_id
        in: path
        description: client unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  status:
                    type: string
                description: |-
                  QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
                  method. It returns the current status of the IBC client.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/consensus_states/{client_id}:
    get:
      tags:
      - Query
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      operationId: ConsensusStates
      parameters:
      - name: client_id
        in: path
        description: client identifier
        required: true
        schema:
          type: string
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConsensusStatesResponse is the response type for the
                  Query/ConsensusStates RPC method
                type: object
                properties:
                  consensus_states:
                    title: consensus states associated with the identifier
                    type: array
                    items:
                      type: object
                      properties:
                        height:
                          title: consensus state height
                          type: object
                          properties:
                            revision_number:
                              title: the revision that the client is currently on
                              type: string
                              format: uint64
                            revision_height:
                              title: the height within the given revision
                              type: string
                              format: uint64
                          description: |-
                            Normally the RevisionHeight is incremented at each height while keeping
                            RevisionNumber the same. However some consensus algorithms may choose to
                            reset the height in certain conditions e.g. hard forks, state-machine
                            breaking changes In these cases, the RevisionNumber is incremented so that
                            height continues to be monitonically increasing even as the RevisionHeight
                            gets reset
                        consensus_state:
                          title: consensus state
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: |-
                                A URL/resource name that uniquely identifies the type of the serialized
                                protocol buffer message. This string must contain at least
                                one "/" character. The last segment of the URL's path must represent
                                the fully qualified name of the type (as in
                                `path/google.protobuf.Duration`). The name should be in a canonical form
                                (e.g., leading "." is not accepted).

                                In practice, teams usually precompile into the binary all types that they
                                expect it to use in the context of Any. However, for URLs which use the
                                scheme `http`, `https`, or no scheme, one can optionally set up a type
                                server that maps type URLs to message definitions as follows:

                                * If no scheme is provided, `https` is assumed.
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently available in the official
                                protobuf release, and it is not used for type URLs beginning with
                                type.googleapis.com.

                                Schemes other than `http`, `https` (or the empty scheme) might be
                                used with implementation specific semantics.
                            value:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                          description: |-
                            `Any` contains an arbitrary serialized protocol buffer message along with a
                            URL that describes the type of the serialized message.

                            Protobuf library provides support to pack/unpack Any values in the form
                            of utility functions or additional generated methods of the Any type.

                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will by default use
                            'type.googleapis.com/full.type.name' as the type URL and the unpack
                            methods only use the fully qualified type name after the last '/'
                            in the type URL, for example "foo.bar.com/x/y.z" will yield type
                            name "y.z".


                            JSON
                            ====
                            The JSON representation of an `Any` value uses the regular
                            representation of the deserialized, embedded message, with an
                            additional field `@type` which contains the type URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a custom JSON
                            representation, that representation will be embedded adding a field
                            `value` which holds the custom JSON in addition to the `@type`
                            field. Example (for message [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                      description: |-
                        ConsensusStateWithHeight defines a consensus state with an additional height
                        field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ConsensusState queries a consensus state associated with a client state at
        a given height.
      operationId: ConsensusState
      parameters:
      - name: client_id
        in: path
        description: client identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        description: consensus state revision number
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        description: consensus state revision height
        required: true
        schema:
          type: string
          format: uint64
      - name: latest_height
        in: query
        description: |-
          latest_height overrrides the height field and queries the latest stored
          ConsensusState.
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConsensusStateResponse is the response type for the Query/ConsensusState
                  RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the client identifier at
                      the given height
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/upgraded_client_states:
    get:
      tags:
      - Query
      summary: UpgradedClientState queries an Upgraded IBC light client.
      operationId: UpgradedClientState
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_client_state:
                    title: client state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: |-
                  QueryUpgradedClientStateResponse is the response type for the
                  Query/UpgradedClientState RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      tags:
      - Query
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      operationId: IBCUpgradedConsensusState
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    title: Consensus state associated with the request identifier
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                description: |-
                  QueryUpgradedConsensusStateResponse is the response type for the
                  Query/UpgradedConsensusState RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/client_connections/{client_id}:
    get:
      tags:
      - Query
      summary: |-
        ClientConnections queries the connection paths associated with a client
        state.
      operationId: ClientConnections
      parameters:
      - name: client_id
        in: path
        description: client identifier associated with a connection
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryClientConnectionsResponse is the response type for the
                  Query/ClientConnections RPC method
                type: object
                properties:
                  connection_paths:
                    type: array
                    description: slice of all the connection paths associated with
                      a client.
                    items:
                      type: string
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was generated
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections:
    get:
      tags:
      - Query
      summary: Connections queries all the IBC connections of a chain.
      operationId: Connections
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    description: list of stored connections of the chain.
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: connection identifier.
                        client_id:
                          type: string
                          description: client associated with this connection.
                        versions:
                          title: |-
                            IBC version which can be utilised to determine encodings or protocols for
                            channels or packets utilising this connection
                          type: array
                          items:
                            type: object
                            properties:
                              identifier:
                                title: unique version identifier
                                type: string
                              features:
                                title: list of features compatible with the specified
                                  identifier
                                type: array
                                items:
                                  type: string
                            description: |-
                              Version defines the versioning scheme used to negotiate the IBC verison in
                              the connection handshake.
                        state:
                          type: string
                          description: current state of the connection end.
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                        counterparty:
                          type: object
                          properties:
                            client_id:
                              type: string
                              description: |-
                                identifies the client on the counterparty chain associated with a given
                                connection.
                            connection_id:
                              type: string
                              description: |-
                                identifies the connection end on the counterparty chain associated with a
                                given connection.
                            prefix:
                              title: |-
                                MerklePrefix is merkle path prefixed to the key.
                                The constructed key from the Path and the key will be append(Path.KeyPath,
                                append(Path.KeyPrefix, key...))
                              type: object
                              properties:
                                key_prefix:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                              description: commitment merkle prefix of the counterparty
                                chain.
                          description: counterparty chain associated with this connection.
                        delay_period:
                          type: string
                          description: delay period associated with this connection.
                          format: uint64
                      description: |-
                        IdentifiedConnection defines a connection with additional connection
                        identifier field.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: |-
                      PageResponse is to be embedded in gRPC response messages where the
                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryConnectionsResponse is the response type for the Query/Connections RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}:
    get:
      tags:
      - Query
      summary: Connection queries an IBC connection end.
      operationId: Connection
      parameters:
      - name: connection_id
        in: path
        description: connection unique identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  connection:
                    title: connection associated with the request identifier
                    type: object
                    properties:
                      client_id:
                        type: string
                        description: client associated with this connection.
                      versions:
                        type: array
                        description: |-
                          IBC version which can be utilised to determine encodings or protocols for
                          channels or packets utilising this connection.
                        items:
                          type: object
                          properties:
                            identifier:
                              title: unique version identifier
                              type: string
                            features:
                              title: list of features compatible with the specified
                                identifier
                              type: array
                              items:
                                type: string
                          description: |-
                            Version defines the versioning scheme used to negotiate the IBC verison in
                            the connection handshake.
                      state:
                        type: string
                        description: current state of the connection end.
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        enum:
                        - STATE_UNINITIALIZED_UNSPECIFIED
                        - STATE_INIT
                        - STATE_TRYOPEN
                        - STATE_OPEN
                      counterparty:
                        type: object
                        properties:
                          client_id:
                            type: string
                            description: |-
                              identifies the client on the counterparty chain associated with a given
                              connection.
                          connection_id:
                            type: string
                            description: |-
                              identifies the connection end on the counterparty chain associated with a
                              given connection.
                          prefix:
                            title: |-
                              MerklePrefix is merkle path prefixed to the key.
                              The constructed key from the Path and the key will be append(Path.KeyPath,
                              append(Path.KeyPrefix, key...))
                            type: object
                            properties:
                              key_prefix:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: commitment merkle prefix of the counterparty
                              chain.
                        description: counterparty chain associated with this connection.
                      delay_period:
                        type: string
                        description: |-
                          delay period that must pass before a consensus state can be used for
                          packet-verification NOTE: delay period logic is only implemented by some
                          clients.
                        format: uint64
                    description: |-
                      ConnectionEnd defines a stateful object on a chain connected to another
                      separate one.
                      NOTE: there must only be 2 defined ConnectionEnds to establish
                      a connection between two chains.
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
                description: |-
                  QueryConnectionResponse is the response type for the Query/Connection RPC
                  method. Besides the connection end, it includes a proof and the height from
                  which the proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}/client_state:
    get:
      tags:
      - Query
      summary: |-
        ConnectionClientState queries the client state associated with the
        connection.
      operationId: ConnectionClientState
      parameters:
      - name: connection_id
        in: path
        description: connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionClientStateResponse is the response type for the
                  Query/ConnectionClientState RPC method
                type: object
                properties:
                  identified_client_state:
                    title: client state associated with the channel
                    type: object
                    properties:
                      client_id:
                        title: client identifier
                        type: string
                      client_state:
                        title: client state
                        type: object
                        properties:
                          type_url:
                            type: string
                            description: |-
                              A URL/resource name that uniquely identifies the type of the serialized
                              protocol buffer message. This string must contain at least
                              one "/" character. The last segment of the URL's path must represent
                              the fully qualified name of the type (as in
                              `path/google.protobuf.Duration`). The name should be in a canonical form
                              (e.g., leading "." is not accepted).

                              In practice, teams usually precompile into the binary all types that they
                              expect it to use in the context of Any. However, for URLs which use the
                              scheme `http`, `https`, or no scheme, one can optionally set up a type
                              server that maps type URLs to message definitions as follows:

                              * If no scheme is provided, `https` is assumed.
                              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently available in the official
                              protobuf release, and it is not used for type URLs beginning with
                              type.googleapis.com.

                              Schemes other than `http`, `https` (or the empty scheme) might be
                              used with implementation specific semantics.
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                        description: |-
                          `Any` contains an arbitrary serialized protocol buffer message along with a
                          URL that describes the type of the serialized message.

                          Protobuf library provides support to pack/unpack Any values in the form
                          of utility functions or additional generated methods of the Any type.

                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := ptypes.MarshalAny(foo)
                               ...
                               foo := &pb.Foo{}
                               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by default use
                          'type.googleapis.com/full.type.name' as the type URL and the unpack
                          methods only use the fully qualified type name after the last '/'
                          in the type URL, for example "foo.bar.com/x/y.z" will yield type
                          name "y.z".


                          JSON
                          ====
                          The JSON representation of an `Any` value uses the regular
                          representation of the deserialized, embedded message, with an
                          additional field `@type` which contains the type URL. Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a custom JSON
                          representation, that representation will be embedded adding a field
                          `value` which holds the custom JSON in addition to the `@type`
                          field. Example (for message [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                    description: |-
                      IdentifiedClientState defines a client state with an additional client
                      identifier field.
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/core/connection/v1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}:
    get:
      tags:
      - Query
      summary: |-
        ConnectionConsensusState queries the consensus state associated with the
        connection.
      operationId: ConnectionConsensusState
      parameters:
      - name: connection_id
        in: path
        description: connection identifier
        required: true
        schema:
          type: string
      - name: revision_number
        in: path
        required: true
        schema:
          type: string
          format: uint64
      - name: revision_height
        in: path
        required: true
        schema:
          type: string
          format: uint64
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                title: |-
                  QueryConnectionConsensusStateResponse is the response type for the
                  Query/ConnectionConsensusState RPC method
                type: object
                properties:
                  consensus_state:
                    title: consensus state associated with the channel
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  client_id:
                    title: client ID associated with the consensus state
                    type: string
                  proof:
                    title: merkle proof of existence
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        title: the revision that the client is currently on
                        type: string
                        format: uint64
                      revision_height:
                        title: the height within the given revision
                        type: string
                        format: uint64
                    description: |-
                      Normally the RevisionHeight is incremented at each height while keeping
                      RevisionNumber the same. However some consensus algorithms may choose to
                      reset the height in certain conditions e.g. hard forks, state-machine
                      breaking changes In these cases, the RevisionNumber is incremented so that
                      height continues to be monitonically increasing even as the RevisionHeight
                      gets reset
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: |-
                            A URL/resource name that uniquely identifies the type of the serialized
                            protocol buffer message. This string must contain at least
                            one "/" character. The last segment of the URL's path must represent
                            the fully qualified name of the type (as in
                            `path/google.protobuf.Duration`). The name should be in a canonical form
                            (e.g., leading "." is not accepted).

                            In practice, teams usually precompile into the binary all types that they
                            expect it to use in the context of Any. However, for URLs which use the
                            scheme `http`, `https`, or no scheme, one can optionally set up a type
                            server that maps type URLs to message definitions as follows:

                            * If no scheme is provided, `https` is assumed.
                            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available in the official
                            protobuf release, and it is not used for type URLs beginning with
                            type.googleapis.com.

                            Schemes other than `http`, `https` (or the empty scheme) might be
                            used with implementation specific semantics.
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                      description: |-
                        `Any` contains an arbitrary serialized protocol buffer message along with a
                        URL that describes the type of the serialized message.

                        Protobuf library provides support to pack/unpack Any values in the form
                        of utility functions or additional generated methods of the Any type.

                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by default use
                        'type.googleapis.com/full.type.name' as the type URL and the unpack
                        methods only use the fully qualified type name after the last '/'
                        in the type URL, for example "foo.bar.com/x/y.z" will yield type
                        name "y.z".


                        JSON
                        ====
                        The JSON representation of an `Any` value uses the regular
                        representation of the deserialized, embedded message, with an
                        additional field `@type` which contains the type URL. Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a custom JSON
                        representation, that representation will be embedded adding a field
                        `value` which holds the custom JSON in addition to the `@type`
                        field. Example (for message [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      tags:
      - Query
      summary: DenomHash queries a denomination hash information.
      operationId: DenomHash
      parameters:
      - name: trace
        in: path
        description: The denomination trace ([port_id]/[channel_id])+/[denom]
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    description: hash (in hex format) of the denomination trace information.
                description: |-
                  QueryDenomHashResponse is the response type for the Query/DenomHash RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denom_traces:
    get:
      tags:
      - Query
      summary: DenomTraces queries all denomination traces.
      operationId: DenomTraces
      parameters:
      - name: pagination.key
        in: query
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        schema:
          type: string
          format: byte
      - name: pagination.offset
        in: query
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        schema:
          type: string
          format: uint64
      - name: pagination.limit
        in: query
        description: |-
          limit is the total number of results to be returned in the result page.
          If left empty it will default to a value to be set by each app.
        schema:
          type: string
          format: uint64
      - name: pagination.count_total
        in: query
        description: |-
          count_total is set to true  to indicate that the result set should include
          a count of the total number of items available for pagination in UIs.
          count_total is only respected when offset is used. It is ignored when key
          is set.
        schema:
          type: boolean
      - name: pagination.reverse
        in: query
        description: |-
          reverse is set to true if results are to be returned in the descending order.

          Since: cosmos-sdk 0.43
        schema:
          type: boolean
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_traces:
                    type: array
                    description: denom_traces returns all denominations trace information.
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          description: |-
                            path defines the chain of port/channel identifiers used for tracing the
                            source of the fungible token.
                        base_denom:
                          type: string
                          description: base denomination of the relayed fungible token.
                      description: |-
                        DenomTrace contains the base denomination for ICS20 fungible tokens and the
                        source tracing information path.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      total:
                        title: |-
                          total is total number of results available if PageRequest.count_total
                          was set, its value is undefined otherwise
                        type: string
                        format: uint64
                    description: pagination defines the pagination in the response.
                description: |-
                  QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/denom_traces/{hash}:
    get:
      tags:
      - Query
      summary: DenomTrace queries a denomination trace information.
      operationId: DenomTrace
      parameters:
      - name: hash
        in: path
        description: hash (in hex format) or denom (full denom with ibc prefix) of
          the denomination trace information.
        required: true
        schema:
          type: string
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  denom_trace:
                    type: object
                    properties:
                      path:
                        type: string
                        description: |-
                          path defines the chain of port/channel identifiers used for tracing the
                          source of the fungible token.
                      base_denom:
                        type: string
                        description: base denomination of the relayed fungible token.
                    description: |-
                      DenomTrace contains the base denomination for ICS20 fungible tokens and the
                      source tracing information path.
                description: |-
                  QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
  /ibc/apps/transfer/v1/params:
    get:
      tags:
      - Query
      summary: Params queries all parameters of the ibc-transfer module.
      operationId: IBCTransferParams
      responses:
        200:
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: boolean
                        description: |-
                          send_enabled enables or disables all cross-chain token transfers from this
                          chain.
                      receive_enabled:
                        type: boolean
                        description: |-
                          receive_enabled enables or disables all cross-chain token transfers to this
                          chain.
                    description: params defines the parameters of the module.
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
components:
  schemas:
    CheckTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
        - ""
        - ""
    DeliverTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
        - ""
        - ""
    BroadcastTxCommitResult:
      type: object
      properties:
        check_tx:
          type: object
          properties:
            code:
              type: integer
            data:
              type: string
            gas_used:
              type: integer
            gas_wanted:
              type: integer
            info:
              type: string
            log:
              type: string
            tags:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
          example:
            code: 0
            data: data
            log: log
            gas_used: 5000
            gas_wanted: 10000
            info: info
            tags:
            - ""
            - ""
        deliver_tx:
          type: object
          properties:
            code:
              type: integer
            data:
              type: string
            gas_used:
              type: integer
            gas_wanted:
              type: integer
            info:
              type: string
            log:
              type: string
            tags:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
          example:
            code: 5
            data: data
            log: log
            gas_used: 5000
            gas_wanted: 10000
            info: info
            tags:
            - ""
            - ""
        hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        height:
          type: integer
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Msg:
      type: string
    Address:
      type: string
      description: bech32 encoded address
      example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: uluna
        amount:
          type: string
          example: "50"
    DecCoin:
      type: object
      properties:
        denom:
          type: string
          example: ukrw
        amount:
          type: string
          example: "50.000"
    Hash:
      type: string
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
    TxQuery:
      type: object
      properties:
        hash:
          type: string
          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
        height:
          type: number
          example: 368.0
        tx:
          type: object
          properties:
            msg:
              type: array
              items:
                type: string
            fee:
              type: object
              properties:
                gas:
                  type: string
                amount:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
            memo:
              type: string
            signature:
              type: object
              properties:
                signature:
                  type: string
                  example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                pub_key:
                  type: object
                  properties:
                    type:
                      type: string
                      example: tendermint/PubKeySecp256k1
                    value:
                      type: string
                      example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                account_number:
                  type: string
                  example: "0"
                sequence:
                  type: string
                  example: "0"
        result:
          type: object
          properties:
            log:
              type: string
            gas_wanted:
              type: string
              example: "200000"
            gas_used:
              type: string
              example: "26354"
            tags:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
    PaginatedQueryTxs:
      type: object
      properties:
        total_count:
          type: number
          example: 1.0
        count:
          type: number
          example: 1.0
        page_number:
          type: number
          example: 1.0
        page_total:
          type: number
          example: 1.0
        limit:
          type: number
          example: 30.0
        txs:
          type: array
          items:
            type: object
            properties:
              hash:
                type: string
                example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
              height:
                type: number
                example: 368.0
              tx:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: uluna
                            amount:
                              type: string
                              example: "50"
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: "0"
                      sequence:
                        type: string
                        example: "0"
              result:
                type: object
                properties:
                  log:
                    type: string
                  gas_wanted:
                    type: string
                    example: "200000"
                  gas_used:
                    type: string
                    example: "26354"
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            type: string
        fee:
          type: object
          properties:
            gas:
              type: string
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
        memo:
          type: string
        signature:
          type: object
          properties:
            signature:
              type: string
              example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            pub_key:
              type: object
              properties:
                type:
                  type: string
                  example: tendermint/PubKeySecp256k1
                value:
                  type: string
                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "0"
    BlockID:
      type: object
      properties:
        hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        parts:
          type: object
          properties:
            total:
              type: number
              example: 0.0
            hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
    BlockHeader:
      type: object
      properties:
        chain_id:
          type: string
          example: columbus-5
        height:
          type: number
          example: 1.0
        time:
          type: string
          example: 2017-12-30T05:53:09.287+01:00
        num_txs:
          type: number
          example: 0.0
        last_block_id:
          type: object
          properties:
            hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            parts:
              type: object
              properties:
                total:
                  type: number
                  example: 0.0
                hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
        total_txs:
          type: number
          example: 35.0
        last_commit_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        data_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        validators_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        next_validators_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        consensus_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        app_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        last_results_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        evidence_hash:
          type: string
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
        proposer_address:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        version:
          type: object
          properties:
            block:
              type: string
              example: "10"
            app:
              type: string
              example: "0"
    Block:
      type: object
      properties:
        header:
          type: object
          properties:
            chain_id:
              type: string
              example: columbus-5
            height:
              type: number
              example: 1.0
            time:
              type: string
              example: 2017-12-30T05:53:09.287+01:00
            num_txs:
              type: number
              example: 0.0
            last_block_id:
              type: object
              properties:
                hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                parts:
                  type: object
                  properties:
                    total:
                      type: number
                      example: 0.0
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
            total_txs:
              type: number
              example: 35.0
            last_commit_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            data_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            validators_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            next_validators_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            consensus_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            app_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            last_results_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            evidence_hash:
              type: string
              example: EE5F3404034C524501629B56E0DDC38FAD651F04
            proposer_address:
              type: string
              description: bech32 encoded address
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            version:
              type: object
              properties:
                block:
                  type: string
                  example: "10"
                app:
                  type: string
                  example: "0"
        txs:
          type: array
          items:
            type: string
        evidence:
          type: array
          items:
            type: string
        last_commit:
          type: object
          properties:
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                parts:
                  type: object
                  properties:
                    total:
                      type: number
                      example: 0.0
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
            precommits:
              type: array
              items:
                type: object
                properties:
                  validator_address:
                    type: string
                  validator_index:
                    type: string
                    example: "0"
                  height:
                    type: string
                    example: "0"
                  round:
                    type: string
                    example: "0"
                  timestamp:
                    type: string
                    example: 2017-12-30T05:53:09.287+01:00
                  type:
                    type: number
                    example: 2.0
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      parts:
                        type: object
                        properties:
                          total:
                            type: number
                            example: 0.0
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  signature:
                    type: string
                    example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    BlockQuery:
      type: object
      properties:
        block_meta:
          type: object
          properties:
            header:
              type: object
              properties:
                chain_id:
                  type: string
                  example: columbus-5
                height:
                  type: number
                  example: 1.0
                time:
                  type: string
                  example: 2017-12-30T05:53:09.287+01:00
                num_txs:
                  type: number
                  example: 0.0
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    parts:
                      type: object
                      properties:
                        total:
                          type: number
                          example: 0.0
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                total_txs:
                  type: number
                  example: 35.0
                last_commit_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                data_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                validators_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                next_validators_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                consensus_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                app_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                last_results_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                evidence_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                proposer_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                version:
                  type: object
                  properties:
                    block:
                      type: string
                      example: "10"
                    app:
                      type: string
                      example: "0"
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                parts:
                  type: object
                  properties:
                    total:
                      type: number
                      example: 0.0
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                chain_id:
                  type: string
                  example: columbus-5
                height:
                  type: number
                  example: 1.0
                time:
                  type: string
                  example: 2017-12-30T05:53:09.287+01:00
                num_txs:
                  type: number
                  example: 0.0
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    parts:
                      type: object
                      properties:
                        total:
                          type: number
                          example: 0.0
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                total_txs:
                  type: number
                  example: 35.0
                last_commit_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                data_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                validators_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                next_validators_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                consensus_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                app_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                last_results_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                evidence_hash:
                  type: string
                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                proposer_address:
                  type: string
                  description: bech32 encoded address
                  example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
                version:
                  type: object
                  properties:
                    block:
                      type: string
                      example: "10"
                    app:
                      type: string
                      example: "0"
            txs:
              type: array
              items:
                type: string
            evidence:
              type: array
              items:
                type: string
            last_commit:
              type: object
              properties:
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    parts:
                      type: object
                      properties:
                        total:
                          type: number
                          example: 0.0
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                precommits:
                  type: array
                  items:
                    type: object
                    properties:
                      validator_address:
                        type: string
                      validator_index:
                        type: string
                        example: "0"
                      height:
                        type: string
                        example: "0"
                      round:
                        type: string
                        example: "0"
                      timestamp:
                        type: string
                        example: 2017-12-30T05:53:09.287+01:00
                      type:
                        type: number
                        example: 2.0
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0.0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      signature:
                        type: string
                        example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        reward:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
    DelegatorTotalRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              validator_address:
                type: string
                description: bech32 encoded address
                example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
              reward:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: uluna
                    amount:
                      type: string
                      example: "50"
        total:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
    BaseReq:
      type: object
      properties:
        from:
          type: string
          description: Sender address or Keybase name to generate a transaction
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        memo:
          type: string
          example: Sent via Terra Station
        chain_id:
          type: string
          example: Columbus-5
        account_number:
          type: string
          example: "0"
        sequence:
          type: string
          example: "1"
        gas:
          type: string
          example: "200000"
        gas_adjustment:
          type: string
          example: "1.2"
        fees:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        simulate:
          type: boolean
          description: Estimate gas for a transaction (cannot be used in conjunction
            with generate_only)
          example: false
    TendermintValidator:
      type: object
      properties:
        address:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        pub_key:
          type: object
          properties:
            type:
              type: string
            value:
              type: string
        voting_power:
          type: string
          example: "1000"
        proposer_priority:
          type: string
          example: "1000"
    TextProposal:
      type: object
      properties:
        id:
          type: string
          example: "1"
        content:
          type: object
          properties:
            type:
              type: string
              example: gov/TextProposal
            value:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
        status:
          type: number
        final_tally_result:
          type: object
          properties:
            "yes":
              type: string
              example: "0.0000000000"
            abstain:
              type: string
              example: "0.0000000000"
            "no":
              type: string
              example: "0.0000000000"
            no_with_veto:
              type: string
              example: "0.0000000000"
        total_deposit:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        submit_time:
          type: string
        deposit_end_time:
          type: string
        voting_start_time:
          type: string
        voting_end_time:
          type: string
    Proposer:
      type: object
      properties:
        proposal_id:
          type: string
        proposer:
          type: string
    Deposit:
      type: object
      properties:
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        proposal_id:
          type: string
        depositor:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    TallyResult:
      type: object
      properties:
        "yes":
          type: string
          example: "0.0000000000"
        abstain:
          type: string
          example: "0.0000000000"
        "no":
          type: string
          example: "0.0000000000"
        no_with_veto:
          type: string
          example: "0.0000000000"
    Vote:
      type: object
      properties:
        voter:
          type: string
        proposal_id:
          type: string
        options:
          type: array
          items:
            type: object
            properties:
              option:
                type: string
                description: |-
                  VoteOption enumerates the valid vote options for a given governance proposal.
                  - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option. - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option. - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option. - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option. - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
    Validator:
      type: object
      properties:
        operator_address:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        consensus_pubkey:
          type: object
          properties:
            type:
              type: string
            value:
              type: string
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          type: object
          properties:
            moniker:
              type: string
            identity:
              type: string
            website:
              type: string
            security_contact:
              type: string
            details:
              type: string
        bond_height:
          type: string
          example: "0"
        bond_intra_tx_counter:
          type: integer
          example: 0
        unbonding_height:
          type: string
          example: "0"
        unbonding_time:
          type: string
          example: 1970-01-01T00:00:00Z
        commission:
          type: object
          properties:
            rate:
              type: string
              example: "0"
            max_rate:
              type: string
              example: "0"
            max_change_rate:
              type: string
              example: "0"
            update_time:
              type: string
              example: 1970-01-01T00:00:00Z
    Delegation:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_address:
              type: string
            validator_address:
              type: string
            shares:
              type: string
        balance:
          type: object
          properties:
            denom:
              type: string
              example: uluna
            amount:
              type: string
              example: "50"
    UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        entries:
          type: array
          items:
            type: object
            properties:
              initial_balance:
                type: string
              balance:
                type: string
              creation_height:
                type: string
              completion_time:
                type: string
    UnbondingEntry:
      type: object
      properties:
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: string
        completion_time:
          type: string
    Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_src_address:
          type: string
        validator_dst_address:
          type: string
        entries:
          type: array
          items:
            type: object
            properties:
              creation_height:
                type: integer
              completion_time:
                type: integer
              initial_balance:
                type: string
              balance:
                type: string
              shares_dst:
                type: string
    RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: integer
        completion_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_dst:
          type: string
    ValidatorDistInfo:
      type: object
      properties:
        operator_address:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        self_bond_rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        val_commission:
          type: object
          properties:
            commission:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
    PublicKey:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    SigningInfo:
      type: object
      properties:
        address:
          type: string
          example: terravalcons1qsdpq864szmfk8nh82qcg7lyle6k95w07acdqn
        start_height:
          type: string
        index_offset:
          type: string
        jailed_until:
          type: string
        missed_blocks_counter:
          type: string
    ParamChange:
      type: object
      properties:
        subspace:
          type: string
          example: staking
        key:
          type: string
          example: MaxValidators
        subkey:
          type: string
          example: ""
        value:
          type: object
          properties: {}
    Supply:
      type: object
      properties:
        total:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
    BaseAccount:
      type: object
      properties:
        account_number:
          type: string
        address:
          type: string
        public_key:
          type: string
        sequence:
          type: string
    Account:
      type: object
      properties:
        type:
          type: string
          example: core/Account
        value:
          type: object
          properties:
            account_number:
              type: string
            address:
              type: string
            public_key:
              type: string
            sequence:
              type: string
    BaseVestingAccount:
      type: object
      properties:
        BaseAccount:
          type: object
          properties:
            account_number:
              type: string
            address:
              type: string
            public_key:
              type: string
            sequence:
              type: string
        original_vesting:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        delegated_free:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        delegated_vesting:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        end_time:
          type: string
          example: "0"
    Schedule:
      type: object
      properties:
        start_time:
          type: string
          example: "1556085600"
        end_time:
          type: string
          example: "1556085600"
        ratio:
          type: string
          example: "0.100000000000000000"
    VestingSchedule:
      type: object
      properties:
        denom:
          type: string
          example: usdr
        lazy_schedules:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: string
                example: "1556085600"
              end_time:
                type: string
                example: "1556085600"
              ratio:
                type: string
                example: "0.100000000000000000"
    BaseLazyGradedVestingAccount:
      type: object
      properties:
        BaseVestingAccount:
          type: object
          properties:
            BaseAccount:
              type: object
              properties:
                account_number:
                  type: string
                address:
                  type: string
                public_key:
                  type: string
                sequence:
                  type: string
            original_vesting:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            delegated_free:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            delegated_vesting:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            end_time:
              type: string
              example: "0"
        vesting_schedules:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: usdr
              lazy_schedules:
                type: array
                items:
                  type: object
                  properties:
                    start_time:
                      type: string
                      example: "1556085600"
                    end_time:
                      type: string
                      example: "1556085600"
                    ratio:
                      type: string
                      example: "0.100000000000000000"
    LazyGradedVestingAccount:
      type: object
      properties:
        type:
          type: string
          example: core/LazyGradedVestingAccount
        value:
          type: object
          properties:
            BaseVestingAccount:
              type: object
              properties:
                BaseAccount:
                  type: object
                  properties:
                    account_number:
                      type: string
                    address:
                      type: string
                    public_key:
                      type: string
                    sequence:
                      type: string
                original_vesting:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                delegated_free:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                delegated_vesting:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
                end_time:
                  type: string
                  example: "0"
            vesting_schedules:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: usdr
                  lazy_schedules:
                    type: array
                    items:
                      type: object
                      properties:
                        start_time:
                          type: string
                          example: "1556085600"
                        end_time:
                          type: string
                          example: "1556085600"
                        ratio:
                          type: string
                          example: "0.100000000000000000"
    SwapReq:
      required:
      - ask_denom
      - base_req
      - offer_coin
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        offer_coin:
          type: object
          properties:
            denom:
              type: string
              example: uluna
            amount:
              type: string
              example: "50"
        ask_denom:
          type: string
          example: uluna
        receiver:
          type: string
          description: the `receiver` field can be skipped when the receiver is trader
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    MarketParams:
      type: object
      properties:
        base_pool:
          type: number
          example: 1000000.0
        pool_recovery_period:
          type: number
          example: 16000.0
        min_stability_spread:
          type: number
          example: 0.02
    PrevoteReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        exchange_rate:
          type: number
          description: exchange rate of Luna in denom currency is to make prevote
            hash; this field is required to submit prevote in case absence of hash
          example: 1000.0
        salt:
          type: string
          description: salt is to make prevote hash; this field is required to submit
            prevote in case  absence of hash
          example: abcd
        hash:
          type: string
          description: hex string; hash of next vote; empty == skip prevote
          example: 061bf1e27dfff121f40c826e593c8a28ec299a02
        validator:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    VoteReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        exchange_rate:
          type: number
          description: proof exchange rate of Luna in denom currency was used to make
            prevote hash; initial prevote does not require this field
          example: 1000.0
        salt:
          type: string
          description: proof salt was used to make prevote hash; initial prevote does
            not require this field
          example: abcd
        validator:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    AggregatePrevoteReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        exchange_rates:
          type: string
          description: exchange rates of Luna in denom currencies are to make aggregate
            prevote hash; this field is required to submit prevote in case absence
            of hash
          example: 1000.0ukrw,1.2uusd,0.99usdr
        salt:
          type: string
          description: salt is to make prevote hash; this field is required to submit
            prevote in case  absence of hash
          example: abcd
        hash:
          type: string
          description: hex string; hash of next vote; empty == skip prevote
          example: 061bf1e27dfff121f40c826e593c8a28ec299a02
    AggregateVoteReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        exchange_rates:
          type: string
          description: proof exchange rates of Luna in denom currency were used to
            make aggregate prevote hash
          example: 1000.0ukrw,1.2uusd,0.99usdr
        salt:
          type: string
          description: proof salt was used to make prevote hash; initial prevote does
            not require this field
          example: abcd
    DelegateReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        feeder:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    ExchangeRateVote:
      type: object
      properties:
        exchange_rate:
          type: number
          example: 0.01241
        denom:
          type: string
          example: ukrw
        voter:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    ExchangeRatePrevote:
      type: object
      properties:
        hash:
          type: string
          example: 061bf1e27dfff121f40c826e593c8a28ec299a02
        denom:
          type: string
          example: uusd
        voter:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        submit_block:
          type: number
          example: 1.0
    AggregateExchangeRatePrevote:
      type: object
      properties:
        hash:
          type: string
          example: 061bf1e27dfff121f40c826e593c8a28ec299a02
        voter:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
        submit_block:
          type: number
          example: 1.0
    AggregateExchangeRateVote:
      type: object
      properties:
        exchange_rates:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: ukrw
              amount:
                type: string
                example: "50.000"
        voter:
          type: string
          description: bech32 encoded address
          example: terravaloper1wg2mlrxdmnnkkykgqg4znky86nyrtc45q7a85l
    OracleParams:
      type: object
      properties:
        vote_period:
          type: number
          example: 900.0
        vote_threshold:
          type: number
          example: 0.67
        drop_threshold:
          type: number
          example: 10.0
        oracle_reward_band:
          type: number
          example: 0.02
    PolicyConstraints:
      type: object
      properties:
        rate_min:
          type: number
          description: 0.05%
          format: float
          example: 0.00050
        rate_max:
          type: number
          description: 1%
          format: float
          example: 0.01
        cap:
          type: object
          properties:
            denom:
              type: string
              example: uluna
            amount:
              type: string
              example: "50"
        change_max:
          type: number
          description: 0.025%
          format: float
          example: 0.00025
    TreasuryParams:
      type: object
      properties:
        tax_policy:
          type: object
          properties:
            rate_min:
              type: number
              description: 0.05%
              format: float
              example: 0.00050
            rate_max:
              type: number
              description: 1%
              format: float
              example: 0.01
            cap:
              type: object
              properties:
                denom:
                  type: string
                  example: uluna
                amount:
                  type: string
                  example: "50"
            change_max:
              type: number
              description: 0.025%
              format: float
              example: 0.00025
        reward_policy:
          type: object
          properties:
            rate_min:
              type: number
              description: 0.05%
              format: float
              example: 0.00050
            rate_max:
              type: number
              description: 1%
              format: float
              example: 0.01
            cap:
              type: object
              properties:
                denom:
                  type: string
                  example: uluna
                amount:
                  type: string
                  example: "50"
            change_max:
              type: number
              description: 0.025%
              format: float
              example: 0.00025
        seigniorage_burden_target:
          type: number
          description: 67%
          format: float
          example: 0.67
        mining_increment:
          type: number
          format: float
          example: 1.07
        window_short:
          type: integer
          example: 4
        window_long:
          type: integer
          example: 52
        window_probation:
          type: integer
          example: 12
    WasmParams:
      type: object
      properties:
        max_contract_size:
          type: number
          description: allowed max contract bytes size
          format: integer
          example: 1000000.0
        max_contract_gas:
          type: number
          description: allowed max gas usages per each contract execution
          format: integer
          example: 1000000.0
        max_contract_msg_size:
          type: number
          description: allowed max contract exe msg bytes size
          format: integer
          example: 1000000.0
        max_contract_data_size:
          type: number
          description: allowed max contract return data size
          format: integer
          example: 100.0
        event_params:
          type: object
          properties:
            max_attribute_num:
              type: string
              description: 'allowed max # of contract attribute num'
              example: "128"
            max_attribute_key_length:
              type: string
              description: allowed max length of a contract event attribute key
              example: "128"
            max_attribute_value_length:
              type: string
              description: allowed max length of a contract event attribute value
              example: "128"
    MultiSignPubKey:
      type: object
      properties:
        threshold:
          type: number
          example: 1.0
        pubkeys:
          type: array
          items:
            type: string
            example: terrapub1addwnpepq2l6pwj8h9fwxdjuge7lazu0sszpkck0nlhjag6q9drffrd93atywdt8ksu
    StdSignature:
      type: object
      properties:
        signature:
          type: string
          example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
        pub_key:
          type: object
          properties:
            type:
              type: string
              example: tendermint/PubKeySecp256k1
            value:
              type: string
              example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
    EstimateFeeResp:
      type: object
      properties:
        fee:
          type: object
          properties:
            gas:
              type: string
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
    CodeInfo:
      type: object
      properties:
        code_hash:
          type: string
        creator:
          type: string
    ContractInfo:
      type: object
      properties:
        code_id:
          type: string
        address:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        creator:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        admin:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
        init_msg:
          type: string
    StoreCodeReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        wasm_bytes:
          type: string
          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
    MigrateCodeReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        wasm_bytes:
          type: string
          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
    InstantiateContractReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        init_coins:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        init_msg:
          type: string
          description: json formatted string
          example: '{}'
        admin:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    ExecuteContractReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        coins:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
        exec_msg:
          type: string
          example: '{}'
    MigrateContractReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        new_code_id:
          type: number
          format: integer
          example: 10.0
        migrate_msg:
          type: string
          example: '{}'
    UpdateContractAdminReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        new_admin:
          type: string
          description: bech32 encoded address
          example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
    ClearContractAdminReq:
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
    GenericAuthorization:
      type: object
      properties:
        type:
          type: string
          example: msgauth/GenericAuthorization
        value:
          type: object
          properties:
            msg_type:
              type: string
              example: send
    SendAuthorization:
      type: object
      properties:
        type:
          type: string
          example: msgauth/SendAuthorization
        value:
          type: object
          properties:
            spend_limit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
    GenericGrantInfo:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type:
              type: string
              example: msgauth/GenericAuthorization
            value:
              type: object
              properties:
                msg_type:
                  type: string
                  example: send
        expiration:
          type: string
          example: 2021-06-24T09:33:20.012999Z
    SendGrantInfo:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type:
              type: string
              example: msgauth/SendAuthorization
            value:
              type: object
              properties:
                spend_limit:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: uluna
                      amount:
                        type: string
                        example: "50"
        expiration:
          type: string
          example: 2021-06-24T09:33:20.012999Z
    GrantReq:
      required:
      - base_req
      - period
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        period:
          type: string
          description: nano second of time duration
          example: "3600000000000"
        limit:
          type: array
          description: required when grant MsgType == send
          items:
            type: object
            properties:
              denom:
                type: string
                example: uluna
              amount:
                type: string
                example: "50"
    RevokeGrantReq:
      required:
      - base_req
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
    ExecuteGrantReq:
      required:
      - base_req
      - msgs
      type: object
      properties:
        base_req:
          type: object
          properties:
            from:
              type: string
              description: Sender address or Keybase name to generate a transaction
              example: terra1wg2mlrxdmnnkkykgqg4znky86nyrtc45q336yv
            memo:
              type: string
              example: Sent via Terra Station
            chain_id:
              type: string
              example: Columbus-5
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "1"
            gas:
              type: string
              example: "200000"
            gas_adjustment:
              type: string
              example: "1.2"
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: uluna
                  amount:
                    type: string
                    example: "50"
            simulate:
              type: boolean
              description: Estimate gas for a transaction (cannot be used in conjunction
                with generate_only)
              example: false
        msgs:
          type: array
          items:
            type: string
    TaxCap:
      type: object
      properties:
        denom:
          type: string
          example: uluna
        tax_cap:
          type: string
          example: "50"
    cosmos.auth.v1beta1.Params:
      type: object
      properties:
        max_memo_characters:
          type: string
          format: uint64
        tx_sig_limit:
          type: string
          format: uint64
        tx_size_cost_per_byte:
          type: string
          format: uint64
        sig_verify_cost_ed25519:
          type: string
          format: uint64
        sig_verify_cost_secp256k1:
          type: string
          format: uint64
      description: Params defines the parameters for the auth module.
    cosmos.auth.v1beta1.QueryAccountResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryAccountResponse is the response type for the Query/Account
        RPC method.
    cosmos.auth.v1beta1.QueryAccountsResponse:
      type: object
      properties:
        accounts:
          title: accounts are the existing accounts
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAccountsResponse is the response type for the Query/Accounts RPC method.

        Since: cosmos-sdk 0.43
    cosmos.auth.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_memo_characters:
              type: string
              format: uint64
            tx_sig_limit:
              type: string
              format: uint64
            tx_size_cost_per_byte:
              type: string
              format: uint64
            sig_verify_cost_ed25519:
              type: string
              format: uint64
            sig_verify_cost_secp256k1:
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.base.query.v1beta1.PageRequest:
      title: |-
        PageRequest is to be embedded in gRPC request messages for efficient
        pagination. Ex:
      type: object
      properties:
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
        offset:
          type: string
          description: |-
            offset is a numeric offset that can be used when key is unavailable.
            It is less efficient than using key. Only one of offset or key should
            be set.
          format: uint64
        limit:
          type: string
          description: |-
            limit is the total number of results to be returned in the result page.
            If left empty it will default to a value to be set by each app.
          format: uint64
        count_total:
          type: boolean
          description: |-
            count_total is set to true  to indicate that the result set should include
            a count of the total number of items available for pagination in UIs.
            count_total is only respected when offset is used. It is ignored when key
            is set.
        reverse:
          type: boolean
          description: |-
            reverse is set to true if results are to be returned in the descending order.

            Since: cosmos-sdk 0.43
      description: |-
        message SomeRequest {
                 Foo some_parameter = 1;
                 PageRequest pagination = 2;
         }
    cosmos.base.query.v1beta1.PageResponse:
      type: object
      properties:
        next_key:
          title: |-
            next_key is the key to be passed to PageRequest.key to
            query the next page most efficiently
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        total:
          title: |-
            total is total number of results available if PageRequest.count_total
            was set, its value is undefined otherwise
          type: string
          format: uint64
      description: |-
        PageResponse is to be embedded in gRPC response messages where the
        corresponding request message has used PageRequest.

         message SomeResponse {
                 repeated Bar results = 1;
                 PageResponse page = 2;
         }
    google.protobuf.Any:
      type: object
      properties:
        type_url:
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := ptypes.MarshalAny(foo)
             ...
             foo := &pb.Foo{}
             if err := ptypes.UnmarshalAny(any, foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    grpc.gateway.runtime.Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
    cosmos.authz.v1beta1.Grant:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          type: string
          format: date-time
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
    cosmos.authz.v1beta1.QueryGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          description: authorizations is a list of grants granted for grantee by granter.
          items:
            type: object
            properties:
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              expiration:
                type: string
                format: date-time
            description: |-
              Grant gives permissions to execute
              the provide method with expiration time.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryGrantsResponse is the response type for the Query/Authorizations
        RPC method.
    cosmos.bank.v1beta1.DenomUnit:
      type: object
      properties:
        denom:
          type: string
          description: denom represents the string name of the given denom unit (e.g
            uatom).
        exponent:
          type: integer
          description: |-
            exponent represents power of 10 exponent that one must
            raise the base_denom to in order to equal the given DenomUnit's denom
            1 denom = 1^exponent base_denom
            (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
            exponent = 6, thus: 1 atom = 10^6 uatom).
          format: int64
        aliases:
          title: aliases is a list of string aliases for the given denom
          type: array
          items:
            type: string
      description: |-
        DenomUnit represents a struct that describes a given
        denomination unit of the basic token.
    cosmos.bank.v1beta1.Metadata:
      type: object
      properties:
        description:
          type: string
        denom_units:
          title: denom_units represents the list of DenomUnit's for a given coin
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                description: denom represents the string name of the given denom unit
                  (e.g uatom).
              exponent:
                type: integer
                description: |-
                  exponent represents power of 10 exponent that one must
                  raise the base_denom to in order to equal the given DenomUnit's denom
                  1 denom = 1^exponent base_denom
                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                  exponent = 6, thus: 1 atom = 10^6 uatom).
                format: int64
              aliases:
                title: aliases is a list of string aliases for the given denom
                type: array
                items:
                  type: string
            description: |-
              DenomUnit represents a struct that describes a given
              denomination unit of the basic token.
        base:
          type: string
          description: base represents the base denom (should be the DenomUnit with
            exponent = 0).
        display:
          type: string
          description: |-
            display indicates the suggested denom that should be
            displayed in clients.
        name:
          title: 'name defines the name of the token (eg: Cosmos Atom)'
          type: string
          description: 'Since: cosmos-sdk 0.43'
        symbol:
          type: string
          description: |-
            symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
            be the same as the display.

            Since: cosmos-sdk 0.43
      description: |-
        Metadata represents a struct that describes
        a basic token.
    cosmos.bank.v1beta1.Params:
      type: object
      properties:
        send_enabled:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        default_send_enabled:
          type: boolean
      description: Params defines the parameters for the bank module.
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          description: balances is the balances of all the coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
        method.
    cosmos.bank.v1beta1.QueryBalanceResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QueryBalanceResponse is the response type for the Query/Balance
        RPC method.
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      type: object
      properties:
        metadata:
          type: object
          properties:
            description:
              type: string
            denom_units:
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: denom represents the string name of the given denom
                      unit (e.g uatom).
                  exponent:
                    type: integer
                    description: |-
                      exponent represents power of 10 exponent that one must
                      raise the base_denom to in order to equal the given DenomUnit's denom
                      1 denom = 1^exponent base_denom
                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                  aliases:
                    title: aliases is a list of string aliases for the given denom
                    type: array
                    items:
                      type: string
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
            base:
              type: string
              description: base represents the base denom (should be the DenomUnit
                with exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
            name:
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
              description: 'Since: cosmos-sdk 0.43'
            symbol:
              type: string
              description: |-
                symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                be the same as the display.

                Since: cosmos-sdk 0.43
          description: |-
            Metadata represents a struct that describes
            a basic token.
      description: |-
        QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      type: object
      properties:
        metadatas:
          type: array
          description: metadata provides the client information for all the registered
            tokens.
          items:
            type: object
            properties:
              description:
                type: string
              denom_units:
                title: denom_units represents the list of DenomUnit's for a given
                  coin
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: denom represents the string name of the given denom
                        unit (e.g uatom).
                    exponent:
                      type: integer
                      description: |-
                        exponent represents power of 10 exponent that one must
                        raise the base_denom to in order to equal the given DenomUnit's denom
                        1 denom = 1^exponent base_denom
                        (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                        exponent = 6, thus: 1 atom = 10^6 uatom).
                      format: int64
                    aliases:
                      title: aliases is a list of string aliases for the given denom
                      type: array
                      items:
                        type: string
                  description: |-
                    DenomUnit represents a struct that describes a given
                    denomination unit of the basic token.
              base:
                type: string
                description: base represents the base denom (should be the DenomUnit
                  with exponent = 0).
              display:
                type: string
                description: |-
                  display indicates the suggested denom that should be
                  displayed in clients.
              name:
                title: 'name defines the name of the token (eg: Cosmos Atom)'
                type: string
                description: 'Since: cosmos-sdk 0.43'
              symbol:
                type: string
                description: |-
                  symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                  be the same as the display.

                  Since: cosmos-sdk 0.43
            description: |-
              Metadata represents a struct that describes
              a basic token.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
        method.
    cosmos.bank.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                description: |-
                  SendEnabled maps coin denom to a send_enabled status (whether a denom is
                  sendable).
            default_send_enabled:
              type: boolean
          description: Params defines the parameters for the bank module.
      description: QueryParamsResponse defines the response type for querying x/bank
        parameters.
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      type: object
      properties:
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
        RPC method.
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      title: |-
        QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
        method
      type: object
      properties:
        supply:
          title: supply is the supply of the coins
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            pagination defines the pagination in the response.

            Since: cosmos-sdk 0.43
    cosmos.bank.v1beta1.SendEnabled:
      type: object
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
    cosmos.base.v1beta1.Coin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      Tendermint block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Tendermint Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Tendermint Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
      description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      type: object
      properties:
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a Tendermint block header.
            data:
              title: Data contains the set of transactions included in the block
              type: object
              properties:
                txs:
                  type: array
                  description: |-
                    Txs that will be applied by state @ block.Height+1.
                    NOTE: not all txs here are valid.  We're just agreeing on the order first.
                    This means that block.AppHash does not include these txs.
                  items:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |-
                                  SignedMsgType is a type of signed message in the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: |-
                              Vote represents a prevote, precommit, or commit vote from validators for
                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: |-
                                          Consensus captures the consensus rules for processing a block in the blockchain,
                                          including all blockchain data structures and the rules of the application's
                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      last_commit_hash:
                                        title: hashes of block data
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      data_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      validators_hash:
                                        title: hashes from the app output from the
                                          prev block
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      next_validators_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      app_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        title: consensus info
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      proposer_address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a
                                      Tendermint block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        title: BlockID
                                        type: object
                                        properties:
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          part_set_header:
                                            title: PartsetHeader
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                                type: string
                                                format: byte
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            validator_address:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        pub_key:
                                          title: PublicKey defines the keys available
                                            for use with Tendermint Validators
                                          type: object
                                          properties:
                                            ed25519:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                            secp256k1:
                                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                              type: string
                                              format: byte
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      pub_key:
                                        title: PublicKey defines the keys available
                                          for use with Tendermint Validators
                                        type: object
                                        properties:
                                          ed25519:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                          secp256k1:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
      description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
        RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      type: object
      properties:
        default_node_info:
          type: object
          properties:
            protocol_version:
              type: object
              properties:
                p2p:
                  type: string
                  format: uint64
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
            default_node_id:
              type: string
            listen_addr:
              type: string
            network:
              type: string
            version:
              type: string
            channels:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            moniker:
              type: string
            other:
              type: object
              properties:
                tx_index:
                  type: string
                rpc_address:
                  type: string
        application_version:
          type: object
          properties:
            name:
              type: string
            app_name:
              type: string
            version:
              type: string
            git_commit:
              type: string
            build_tags:
              type: string
            go_version:
              type: string
            build_deps:
              type: array
              items:
                title: Module is the type for VersionInfo
                type: object
                properties:
                  path:
                    title: module path
                    type: string
                  version:
                    title: module version
                    type: string
                  sum:
                    title: checksum
                    type: string
            cosmos_sdk_version:
              title: 'Since: cosmos-sdk 0.43'
              type: string
          description: VersionInfo is the type for the GetNodeInfoResponse message.
      description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
        RPC method.
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      type: object
      properties:
        syncing:
          type: boolean
      description: GetSyncingResponse is the response type for the Query/GetSyncing
        RPC method.
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
    cosmos.base.tendermint.v1beta1.Module:
      title: Module is the type for VersionInfo
      type: object
      properties:
        path:
          title: module path
          type: string
        version:
          title: module version
          type: string
        sum:
          title: checksum
          type: string
    cosmos.base.tendermint.v1beta1.Validator:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
      description: Validator is the type for the validator-set.
    cosmos.base.tendermint.v1beta1.VersionInfo:
      type: object
      properties:
        name:
          type: string
        app_name:
          type: string
        version:
          type: string
        git_commit:
          type: string
        build_tags:
          type: string
        go_version:
          type: string
        build_deps:
          type: array
          items:
            title: Module is the type for VersionInfo
            type: object
            properties:
              path:
                title: module path
                type: string
              version:
                title: module version
                type: string
              sum:
                title: checksum
                type: string
        cosmos_sdk_version:
          title: 'Since: cosmos-sdk 0.43'
          type: string
      description: VersionInfo is the type for the GetNodeInfoResponse message.
    tendermint.crypto.PublicKey:
      title: PublicKey defines the keys available for use with Tendermint Validators
      type: object
      properties:
        ed25519:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        secp256k1:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    tendermint.p2p.DefaultNodeInfo:
      type: object
      properties:
        protocol_version:
          type: object
          properties:
            p2p:
              type: string
              format: uint64
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
        default_node_id:
          type: string
        listen_addr:
          type: string
        network:
          type: string
        version:
          type: string
        channels:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        moniker:
          type: string
        other:
          type: object
          properties:
            tx_index:
              type: string
            rpc_address:
              type: string
    tendermint.p2p.DefaultNodeInfoOther:
      type: object
      properties:
        tx_index:
          type: string
        rpc_address:
          type: string
    tendermint.p2p.ProtocolVersion:
      type: object
      properties:
        p2p:
          type: string
          format: uint64
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
    tendermint.types.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a Tendermint block header.
        data:
          title: Data contains the set of transactions included in the block
          type: object
          properties:
            txs:
              type: array
              description: |-
                Txs that will be applied by state @ block.Height+1.
                NOTE: not all txs here are valid.  We're just agreeing on the order first.
                This means that block.AppHash does not include these txs.
              items:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            description: |-
                              SignedMsgType is a type of signed message in the consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            title: BlockID
                            type: object
                            properties:
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              part_set_header:
                                title: PartsetHeader
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: |-
                          Vote represents a prevote, precommit, or commit vote from validators for
                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: |-
                                      Consensus captures the consensus rules for processing a block in the blockchain,
                                      including all blockchain data structures and the rules of the application's
                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  last_commit_hash:
                                    title: hashes of block data
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  data_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  validators_hash:
                                    title: hashes from the app output from the prev
                                      block
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  next_validators_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  app_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    title: consensus info
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  proposer_address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                description: Header defines the structure of a Tendermint
                                  block header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    title: BlockID
                                    type: object
                                    properties:
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      part_set_header:
                                        title: PartsetHeader
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                            type: string
                                            format: byte
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        validator_address:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    pub_key:
                                      title: PublicKey defines the keys available
                                        for use with Tendermint Validators
                                      type: object
                                      properties:
                                        ed25519:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                        secp256k1:
                                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                          type: string
                                          format: byte
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  pub_key:
                                    title: PublicKey defines the keys available for
                                      use with Tendermint Validators
                                    type: object
                                    properties:
                                      ed25519:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                      secp256k1:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            pub_key:
                              title: PublicKey defines the keys available for use
                                with Tendermint Validators
                              type: object
                              properties:
                                ed25519:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                secp256k1:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.BlockID:
      title: BlockID
      type: object
      properties:
        hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        part_set_header:
          title: PartsetHeader
          type: object
          properties:
            total:
              type: integer
              format: int64
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
    tendermint.types.BlockIDFlag:
      title: BlockIdFlag indicates which BlcokID the signature is for
      type: string
      default: BLOCK_ID_FLAG_UNKNOWN
      enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
    tendermint.types.Commit:
      type: object
      properties:
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        signatures:
          type: array
          items:
            type: object
            properties:
              block_id_flag:
                title: BlockIdFlag indicates which BlcokID the signature is for
                type: string
                default: BLOCK_ID_FLAG_UNKNOWN
                enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
              validator_address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              timestamp:
                type: string
                format: date-time
              signature:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
            description: CommitSig is a part of the Vote included in a Commit.
      description: Commit contains the evidence that a block was committed by a set
        of validators.
    tendermint.types.CommitSig:
      type: object
      properties:
        block_id_flag:
          title: BlockIdFlag indicates which BlcokID the signature is for
          type: string
          default: BLOCK_ID_FLAG_UNKNOWN
          enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
        validator_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        timestamp:
          type: string
          format: date-time
        signature:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: CommitSig is a part of the Vote included in a Commit.
    tendermint.types.Data:
      title: Data contains the set of transactions included in the block
      type: object
      properties:
        txs:
          type: array
          description: |-
            Txs that will be applied by state @ block.Height+1.
            NOTE: not all txs here are valid.  We're just agreeing on the order first.
            This means that block.AppHash does not include these txs.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
    tendermint.types.DuplicateVoteEvidence:
      type: object
      properties:
        vote_a:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        vote_b:
          type: object
          properties:
            type:
              type: string
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
              default: SIGNED_MSG_TYPE_UNKNOWN
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            timestamp:
              type: string
              format: date-time
            validator_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            Vote represents a prevote, precommit, or commit vote from validators for
            consensus.
        total_voting_power:
          type: string
          format: int64
        validator_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: DuplicateVoteEvidence contains evidence of a validator signed two
        conflicting votes.
    tendermint.types.Evidence:
      type: object
      properties:
        duplicate_vote_evidence:
          type: object
          properties:
            vote_a:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            vote_b:
              type: object
              properties:
                type:
                  type: string
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: |-
                Vote represents a prevote, precommit, or commit vote from validators for
                consensus.
            total_voting_power:
              type: string
              format: int64
            validator_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: DuplicateVoteEvidence contains evidence of a validator signed
            two conflicting votes.
        light_client_attack_evidence:
          type: object
          properties:
            conflicting_block:
              type: object
              properties:
                signed_header:
                  type: object
                  properties:
                    header:
                      type: object
                      properties:
                        version:
                          title: basic block info
                          type: object
                          properties:
                            block:
                              type: string
                              format: uint64
                            app:
                              type: string
                              format: uint64
                          description: |-
                            Consensus captures the consensus rules for processing a block in the blockchain,
                            including all blockchain data structures and the rules of the application's
                            state transition machine.
                        chain_id:
                          type: string
                        height:
                          type: string
                          format: int64
                        time:
                          type: string
                          format: date-time
                        last_block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                        last_commit_hash:
                          title: hashes of block data
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        data_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        validators_hash:
                          title: hashes from the app output from the prev block
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        next_validators_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        consensus_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        app_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        last_results_hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        evidence_hash:
                          title: consensus info
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        proposer_address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                      description: Header defines the structure of a Tendermint block
                        header.
                    commit:
                      type: object
                      properties:
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          title: BlockID
                          type: object
                          properties:
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            part_set_header:
                              title: PartsetHeader
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                        signatures:
                          type: array
                          items:
                            type: object
                            properties:
                              block_id_flag:
                                title: BlockIdFlag indicates which BlcokID the signature
                                  is for
                                type: string
                                default: BLOCK_ID_FLAG_UNKNOWN
                                enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              validator_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              timestamp:
                                type: string
                                format: date-time
                              signature:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: CommitSig is a part of the Vote included
                              in a Commit.
                      description: Commit contains the evidence that a block was committed
                        by a set of validators.
                validator_set:
                  type: object
                  properties:
                    validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          pub_key:
                            title: PublicKey defines the keys available for use with
                              Tendermint Validators
                            type: object
                            properties:
                              ed25519:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              secp256k1:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    proposer:
                      type: object
                      properties:
                        address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Tendermint Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            secp256k1:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                    total_voting_power:
                      type: string
                      format: int64
            common_height:
              type: string
              format: int64
            byzantine_validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Tendermint
                      Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      secp256k1:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            total_voting_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: LightClientAttackEvidence contains evidence of a set of validators
            attempting to mislead a light client.
    tendermint.types.EvidenceList:
      type: object
      properties:
        evidence:
          type: array
          items:
            type: object
            properties:
              duplicate_vote_evidence:
                type: object
                properties:
                  vote_a:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  vote_b:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |-
                          SignedMsgType is a type of signed message in the consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        title: BlockID
                        type: object
                        properties:
                          hash:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          part_set_header:
                            title: PartsetHeader
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: |-
                      Vote represents a prevote, precommit, or commit vote from validators for
                      consensus.
                  total_voting_power:
                    type: string
                    format: int64
                  validator_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: DuplicateVoteEvidence contains evidence of a validator
                  signed two conflicting votes.
              light_client_attack_evidence:
                type: object
                properties:
                  conflicting_block:
                    type: object
                    properties:
                      signed_header:
                        type: object
                        properties:
                          header:
                            type: object
                            properties:
                              version:
                                title: basic block info
                                type: object
                                properties:
                                  block:
                                    type: string
                                    format: uint64
                                  app:
                                    type: string
                                    format: uint64
                                description: |-
                                  Consensus captures the consensus rules for processing a block in the blockchain,
                                  including all blockchain data structures and the rules of the application's
                                  state transition machine.
                              chain_id:
                                type: string
                              height:
                                type: string
                                format: int64
                              time:
                                type: string
                                format: date-time
                              last_block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              last_commit_hash:
                                title: hashes of block data
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              data_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              validators_hash:
                                title: hashes from the app output from the prev block
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              next_validators_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              consensus_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              app_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              last_results_hash:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              evidence_hash:
                                title: consensus info
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              proposer_address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                            description: Header defines the structure of a Tendermint
                              block header.
                          commit:
                            type: object
                            properties:
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                title: BlockID
                                type: object
                                properties:
                                  hash:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  part_set_header:
                                    title: PartsetHeader
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                        type: string
                                        format: byte
                              signatures:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    block_id_flag:
                                      title: BlockIdFlag indicates which BlcokID the
                                        signature is for
                                      type: string
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                    validator_address:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    timestamp:
                                      type: string
                                      format: date-time
                                    signature:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                  description: CommitSig is a part of the Vote included
                                    in a Commit.
                            description: Commit contains the evidence that a block
                              was committed by a set of validators.
                      validator_set:
                        type: object
                        properties:
                          validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                  type: string
                                  format: byte
                                pub_key:
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                  properties:
                                    ed25519:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                    secp256k1:
                                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                      type: string
                                      format: byte
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          proposer:
                            type: object
                            properties:
                              address:
                                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                type: string
                                format: byte
                              pub_key:
                                title: PublicKey defines the keys available for use
                                  with Tendermint Validators
                                type: object
                                properties:
                                  ed25519:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                                  secp256k1:
                                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                                    type: string
                                    format: byte
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                          total_voting_power:
                            type: string
                            format: int64
                  common_height:
                    type: string
                    format: int64
                  byzantine_validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        pub_key:
                          title: PublicKey defines the keys available for use with
                            Tendermint Validators
                          type: object
                          properties:
                            ed25519:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                            secp256k1:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                  total_voting_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: LightClientAttackEvidence contains evidence of a set
                  of validators attempting to mislead a light client.
    tendermint.types.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: |-
            Consensus captures the consensus rules for processing a block in the blockchain,
            including all blockchain data structures and the rules of the application's
            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        last_commit_hash:
          title: hashes of block data
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        data_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        validators_hash:
          title: hashes from the app output from the prev block
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        next_validators_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        consensus_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        app_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        last_results_hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        evidence_hash:
          title: consensus info
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proposer_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: Header defines the structure of a Tendermint block header.
    tendermint.types.LightBlock:
      type: object
      properties:
        signed_header:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a Tendermint block header.
            commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  title: BlockID
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      validator_address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed
                by a set of validators.
        validator_set:
          type: object
          properties:
            validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  pub_key:
                    title: PublicKey defines the keys available for use with Tendermint
                      Validators
                    type: object
                    properties:
                      ed25519:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      secp256k1:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            proposer:
              type: object
              properties:
                address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                pub_key:
                  title: PublicKey defines the keys available for use with Tendermint
                    Validators
                  type: object
                  properties:
                    ed25519:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    secp256k1:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
            total_voting_power:
              type: string
              format: int64
    tendermint.types.LightClientAttackEvidence:
      type: object
      properties:
        conflicting_block:
          type: object
          properties:
            signed_header:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      title: basic block info
                      type: object
                      properties:
                        block:
                          type: string
                          format: uint64
                        app:
                          type: string
                          format: uint64
                      description: |-
                        Consensus captures the consensus rules for processing a block in the blockchain,
                        including all blockchain data structures and the rules of the application's
                        state transition machine.
                    chain_id:
                      type: string
                    height:
                      type: string
                      format: int64
                    time:
                      type: string
                      format: date-time
                    last_block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                    last_commit_hash:
                      title: hashes of block data
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    data_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    validators_hash:
                      title: hashes from the app output from the prev block
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    next_validators_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    consensus_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    app_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    last_results_hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    evidence_hash:
                      title: consensus info
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    proposer_address:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                  description: Header defines the structure of a Tendermint block
                    header.
                commit:
                  type: object
                  properties:
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      title: BlockID
                      type: object
                      properties:
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        part_set_header:
                          title: PartsetHeader
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                              type: string
                              format: byte
                    signatures:
                      type: array
                      items:
                        type: object
                        properties:
                          block_id_flag:
                            title: BlockIdFlag indicates which BlcokID the signature
                              is for
                            type: string
                            default: BLOCK_ID_FLAG_UNKNOWN
                            enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                          validator_address:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          timestamp:
                            type: string
                            format: date-time
                          signature:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                        description: CommitSig is a part of the Vote included in a
                          Commit.
                  description: Commit contains the evidence that a block was committed
                    by a set of validators.
            validator_set:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                      pub_key:
                        title: PublicKey defines the keys available for use with Tendermint
                          Validators
                        type: object
                        properties:
                          ed25519:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          secp256k1:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                proposer:
                  type: object
                  properties:
                    address:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    pub_key:
                      title: PublicKey defines the keys available for use with Tendermint
                        Validators
                      type: object
                      properties:
                        ed25519:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        secp256k1:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                total_voting_power:
                  type: string
                  format: int64
        common_height:
          type: string
          format: int64
        byzantine_validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Tendermint
                  Validators
                type: object
                properties:
                  ed25519:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  secp256k1:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        total_voting_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: LightClientAttackEvidence contains evidence of a set of validators
        attempting to mislead a light client.
    tendermint.types.PartSetHeader:
      title: PartsetHeader
      type: object
      properties:
        total:
          type: integer
          format: int64
        hash:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    tendermint.types.SignedHeader:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a Tendermint block header.
        commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              title: BlockID
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  validator_address:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by
            a set of validators.
    tendermint.types.SignedMsgType:
      type: string
      description: |-
        SignedMsgType is a type of signed message in the consensus.

         - SIGNED_MSG_TYPE_PREVOTE: Votes
         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
      default: SIGNED_MSG_TYPE_UNKNOWN
      enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
    tendermint.types.Validator:
      type: object
      properties:
        address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        pub_key:
          title: PublicKey defines the keys available for use with Tendermint Validators
          type: object
          properties:
            ed25519:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            secp256k1:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
    tendermint.types.ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              pub_key:
                title: PublicKey defines the keys available for use with Tendermint
                  Validators
                type: object
                properties:
                  ed25519:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
                  secp256k1:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        proposer:
          type: object
          properties:
            address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            pub_key:
              title: PublicKey defines the keys available for use with Tendermint
                Validators
              type: object
              properties:
                ed25519:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                secp256k1:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
        total_voting_power:
          type: string
          format: int64
    tendermint.types.Vote:
      type: object
      properties:
        type:
          type: string
          description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
          default: SIGNED_MSG_TYPE_UNKNOWN
          enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          title: BlockID
          type: object
          properties:
            hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            part_set_header:
              title: PartsetHeader
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        timestamp:
          type: string
          format: date-time
        validator_address:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        validator_index:
          type: integer
          format: int32
        signature:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        Vote represents a prevote, precommit, or commit vote from validators for
        consensus.
    tendermint.version.Consensus:
      type: object
      properties:
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
      description: |-
        Consensus captures the consensus rules for processing a block in the blockchain,
        including all blockchain data structures and the rules of the application's
        state transition machine.
    cosmos.base.v1beta1.DecCoin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        DecCoin defines a token with a denomination and a decimal amount.

        NOTE: The amount field is an Dec which implements the custom method
        signatures required by gogoproto.
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          type: string
        reward:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        DelegationDelegatorReward represents the properties
        of a delegator's delegation reward.
    cosmos.distribution.v1beta1.Params:
      type: object
      properties:
        community_tax:
          type: string
        base_proposer_reward:
          type: string
        bonus_proposer_reward:
          type: string
        withdraw_addr_enabled:
          type: boolean
      description: Params defines the set of params for the distribution module.
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      type: object
      properties:
        pool:
          type: array
          description: pool defines community pool's coins.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryCommunityPoolResponse is the response type for the Query/CommunityPool
        RPC method.
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines the rewards accrued by a delegation.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationRewardsResponse is the response type for the
        Query/DelegationRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          description: rewards defines all the rewards accrued by a delegator.
          items:
            type: object
            properties:
              validator_address:
                type: string
              reward:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    DecCoin defines a token with a denomination and a decimal amount.

                    NOTE: The amount field is an Dec which implements the custom method
                    signatures required by gogoproto.
            description: |-
              DelegationDelegatorReward represents the properties
              of a delegator's delegation reward.
        total:
          type: array
          description: total defines the sum of all the rewards.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryDelegationTotalRewardsResponse is the response type for the
        Query/DelegationTotalRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the validators a delegator is delegating
            for.
          items:
            type: string
      description: |-
        QueryDelegatorValidatorsResponse is the response type for the
        Query/DelegatorValidators RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      type: object
      properties:
        withdraw_address:
          type: string
          description: withdraw_address defines the delegator address to query for.
      description: |-
        QueryDelegatorWithdrawAddressResponse is the response type for the
        Query/DelegatorWithdrawAddress RPC method.
    cosmos.distribution.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            community_tax:
              type: string
            base_proposer_reward:
              type: string
            bonus_proposer_reward:
              type: string
            withdraw_addr_enabled:
              type: boolean
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      title: |-
        QueryValidatorCommissionResponse is the response type for the
        Query/ValidatorCommission RPC method
      type: object
      properties:
        commission:
          type: object
          properties:
            commission:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: commission defines the commision the validator received.
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      type: object
      properties:
        rewards:
          type: object
          properties:
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  DecCoin defines a token with a denomination and a decimal amount.

                  NOTE: The amount field is an Dec which implements the custom method
                  signatures required by gogoproto.
          description: |-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
            for a validator inexpensive to track, allows simple sanity checks.
      description: |-
        QueryValidatorOutstandingRewardsResponse is the response type for the
        Query/ValidatorOutstandingRewards RPC method.
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      type: object
      properties:
        slashes:
          type: array
          description: slashes defines the slashes the validator received.
          items:
            type: object
            properties:
              validator_period:
                type: string
                format: uint64
              fraction:
                type: string
            description: |-
              ValidatorSlashEvent represents a validator slash event.
              Height is implicit within the store key.
              This is needed to calculate appropriate amount of staking tokens
              for delegations which are withdrawn after a slash has occurred.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorSlashesResponse is the response type for the
        Query/ValidatorSlashes RPC method.
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      type: object
      properties:
        commission:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorAccumulatedCommission represents accumulated commission
        for a validator kept as a running counter, can be withdrawn at any time.
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
        for a validator inexpensive to track, allows simple sanity checks.
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      type: object
      properties:
        validator_period:
          type: string
          format: uint64
        fraction:
          type: string
      description: |-
        ValidatorSlashEvent represents a validator slash event.
        Height is implicit within the store key.
        This is needed to calculate appropriate amount of staking tokens
        for delegations which are withdrawn after a slash has occurred.
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      type: object
      properties:
        evidence:
          type: array
          description: evidence returns all evidences.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
        method.
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      type: object
      properties:
        evidence:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: QueryEvidenceResponse is the response type for the Query/Evidence
        RPC method.
    cosmos.feegrant.v1beta1.Grant:
      title: Grant is stored in the KVStore to record a grant with full context
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of
            their funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
        allowance:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: allowance can be any of basic and filtered fee allowance.
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      type: object
      properties:
        allowance:
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
          properties:
            granter:
              type: string
              description: granter is the address of the user granting an allowance
                of their funds.
            grantee:
              type: string
              description: grantee is the address of the user being granted an allowance
                of another user's funds.
            allowance:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: allowance can be any of basic and filtered fee allowance.
          description: allowance is a allowance granted for grantee by granter.
      description: QueryAllowanceResponse is the response type for the Query/Allowance
        RPC method.
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      type: object
      properties:
        allowances:
          type: array
          description: allowances are allowance's granted for grantee by granter.
          items:
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance
                  of their funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: allowance can be any of basic and filtered fee allowance.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: QueryAllowancesResponse is the response type for the Query/Allowances
        RPC method.
    cosmos.gov.v1beta1.Deposit:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        depositor:
          type: string
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
    cosmos.gov.v1beta1.DepositParams:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
             months.
      description: DepositParams defines the params for deposits on governance proposals.
    cosmos.gov.v1beta1.Proposal:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        content:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        status:
          type: string
          description: |-
            ProposalStatus enumerates the valid statuses of a proposal.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        final_tally_result:
          type: object
          properties:
            "yes":
              type: string
            abstain:
              type: string
            "no":
              type: string
            no_with_veto:
              type: string
          description: TallyResult defines a standard tally for a governance proposal.
        submit_time:
          type: string
          format: date-time
        deposit_end_time:
          type: string
          format: date-time
        total_deposit:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        voting_start_time:
          type: string
          format: date-time
        voting_end_time:
          type: string
          format: date-time
      description: Proposal defines the core field members of a governance proposal.
    cosmos.gov.v1beta1.ProposalStatus:
      type: string
      description: |-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
      default: PROPOSAL_STATUS_UNSPECIFIED
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    cosmos.gov.v1beta1.QueryDepositResponse:
      type: object
      properties:
        deposit:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            depositor:
              type: string
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
          description: |-
            Deposit defines an amount deposited by an account address to an active
            proposal.
      description: QueryDepositResponse is the response type for the Query/Deposit
        RPC method.
    cosmos.gov.v1beta1.QueryDepositsResponse:
      type: object
      properties:
        deposits:
          type: array
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              depositor:
                type: string
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: |-
              Deposit defines an amount deposited by an account address to an active
              proposal.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
    cosmos.gov.v1beta1.QueryParamsResponse:
      type: object
      properties:
        voting_params:
          type: object
          properties:
            voting_period:
              type: string
              description: Length of the voting period.
          description: voting_params defines the parameters related to voting.
        deposit_params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                 months.
          description: deposit_params defines the parameters related to deposit.
        tally_params:
          type: object
          properties:
            quorum:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                 considered valid.
              format: byte
            threshold:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: 'Minimum proportion of Yes votes for proposal to pass.
                Default value: 0.5.'
              format: byte
            veto_threshold:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                 vetoed. Default value: 1/3.
              format: byte
          description: tally_params defines the parameters related to tally.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.gov.v1beta1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            content:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            status:
              type: string
              description: |-
                ProposalStatus enumerates the valid statuses of a proposal.

                 - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                 - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                period.
                 - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                period.
                 - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                passed.
                 - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                been rejected.
                 - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                failed.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            final_tally_result:
              type: object
              properties:
                "yes":
                  type: string
                abstain:
                  type: string
                "no":
                  type: string
                no_with_veto:
                  type: string
              description: TallyResult defines a standard tally for a governance proposal.
            submit_time:
              type: string
              format: date-time
            deposit_end_time:
              type: string
              format: date-time
            total_deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            voting_start_time:
              type: string
              format: date-time
            voting_end_time:
              type: string
              format: date-time
          description: Proposal defines the core field members of a governance proposal.
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
    cosmos.gov.v1beta1.QueryProposalsResponse:
      type: object
      properties:
        proposals:
          type: array
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              content:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              status:
                type: string
                description: |-
                  ProposalStatus enumerates the valid statuses of a proposal.

                   - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                   - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                  period.
                   - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                  period.
                   - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                  passed.
                   - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                  been rejected.
                   - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                  failed.
                default: PROPOSAL_STATUS_UNSPECIFIED
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              final_tally_result:
                type: object
                properties:
                  "yes":
                    type: string
                  abstain:
                    type: string
                  "no":
                    type: string
                  no_with_veto:
                    type: string
                description: TallyResult defines a standard tally for a governance
                  proposal.
              submit_time:
                type: string
                format: date-time
              deposit_end_time:
                type: string
                format: date-time
              total_deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
              voting_start_time:
                type: string
                format: date-time
              voting_end_time:
                type: string
                format: date-time
            description: Proposal defines the core field members of a governance proposal.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
    cosmos.gov.v1beta1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            "yes":
              type: string
            abstain:
              type: string
            "no":
              type: string
            no_with_veto:
              type: string
          description: TallyResult defines a standard tally for a governance proposal.
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
    cosmos.gov.v1beta1.QueryVoteResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            voter:
              type: string
            option:
              type: string
              description: |-
                Deprecated: Prefer to use `options` instead. This field is set in queries
                if and only if `len(options) == 1` and that option has weight 1. In all
                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
              default: VOTE_OPTION_UNSPECIFIED
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
            options:
              title: 'Since: cosmos-sdk 0.43'
              type: array
              items:
                type: object
                properties:
                  option:
                    type: string
                    description: |-
                      VoteOption enumerates the valid vote options for a given governance proposal.

                       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                    default: VOTE_OPTION_UNSPECIFIED
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                  weight:
                    type: string
                description: |-
                  WeightedVoteOption defines a unit of vote for vote split.

                  Since: cosmos-sdk 0.43
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    cosmos.gov.v1beta1.QueryVotesResponse:
      type: object
      properties:
        votes:
          type: array
          description: votes defined the queried votes.
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              voter:
                type: string
              option:
                type: string
                description: |-
                  Deprecated: Prefer to use `options` instead. This field is set in queries
                  if and only if `len(options) == 1` and that option has weight 1. In all
                  other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              options:
                title: 'Since: cosmos-sdk 0.43'
                type: array
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      description: |-
                        VoteOption enumerates the valid vote options for a given governance proposal.

                         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                      default: VOTE_OPTION_UNSPECIFIED
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    weight:
                      type: string
                  description: |-
                    WeightedVoteOption defines a unit of vote for vote split.

                    Since: cosmos-sdk 0.43
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: QueryVotesResponse is the response type for the Query/Votes RPC
        method.
    cosmos.gov.v1beta1.TallyParams:
      type: object
      properties:
        quorum:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
          format: byte
        threshold:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: 'Minimum proportion of Yes votes for proposal to pass. Default
            value: 0.5.'
          format: byte
        veto_threshold:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
          format: byte
      description: TallyParams defines the params for tallying votes on governance
        proposals.
    cosmos.gov.v1beta1.TallyResult:
      type: object
      properties:
        "yes":
          type: string
        abstain:
          type: string
        "no":
          type: string
        no_with_veto:
          type: string
      description: TallyResult defines a standard tally for a governance proposal.
    cosmos.gov.v1beta1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        voter:
          type: string
        option:
          type: string
          description: |-
            Deprecated: Prefer to use `options` instead. This field is set in queries
            if and only if `len(options) == 1` and that option has weight 1. In all
            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        options:
          title: 'Since: cosmos-sdk 0.43'
          type: array
          items:
            type: object
            properties:
              option:
                type: string
                description: |-
                  VoteOption enumerates the valid vote options for a given governance proposal.

                   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                   - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                   - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                   - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                   - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
            description: |-
              WeightedVoteOption defines a unit of vote for vote split.

              Since: cosmos-sdk 0.43
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
    cosmos.gov.v1beta1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1beta1.VotingParams:
      type: object
      properties:
        voting_period:
          type: string
          description: Length of the voting period.
      description: VotingParams defines the params for voting on governance proposals.
    cosmos.gov.v1beta1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: |-
            VoteOption enumerates the valid vote options for a given governance proposal.

             - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
             - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
             - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
             - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
             - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
      description: |-
        WeightedVoteOption defines a unit of vote for vote split.

        Since: cosmos-sdk 0.43
    cosmos.mint.v1beta1.Params:
      type: object
      properties:
        mint_denom:
          title: type of coin to mint
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        blocks_per_year:
          title: expected blocks per year
          type: string
          format: uint64
      description: Params holds parameters for the mint module.
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      type: object
      properties:
        annual_provisions:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: annual_provisions is the current minting annual provisions
            value.
          format: byte
      description: |-
        QueryAnnualProvisionsResponse is the response type for the
        Query/AnnualProvisions RPC method.
    cosmos.mint.v1beta1.QueryInflationResponse:
      type: object
      properties:
        inflation:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: inflation is the current minting inflation value.
          format: byte
      description: |-
        QueryInflationResponse is the response type for the Query/Inflation RPC
        method.
    cosmos.mint.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            mint_denom:
              title: type of coin to mint
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            blocks_per_year:
              title: expected blocks per year
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    cosmos.params.v1beta1.ParamChange:
      type: object
      properties:
        subspace:
          type: string
        key:
          type: string
        value:
          type: string
      description: |-
        ParamChange defines an individual parameter change, for use in
        ParameterChangeProposal.
    cosmos.params.v1beta1.QueryParamsResponse:
      type: object
      properties:
        param:
          type: object
          properties:
            subspace:
              type: string
            key:
              type: string
            value:
              type: string
          description: param defines the queried parameter.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.slashing.v1beta1.Params:
      type: object
      properties:
        signed_blocks_window:
          type: string
          format: int64
        min_signed_per_window:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        downtime_jail_duration:
          type: string
        slash_fraction_double_sign:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        slash_fraction_downtime:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QueryParamsResponse:
      title: QueryParamsResponse is the response type for the Query/Params RPC method
      type: object
      properties:
        params:
          type: object
          properties:
            signed_blocks_window:
              type: string
              format: int64
            min_signed_per_window:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            downtime_jail_duration:
              type: string
            slash_fraction_double_sign:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            slash_fraction_downtime:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      title: |-
        QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
        method
      type: object
      properties:
        val_signing_info:
          title: val_signing_info is the signing info of requested val cons address
          type: object
          properties:
            address:
              type: string
            start_height:
              title: Height at which validator was first a candidate OR was unjailed
              type: string
              format: int64
            index_offset:
              type: string
              description: |-
                Index which is incremented each time the validator was a bonded
                in a block and may have signed a precommit or not. This in conjunction with the
                `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
              format: int64
            jailed_until:
              type: string
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
            tombstoned:
              type: boolean
              description: |-
                Whether or not a validator has been tombstoned (killed out of validator set). It is set
                once the validator commits an equivocation or for any other configured misbehiavor.
            missed_blocks_counter:
              type: string
              description: |-
                A counter kept to avoid unnecessary array reads.
                Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
              format: int64
          description: |-
            ValidatorSigningInfo defines a validator's signing info for monitoring their
            liveness activity.
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      title: |-
        QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
        method
      type: object
      properties:
        info:
          title: info is the signing info of all validators
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              start_height:
                title: Height at which validator was first a candidate OR was unjailed
                type: string
                format: int64
              index_offset:
                type: string
                description: |-
                  Index which is incremented each time the validator was a bonded
                  in a block and may have signed a precommit or not. This in conjunction with the
                  `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                format: int64
              jailed_until:
                type: string
                description: Timestamp until which the validator is jailed due to
                  liveness downtime.
                format: date-time
              tombstoned:
                type: boolean
                description: |-
                  Whether or not a validator has been tombstoned (killed out of validator set). It is set
                  once the validator commits an equivocation or for any other configured misbehiavor.
              missed_blocks_counter:
                type: string
                description: |-
                  A counter kept to avoid unnecessary array reads.
                  Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                format: int64
            description: |-
              ValidatorSigningInfo defines a validator's signing info for monitoring their
              liveness activity.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      type: object
      properties:
        address:
          type: string
        start_height:
          title: Height at which validator was first a candidate OR was unjailed
          type: string
          format: int64
        index_offset:
          type: string
          description: |-
            Index which is incremented each time the validator was a bonded
            in a block and may have signed a precommit or not. This in conjunction with the
            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
          format: int64
        jailed_until:
          type: string
          description: Timestamp until which the validator is jailed due to liveness
            downtime.
          format: date-time
        tombstoned:
          type: boolean
          description: |-
            Whether or not a validator has been tombstoned (killed out of validator set). It is set
            once the validator commits an equivocation or for any other configured misbehiavor.
        missed_blocks_counter:
          type: string
          description: |-
            A counter kept to avoid unnecessary array reads.
            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
          format: int64
      description: |-
        ValidatorSigningInfo defines a validator's signing info for monitoring their
        liveness activity.
    cosmos.staking.v1beta1.BondStatus:
      type: string
      description: |-
        BondStatus is the status of a validator.

         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
      default: BOND_STATUS_UNSPECIFIED
      enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    cosmos.staking.v1beta1.Commission:
      type: object
      properties:
        commission_rates:
          type: object
          properties:
            rate:
              type: string
              description: rate is the commission rate charged to delegators, as a
                fraction.
            max_rate:
              type: string
              description: max_rate defines the maximum commission rate which validator
                can ever charge, as a fraction.
            max_change_rate:
              type: string
              description: max_change_rate defines the maximum daily increase of the
                validator commission, as a fraction.
          description: commission_rates defines the initial commission rates to be
            used for creating a validator.
        update_time:
          type: string
          description: update_time is the last time the commission rate was changed.
          format: date-time
      description: Commission defines commission parameters for a given validator.
    cosmos.staking.v1beta1.CommissionRates:
      type: object
      properties:
        rate:
          type: string
          description: rate is the commission rate charged to delegators, as a fraction.
        max_rate:
          type: string
          description: max_rate defines the maximum commission rate which validator
            can ever charge, as a fraction.
        max_change_rate:
          type: string
          description: max_change_rate defines the maximum daily increase of the validator
            commission, as a fraction.
      description: |-
        CommissionRates defines the initial commission rates to be used for creating
        a validator.
    cosmos.staking.v1beta1.Delegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        shares:
          type: string
          description: shares define the delegation shares received.
      description: |-
        Delegation represents the bond with tokens held by an account. It is
        owned by one delegator, and is associated with the voting power of one
        validator.
    cosmos.staking.v1beta1.DelegationResponse:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            shares:
              type: string
              description: shares define the delegation shares received.
          description: |-
            Delegation represents the bond with tokens held by an account. It is
            owned by one delegator, and is associated with the voting power of one
            validator.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        DelegationResponse is equivalent to Delegation except that it contains a
        balance in addition to shares which is more suitable for client responses.
    cosmos.staking.v1beta1.Description:
      type: object
      properties:
        moniker:
          type: string
          description: moniker defines a human-readable name for the validator.
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a validator description.
    cosmos.staking.v1beta1.HistoricalInfo:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: |-
                Consensus captures the consensus rules for processing a block in the blockchain,
                including all blockchain data structures and the rules of the application's
                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              title: prev block info
              type: object
              properties:
                hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                part_set_header:
                  title: PartsetHeader
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
            last_commit_hash:
              title: hashes of block data
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            data_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            validators_hash:
              title: hashes from the app output from the prev block
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            next_validators_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            consensus_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            app_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            last_results_hash:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            evidence_hash:
              title: consensus info
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            proposer_address:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: Header defines the structure of a Tendermint block header.
        valset:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
      description: |-
        HistoricalInfo contains header and validator information for a given block.
        It is stored as part of staking module's state, which persists the `n` most
        recent HistoricalInfo
        (`n` is set by the staking module's `historical_entries` parameter).
    cosmos.staking.v1beta1.Params:
      type: object
      properties:
        unbonding_time:
          type: string
          description: unbonding_time is the time duration of unbonding.
        max_validators:
          type: integer
          description: max_validators is the maximum number of validators.
          format: int64
        max_entries:
          type: integer
          description: max_entries is the max entries for either unbonding delegation
            or redelegation (per pair/trio).
          format: int64
        historical_entries:
          type: integer
          description: historical_entries is the number of historical entries to persist.
          format: int64
        bond_denom:
          type: string
          description: bond_denom defines the bondable coin denomination.
      description: Params defines the parameters for the staking module.
    cosmos.staking.v1beta1.Pool:
      type: object
      properties:
        not_bonded_tokens:
          type: string
        bonded_tokens:
          type: string
      description: |-
        Pool is used for tracking bonded and not-bonded token supply of the bond
        denomination.
    cosmos.staking.v1beta1.QueryDelegationResponse:
      type: object
      properties:
        delegation_response:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: delegator_address is the bech32-encoded address of
                    the delegator.
                validator_address:
                  type: string
                  description: validator_address is the bech32-encoded address of
                    the validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: |-
                Delegation represents the bond with tokens held by an account. It is
                owned by one delegator, and is associated with the voting power of one
                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
          description: |-
            DelegationResponse is equivalent to Delegation except that it contains a
            balance in addition to shares which is more suitable for client responses.
      description: QueryDelegationResponse is response type for the Query/Delegation
        RPC method.
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      type: object
      properties:
        delegation_responses:
          type: array
          description: delegation_responses defines all the delegations' info of a
            delegator.
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorDelegationsResponse is response type for the
        Query/DelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryUnbondingDelegatorDelegationsResponse is response type for the
        Query/UnbondingDelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
            unbonding_time:
              type: string
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: min_self_delegation is the validator's self declared minimum
                self delegation.
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
      description: |-
        QueryDelegatorValidatorResponse response type for the
        Query/DelegatorValidator RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          description: validators defines the the validators' info of a delegator.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryDelegatorValidatorsResponse is response type for the
        Query/DelegatorValidators RPC method.
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      type: object
      properties:
        hist:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: |-
                    Consensus captures the consensus rules for processing a block in the blockchain,
                    including all blockchain data structures and the rules of the application's
                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  title: prev block info
                  type: object
                  properties:
                    hash:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    part_set_header:
                      title: PartsetHeader
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                last_commit_hash:
                  title: hashes of block data
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                data_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                validators_hash:
                  title: hashes from the app output from the prev block
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                next_validators_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                consensus_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                app_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                last_results_hash:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                evidence_hash:
                  title: consensus info
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
                proposer_address:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: Header defines the structure of a Tendermint block header.
            valset:
              type: array
              items:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: |-
                          A URL/resource name that uniquely identifies the type of the serialized
                          protocol buffer message. This string must contain at least
                          one "/" character. The last segment of the URL's path must represent
                          the fully qualified name of the type (as in
                          `path/google.protobuf.Duration`). The name should be in a canonical form
                          (e.g., leading "." is not accepted).

                          In practice, teams usually precompile into the binary all types that they
                          expect it to use in the context of Any. However, for URLs which use the
                          scheme `http`, `https`, or no scheme, one can optionally set up a type
                          server that maps type URLs to message definitions as follows:

                          * If no scheme is provided, `https` is assumed.
                          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in the official
                          protobuf release, and it is not used for type URLs beginning with
                          type.googleapis.com.

                          Schemes other than `http`, `https` (or the empty scheme) might be
                          used with implementation specific semantics.
                      value:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                    description: |-
                      `Any` contains an arbitrary serialized protocol buffer message along with a
                      URL that describes the type of the serialized message.

                      Protobuf library provides support to pack/unpack Any values in the form
                      of utility functions or additional generated methods of the Any type.

                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by default use
                      'type.googleapis.com/full.type.name' as the type URL and the unpack
                      methods only use the fully qualified type name after the last '/'
                      in the type URL, for example "foo.bar.com/x/y.z" will yield type
                      name "y.z".


                      JSON
                      ====
                      The JSON representation of an `Any` value uses the regular
                      representation of the deserialized, embedded message, with an
                      additional field `@type` which contains the type URL. Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a custom JSON
                      representation, that representation will be embedded adding a field
                      `value` which holds the custom JSON in addition to the `@type`
                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                    description: jailed defined whether the validator has been jailed
                      from bonded status or not.
                  status:
                    type: string
                    description: status is the validator status (bonded/unbonding/unbonded).
                    default: BOND_STATUS_UNSPECIFIED
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                  tokens:
                    type: string
                    description: tokens define the delegated tokens (incl. self-delegation).
                  delegator_shares:
                    type: string
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: moniker defines a human-readable name for the
                          validator.
                      identity:
                        type: string
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: security_contact defines an optional email for
                          security contact.
                      details:
                        type: string
                        description: details define other optional details.
                    description: description defines the description terms for the
                      validator.
                  unbonding_height:
                    type: string
                    description: unbonding_height defines, if unbonding, the height
                      at which this validator has begun unbonding.
                    format: int64
                  unbonding_time:
                    type: string
                    description: unbonding_time defines, if unbonding, the min time
                      for the validator to complete unbonding.
                    format: date-time
                  commission:
                    type: object
                    properties:
                      commission_rates:
                        type: object
                        properties:
                          rate:
                            type: string
                            description: rate is the commission rate charged to delegators,
                              as a fraction.
                          max_rate:
                            type: string
                            description: max_rate defines the maximum commission rate
                              which validator can ever charge, as a fraction.
                          max_change_rate:
                            type: string
                            description: max_change_rate defines the maximum daily
                              increase of the validator commission, as a fraction.
                        description: commission_rates defines the initial commission
                          rates to be used for creating a validator.
                      update_time:
                        type: string
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                    description: commission defines the commission parameters.
                  min_self_delegation:
                    type: string
                    description: min_self_delegation is the validator's self declared
                      minimum self delegation.
                description: |-
                  Validator defines a validator, together with the total amount of the
                  Validator's bond shares and their exchange rate to coins. Slashing results in
                  a decrease in the exchange rate, allowing correct calculation of future
                  undelegations without iterating over delegators. When coins are delegated to
                  this validator, the validator is credited with a delegation whose number of
                  bond shares is based on the amount of coins delegated divided by the current
                  exchange rate. Voting power can be calculated as total bonded shares
                  multiplied by exchange rate.
          description: hist defines the historical info at the given height.
      description: |-
        QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
        method.
    cosmos.staking.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            unbonding_time:
              type: string
              description: unbonding_time is the time duration of unbonding.
            max_validators:
              type: integer
              description: max_validators is the maximum number of validators.
              format: int64
            max_entries:
              type: integer
              description: max_entries is the max entries for either unbonding delegation
                or redelegation (per pair/trio).
              format: int64
            historical_entries:
              type: integer
              description: historical_entries is the number of historical entries
                to persist.
              format: int64
            bond_denom:
              type: string
              description: bond_denom defines the bondable coin denomination.
          description: params holds all the parameters of this module.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.staking.v1beta1.QueryPoolResponse:
      type: object
      properties:
        pool:
          type: object
          properties:
            not_bonded_tokens:
              type: string
            bonded_tokens:
              type: string
          description: pool defines the pool info.
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      type: object
      properties:
        redelegation_responses:
          type: array
          items:
            type: object
            properties:
              redelegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_src_address:
                    type: string
                    description: validator_src_address is the validator redelegation
                      source operator address.
                  validator_dst_address:
                    type: string
                    description: validator_dst_address is the validator redelegation
                      destination operator address.
                  entries:
                    type: array
                    description: entries are the redelegation entries.
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                description: |-
                  Redelegation contains the list of a particular delegator's redelegating bonds
                  from a particular source validator to a particular destination validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    redelegation_entry:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                        completion_time:
                          type: string
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance
                            when redelegation started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                    balance:
                      type: string
                  description: |-
                    RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
                    contains a balance in addition to shares which is more suitable for client
                    responses.
            description: |-
              RedelegationResponse is equivalent to a Redelegation except that its entries
              contain a balance in addition to shares which is more suitable for client
              responses.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryRedelegationsResponse is response type for the Query/Redelegations RPC
        method.
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      type: object
      properties:
        unbond:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the
                validator.
            entries:
              type: array
              description: entries are the unbonding delegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the tokens initially scheduled
                      to receive at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
          description: |-
            UnbondingDelegation stores all of a single delegator's unbonding bonds
            for a single validator in an time-ordered list.
      description: |-
        QueryDelegationResponse is response type for the Query/UnbondingDelegation
        RPC method.
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      title: |-
        QueryValidatorDelegationsResponse is response type for the
        Query/ValidatorDelegations RPC method
      type: object
      properties:
        delegation_responses:
          type: array
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of
                      the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: |-
                  Delegation represents the bond with tokens held by an account. It is
                  owned by one delegator, and is associated with the voting power of one
                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            description: |-
              DelegationResponse is equivalent to Delegation except that it contains a
              balance in addition to shares which is more suitable for client responses.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.QueryValidatorResponse:
      title: QueryValidatorResponse is response type for the Query/Validator RPC method
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
            status:
              type: string
              description: status is the validator status (bonded/unbonding/unbonded).
              default: BOND_STATUS_UNSPECIFIED
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security
                    contact.
                details:
                  type: string
                  description: details define other optional details.
              description: description defines the description terms for the validator.
            unbonding_height:
              type: string
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
            unbonding_time:
              type: string
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                update_time:
                  type: string
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
              description: commission defines the commission parameters.
            min_self_delegation:
              type: string
              description: min_self_delegation is the validator's self declared minimum
                self delegation.
          description: |-
            Validator defines a validator, together with the total amount of the
            Validator's bond shares and their exchange rate to coins. Slashing results in
            a decrease in the exchange rate, allowing correct calculation of future
            undelegations without iterating over delegators. When coins are delegated to
            this validator, the validator is credited with a delegation whose number of
            bond shares is based on the amount of coins delegated divided by the current
            exchange rate. Voting power can be calculated as total bonded shares
            multiplied by exchange rate.
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the
                  delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the
                  validator.
              entries:
                type: array
                description: entries are the unbonding delegation entries.
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                    completion_time:
                      type: string
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
            description: |-
              UnbondingDelegation stores all of a single delegator's unbonding bonds
              for a single validator in an time-ordered list.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryValidatorUnbondingDelegationsResponse is response type for the
        Query/ValidatorUnbondingDelegations RPC method.
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      title: QueryValidatorsResponse is response type for the Query/Validators RPC
        method
      type: object
      properties:
        validators:
          type: array
          description: validators contains all the queried validators.
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
              status:
                type: string
                description: status is the validator status (bonded/unbonding/unbonded).
                default: BOND_STATUS_UNSPECIFIED
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security
                      contact.
                  details:
                    type: string
                    description: details define other optional details.
                description: description defines the description terms for the validator.
              unbonding_height:
                type: string
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
              unbonding_time:
                type: string
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
              commission:
                type: object
                properties:
                  commission_rates:
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                  update_time:
                    type: string
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                description: commission defines the commission parameters.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
            description: |-
              Validator defines a validator, together with the total amount of the
              Validator's bond shares and their exchange rate to coins. Slashing results in
              a decrease in the exchange rate, allowing correct calculation of future
              undelegations without iterating over delegators. When coins are delegated to
              this validator, the validator is credited with a delegation whose number of
              bond shares is based on the amount of coins delegated divided by the current
              exchange rate. Voting power can be calculated as total bonded shares
              multiplied by exchange rate.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
    cosmos.staking.v1beta1.Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_src_address:
          type: string
          description: validator_src_address is the validator redelegation source
            operator address.
        validator_dst_address:
          type: string
          description: validator_dst_address is the validator redelegation destination
            operator address.
        entries:
          type: array
          description: entries are the redelegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height  defines the height which the redelegation
                  took place.
                format: int64
              completion_time:
                type: string
                description: completion_time defines the unix time for redelegation
                  completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the initial balance when redelegation
                  started.
              shares_dst:
                type: string
                description: shares_dst is the amount of destination-validator shares
                  created by redelegation.
            description: RedelegationEntry defines a redelegation object with relevant
              metadata.
      description: |-
        Redelegation contains the list of a particular delegator's redelegating bonds
        from a particular source validator to a particular destination validator.
    cosmos.staking.v1beta1.RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height  defines the height which the redelegation
            took place.
          format: int64
        completion_time:
          type: string
          description: completion_time defines the unix time for redelegation completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the initial balance when redelegation
            started.
        shares_dst:
          type: string
          description: shares_dst is the amount of destination-validator shares created
            by redelegation.
      description: RedelegationEntry defines a redelegation object with relevant metadata.
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      type: object
      properties:
        redelegation_entry:
          type: object
          properties:
            creation_height:
              type: string
              description: creation_height  defines the height which the redelegation
                took place.
              format: int64
            completion_time:
              type: string
              description: completion_time defines the unix time for redelegation
                completion.
              format: date-time
            initial_balance:
              type: string
              description: initial_balance defines the initial balance when redelegation
                started.
            shares_dst:
              type: string
              description: shares_dst is the amount of destination-validator shares
                created by redelegation.
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
        balance:
          type: string
      description: |-
        RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
        contains a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.RedelegationResponse:
      type: object
      properties:
        redelegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the
                delegator.
            validator_src_address:
              type: string
              description: validator_src_address is the validator redelegation source
                operator address.
            validator_dst_address:
              type: string
              description: validator_dst_address is the validator redelegation destination
                operator address.
            entries:
              type: array
              description: entries are the redelegation entries.
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
          description: |-
            Redelegation contains the list of a particular delegator's redelegating bonds
            from a particular source validator to a particular destination validator.
        entries:
          type: array
          items:
            type: object
            properties:
              redelegation_entry:
                type: object
                properties:
                  creation_height:
                    type: string
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                  completion_time:
                    type: string
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when
                      redelegation started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
              balance:
                type: string
            description: |-
              RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
              contains a balance in addition to shares which is more suitable for client
              responses.
      description: |-
        RedelegationResponse is equivalent to a Redelegation except that its entries
        contain a balance in addition to shares which is more suitable for client
        responses.
    cosmos.staking.v1beta1.UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        entries:
          type: array
          description: entries are the unbonding delegation entries.
          items:
            type: object
            properties:
              creation_height:
                type: string
                description: creation_height is the height which the unbonding took
                  place.
                format: int64
              completion_time:
                type: string
                description: completion_time is the unix time for unbonding completion.
                format: date-time
              initial_balance:
                type: string
                description: initial_balance defines the tokens initially scheduled
                  to receive at completion.
              balance:
                type: string
                description: balance defines the tokens to receive at completion.
            description: UnbondingDelegationEntry defines an unbonding object with
              relevant metadata.
      description: |-
        UnbondingDelegation stores all of a single delegator's unbonding bonds
        for a single validator in an time-ordered list.
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          description: creation_height is the height which the unbonding took place.
          format: int64
        completion_time:
          type: string
          description: completion_time is the unix time for unbonding completion.
          format: date-time
        initial_balance:
          type: string
          description: initial_balance defines the tokens initially scheduled to receive
            at completion.
        balance:
          type: string
          description: balance defines the tokens to receive at completion.
      description: UnbondingDelegationEntry defines an unbonding object with relevant
        metadata.
    cosmos.staking.v1beta1.Validator:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the address of the validator's operator;
            bech encoded in JSON.
        consensus_pubkey:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        jailed:
          type: boolean
          description: jailed defined whether the validator has been jailed from bonded
            status or not.
        status:
          type: string
          description: status is the validator status (bonded/unbonding/unbonded).
          default: BOND_STATUS_UNSPECIFIED
          enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
        tokens:
          type: string
          description: tokens define the delegated tokens (incl. self-delegation).
        delegator_shares:
          type: string
          description: delegator_shares defines total shares issued to a validator's
            delegators.
        description:
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: description defines the description terms for the validator.
        unbonding_height:
          type: string
          description: unbonding_height defines, if unbonding, the height at which
            this validator has begun unbonding.
          format: int64
        unbonding_time:
          type: string
          description: unbonding_time defines, if unbonding, the min time for the
            validator to complete unbonding.
          format: date-time
        commission:
          type: object
          properties:
            commission_rates:
              type: object
              properties:
                rate:
                  type: string
                  description: rate is the commission rate charged to delegators,
                    as a fraction.
                max_rate:
                  type: string
                  description: max_rate defines the maximum commission rate which
                    validator can ever charge, as a fraction.
                max_change_rate:
                  type: string
                  description: max_change_rate defines the maximum daily increase
                    of the validator commission, as a fraction.
              description: commission_rates defines the initial commission rates to
                be used for creating a validator.
            update_time:
              type: string
              description: update_time is the last time the commission rate was changed.
              format: date-time
          description: commission defines the commission parameters.
        min_self_delegation:
          type: string
          description: min_self_delegation is the validator's self declared minimum
            self delegation.
      description: |-
        Validator defines a validator, together with the total amount of the
        Validator's bond shares and their exchange rate to coins. Slashing results in
        a decrease in the exchange rate, allowing correct calculation of future
        undelegations without iterating over delegators. When coins are delegated to
        this validator, the validator is credited with a delegation whose number of
        bond shares is based on the amount of coins delegated divided by the current
        exchange rate. Voting power can be calculated as total bonded shares
        multiplied by exchange rate.
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      type: object
      properties:
        msg_index:
          type: integer
          format: int64
        log:
          type: string
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during some
            execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  description: |-
                    Attribute defines an attribute wrapper where the key and value are
                    strings instead of raw bytes.
            description: |-
              StringEvent defines en Event object wrapper where all the attributes
              contain key/value pairs that are strings instead of raw bytes.
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI
        message log.
    cosmos.base.abci.v1beta1.Attribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: |-
        Attribute defines an attribute wrapper where the key and value are
        strings instead of raw bytes.
    cosmos.base.abci.v1beta1.GasInfo:
      type: object
      properties:
        gas_wanted:
          type: string
          description: GasWanted is the maximum units of work we allow this tx to
            perform.
          format: uint64
        gas_used:
          type: string
          description: GasUsed is the amount of gas actually consumed.
          format: uint64
      description: GasInfo defines tx execution gas context.
    cosmos.base.abci.v1beta1.Result:
      type: object
      properties:
        data:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            Data is any data returned from message or handler execution. It MUST be
            length prefixed in order to separate data from multiple message executions.
          format: byte
        log:
          type: string
          description: Log contains the log information from message or handler execution.
        events:
          type: array
          description: |-
            Events contains a slice of Event objects that were emitted during message
            or handler execution.
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    value:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
      description: Result is the union of ResponseFormat and ResponseCheckTx.
    cosmos.base.abci.v1beta1.StringEvent:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            description: |-
              Attribute defines an attribute wrapper where the key and value are
              strings instead of raw bytes.
      description: |-
        StringEvent defines en Event object wrapper where all the attributes
        contain key/value pairs that are strings instead of raw bytes.
    cosmos.base.abci.v1beta1.TxResponse:
      type: object
      properties:
        height:
          title: The block height
          type: string
          format: int64
        txhash:
          type: string
          description: The transaction hash.
        codespace:
          title: Namespace for the Code
          type: string
        code:
          type: integer
          description: Response code.
          format: int64
        data:
          type: string
          description: Result bytes, if any.
        raw_log:
          type: string
          description: |-
            The output of the application's logger (raw string). May be
            non-deterministic.
        logs:
          type: array
          description: The output of the application's logger (typed). May be non-deterministic.
          items:
            type: object
            properties:
              msg_index:
                type: integer
                format: int64
              log:
                type: string
              events:
                type: array
                description: |-
                  Events contains a slice of Event objects that were emitted during some
                  execution.
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        description: |-
                          Attribute defines an attribute wrapper where the key and value are
                          strings instead of raw bytes.
                  description: |-
                    StringEvent defines en Event object wrapper where all the attributes
                    contain key/value pairs that are strings instead of raw bytes.
            description: ABCIMessageLog defines a structure containing an indexed
              tx ABCI message log.
        info:
          type: string
          description: Additional information. May be non-deterministic.
        gas_wanted:
          type: string
          description: Amount of gas requested for transaction.
          format: int64
        gas_used:
          type: string
          description: Amount of gas consumed by transaction.
          format: int64
        tx:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        timestamp:
          type: string
          description: |-
            Time of the previous block. For heights > 1, it's the weighted median of
            the timestamps of the valid votes in the block.LastCommit. For height == 1,
            it's genesis time.
        events:
          type: array
          description: |-
            Events defines all the events emitted by processing a transaction. Note,
            these events include those emitted by processing all the messages and those
            emitted from the ante handler. Whereas Logs contains the events, with
            additional metadata, emitted only by processing the messages.

            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    value:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
            description: |-
              Event allows application developers to attach additional information to
              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
              Later, transactions may be queried using these events.
      description: |-
        TxResponse defines a structure containing relevant tx data and metadata. The
        tags are stringified and the log is JSON decoded.
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      type: object
      properties:
        extra_bits_stored:
          type: integer
          format: int64
        elems:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        CompactBitArray is an implementation of a space efficient bit array.
        This is used to ensure that the encoded data takes up a minimal amount of
        space after proto encoding.
        This is not thread safe, and is not intended for concurrent usage.
    cosmos.tx.signing.v1beta1.SignMode:
      type: string
      description: |-
        SignMode represents a signing mode with its own security guarantees.

         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
        rejected
         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
        verified with raw bytes from Tx
         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
        human-readable textual representation on top of the binary representation
        from SIGN_MODE_DIRECT
         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
        Amino JSON and will be removed in the future
      default: SIGN_MODE_UNSPECIFIED
      enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_LEGACY_AMINO_JSON
    cosmos.tx.v1beta1.AuthInfo:
      type: object
      properties:
        signer_infos:
          type: array
          description: |-
            signer_infos defines the signing modes for the required signers. The number
            and order of elements must match the required signers from TxBody's
            messages. The first element is the primary signer and the one which pays
            the fee.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.SignerInfo'
        fee:
          type: object
          properties:
            amount:
              title: amount is the amount of coins to be paid as a fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            gas_limit:
              title: |-
                gas_limit is the maximum gas that can be used in transaction processing
                before an out of gas error occurs
              type: string
              format: uint64
            payer:
              type: string
              description: |-
                if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
                the payer must be a tx signer (and thus have signed this field in AuthInfo).
                setting this field does *not* change the ordering of required signers for the transaction.
            granter:
              title: |-
                if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
                not support fee grants, this will fail
              type: string
          description: |-
            Fee is the fee and gas limit for the transaction. The first signer is the
            primary signer and the one which pays the fee. The fee can be calculated
            based on the cost of evaluating the body and doing signature verification
            of the signers. This can be estimated via simulation.
      description: |-
        AuthInfo describes the fee and signer modes that are used to sign a
        transaction.
    cosmos.tx.v1beta1.BroadcastMode:
      type: string
      description: |-
        BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

         - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
         - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
        the tx to be committed in a block.
         - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
        a CheckTx execution response only.
         - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
        immediately.
      default: BROADCAST_MODE_UNSPECIFIED
      enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    cosmos.tx.v1beta1.BroadcastTxRequest:
      type: object
      properties:
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
        mode:
          type: string
          description: |-
            BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
            the tx to be committed in a block.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
            a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
            immediately.
          default: BROADCAST_MODE_UNSPECIFIED
          enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
      description: |-
        BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
        RPC method.
    cosmos.tx.v1beta1.BroadcastTxResponse:
      type: object
      properties:
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante handler. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: |-
        BroadcastTxResponse is the response type for the
        Service.BroadcastTx method.
    cosmos.tx.v1beta1.Fee:
      type: object
      properties:
        amount:
          title: amount is the amount of coins to be paid as a fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        gas_limit:
          title: |-
            gas_limit is the maximum gas that can be used in transaction processing
            before an out of gas error occurs
          type: string
          format: uint64
        payer:
          type: string
          description: |-
            if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
            the payer must be a tx signer (and thus have signed this field in AuthInfo).
            setting this field does *not* change the ordering of required signers for the transaction.
        granter:
          title: |-
            if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
            to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
            not support fee grants, this will fail
          type: string
      description: |-
        Fee includes the amount of coins paid in fees and the maximum
        gas to be used by the transaction. The ratio yields an effective "gasprice",
        which must be above some miminum to be accepted into the mempool.
    cosmos.tx.v1beta1.GetTxResponse:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_response:
          type: object
          properties:
            height:
              title: The block height
              type: string
              format: int64
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              title: Namespace for the Code
              type: string
            code:
              type: integer
              description: Response code.
              format: int64
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    description: |-
                      Events contains a slice of Event objects that were emitted during some
                      execution.
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: |-
                              Attribute defines an attribute wrapper where the key and value are
                              strings instead of raw bytes.
                      description: |-
                        StringEvent defines en Event object wrapper where all the attributes
                        contain key/value pairs that are strings instead of raw bytes.
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              description: Amount of gas requested for transaction.
              format: int64
            gas_used:
              type: string
              description: Amount of gas consumed by transaction.
              format: int64
            tx:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            timestamp:
              type: string
              description: |-
                Time of the previous block. For heights > 1, it's the weighted median of
                the timestamps of the valid votes in the block.LastCommit. For height == 1,
                it's genesis time.
            events:
              type: array
              description: |-
                Events defines all the events emitted by processing a transaction. Note,
                these events include those emitted by processing all the messages and those
                emitted from the ante handler. Whereas Logs contains the events, with
                additional metadata, emitted only by processing the messages.

                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: |-
            TxResponse defines a structure containing relevant tx data and metadata. The
            tags are stringified and the log is JSON decoded.
      description: GetTxResponse is the response type for the Service.GetTx method.
    cosmos.tx.v1beta1.GetTxsEventResponse:
      type: object
      properties:
        txs:
          type: array
          description: txs is the list of queried transactions.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_responses:
          type: array
          description: tx_responses is the list of queried TxResponses.
          items:
            type: object
            properties:
              height:
                title: The block height
                type: string
                format: int64
              txhash:
                type: string
                description: The transaction hash.
              codespace:
                title: Namespace for the Code
                type: string
              code:
                type: integer
                description: Response code.
                format: int64
              data:
                type: string
                description: Result bytes, if any.
              raw_log:
                type: string
                description: |-
                  The output of the application's logger (raw string). May be
                  non-deterministic.
              logs:
                type: array
                description: The output of the application's logger (typed). May be
                  non-deterministic.
                items:
                  type: object
                  properties:
                    msg_index:
                      type: integer
                      format: int64
                    log:
                      type: string
                    events:
                      type: array
                      description: |-
                        Events contains a slice of Event objects that were emitted during some
                        execution.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              description: |-
                                Attribute defines an attribute wrapper where the key and value are
                                strings instead of raw bytes.
                        description: |-
                          StringEvent defines en Event object wrapper where all the attributes
                          contain key/value pairs that are strings instead of raw bytes.
                  description: ABCIMessageLog defines a structure containing an indexed
                    tx ABCI message log.
              info:
                type: string
                description: Additional information. May be non-deterministic.
              gas_wanted:
                type: string
                description: Amount of gas requested for transaction.
                format: int64
              gas_used:
                type: string
                description: Amount of gas consumed by transaction.
                format: int64
              tx:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              timestamp:
                type: string
                description: |-
                  Time of the previous block. For heights > 1, it's the weighted median of
                  the timestamps of the valid votes in the block.LastCommit. For height == 1,
                  it's genesis time.
              events:
                type: array
                description: |-
                  Events defines all the events emitted by processing a transaction. Note,
                  these events include those emitted by processing all the messages and those
                  emitted from the ante handler. Whereas Logs contains the events, with
                  additional metadata, emitted only by processing the messages.

                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          value:
                            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                            type: string
                            format: byte
                          index:
                            type: boolean
                        description: EventAttribute is a single key-value pair, associated
                          with an event.
                  description: |-
                    Event allows application developers to attach additional information to
                    ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                    Later, transactions may be queried using these events.
            description: |-
              TxResponse defines a structure containing relevant tx data and metadata. The
              tags are stringified and the log is JSON decoded.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines an pagination for the response.
      description: |-
        GetTxsEventResponse is the response type for the Service.TxsByEvents
        RPC method.
    cosmos.tx.v1beta1.ModeInfo:
      type: object
      properties:
        single:
          title: single represents a single signer
          type: object
          properties:
            mode:
              title: mode is the signing mode of the single signer
              type: string
              description: |-
                SignMode represents a signing mode with its own security guarantees.

                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                rejected
                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                verified with raw bytes from Tx
                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                human-readable textual representation on top of the binary representation
                from SIGN_MODE_DIRECT
                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                Amino JSON and will be removed in the future
              default: SIGN_MODE_UNSPECIFIED
              enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_LEGACY_AMINO_JSON
        multi:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo.Multi'
      description: ModeInfo describes the signing mode of a single or nested multisig
        signer.
    cosmos.tx.v1beta1.ModeInfo.Multi:
      title: Multi is the mode info for a multisig public key
      type: object
      properties:
        bitarray:
          title: bitarray specifies which keys within the multisig are signing
          type: object
          properties:
            extra_bits_stored:
              type: integer
              format: int64
            elems:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: |-
            CompactBitArray is an implementation of a space efficient bit array.
            This is used to ensure that the encoded data takes up a minimal amount of
            space after proto encoding.
            This is not thread safe, and is not intended for concurrent usage.
        mode_infos:
          title: |-
            mode_infos is the corresponding modes of the signers of the multisig
            which could include nested multisig public keys
          type: array
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
    cosmos.tx.v1beta1.ModeInfo.Single:
      title: |-
        Single is the mode info for a single signer. It is structured as a message
        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
        future
      type: object
      properties:
        mode:
          title: mode is the signing mode of the single signer
          type: string
          description: |-
            SignMode represents a signing mode with its own security guarantees.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation
            from SIGN_MODE_DIRECT
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future
          default: SIGN_MODE_UNSPECIFIED
          enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_LEGACY_AMINO_JSON
    cosmos.tx.v1beta1.OrderBy:
      title: OrderBy defines the sorting order
      type: string
      description: |-
        - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
         - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
      default: ORDER_BY_UNSPECIFIED
      enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    cosmos.tx.v1beta1.SignerInfo:
      type: object
      properties:
        public_key:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        mode_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
        sequence:
          type: string
          description: |-
            sequence is the sequence of the account, which describes the
            number of committed transactions signed by a given address. It is used to
            prevent replay attacks.
          format: uint64
      description: |-
        SignerInfo describes the public key and signing mode of a single top-level
        signer.
    cosmos.tx.v1beta1.SimulateRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: |-
            tx_bytes is the raw transaction.

            Since: cosmos-sdk 0.43
          format: byte
      description: |-
        SimulateRequest is the request type for the Service.Simulate
        RPC method.
    cosmos.tx.v1beta1.SimulateResponse:
      type: object
      properties:
        gas_info:
          type: object
          properties:
            gas_wanted:
              type: string
              description: GasWanted is the maximum units of work we allow this tx
                to perform.
              format: uint64
            gas_used:
              type: string
              description: GasUsed is the amount of gas actually consumed.
              format: uint64
          description: gas_info is the information about gas used in the simulation.
        result:
          type: object
          properties:
            data:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: |-
                Data is any data returned from message or handler execution. It MUST be
                length prefixed in order to separate data from multiple message executions.
              format: byte
            log:
              type: string
              description: Log contains the log information from message or handler
                execution.
            events:
              type: array
              description: |-
                Events contains a slice of Event objects that were emitted during message
                or handler execution.
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        value:
                          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                description: |-
                  Event allows application developers to attach additional information to
                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
                  Later, transactions may be queried using these events.
          description: result is the result of the simulation.
      description: |-
        SimulateResponse is the response type for the
        Service.SimulateRPC method.
    cosmos.tx.v1beta1.Tx:
      type: object
      properties:
        body:
          title: body is the processable content of the transaction
          type: object
          properties:
            messages:
              type: array
              description: |-
                messages is a list of messages to be executed. The required signers of
                those messages define the number and order of elements in AuthInfo's
                signer_infos and Tx's signatures. Each required signer address is added to
                the list only the first time it occurs.
                By convention, the first required signer (usually from the first message)
                is referred to as the primary signer and pays the fee for the whole
                transaction.
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            memo:
              type: string
              description: |-
                memo is any arbitrary note/comment to be added to the transaction.
                WARNING: in clients, any publicly exposed text should not be called memo,
                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
            timeout_height:
              title: |-
                timeout is the block height after which this transaction will not
                be processed by the chain
              type: string
              format: uint64
            extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, the transaction will be rejected
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            non_critical_extension_options:
              title: |-
                extension_options are arbitrary options that can be added by chains
                when the default options are not sufficient. If any of these are present
                and can't be handled, they will be ignored
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
          description: TxBody is the body of a transaction that all signers sign over.
        auth_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.AuthInfo'
        signatures:
          type: array
          description: |-
            signatures is a list of signatures that matches the length and order of
            AuthInfo's signer_infos to allow connecting signature meta information like
            public key and signing mode by position.
          items:
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            type: string
            format: byte
      description: Tx is the standard type used for broadcasting transactions.
    cosmos.tx.v1beta1.TxBody:
      type: object
      properties:
        messages:
          type: array
          description: |-
            messages is a list of messages to be executed. The required signers of
            those messages define the number and order of elements in AuthInfo's
            signer_infos and Tx's signatures. Each required signer address is added to
            the list only the first time it occurs.
            By convention, the first required signer (usually from the first message)
            is referred to as the primary signer and pays the fee for the whole
            transaction.
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        memo:
          type: string
          description: |-
            memo is any arbitrary note/comment to be added to the transaction.
            WARNING: in clients, any publicly exposed text should not be called memo,
            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
        timeout_height:
          title: |-
            timeout is the block height after which this transaction will not
            be processed by the chain
          type: string
          format: uint64
        extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, the transaction will be rejected
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        non_critical_extension_options:
          title: |-
            extension_options are arbitrary options that can be added by chains
            when the default options are not sufficient. If any of these are present
            and can't be handled, they will be ignored
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
                description: |-
                  A URL/resource name that uniquely identifies the type of the serialized
                  protocol buffer message. This string must contain at least
                  one "/" character. The last segment of the URL's path must represent
                  the fully qualified name of the type (as in
                  `path/google.protobuf.Duration`). The name should be in a canonical form
                  (e.g., leading "." is not accepted).

                  In practice, teams usually precompile into the binary all types that they
                  expect it to use in the context of Any. However, for URLs which use the
                  scheme `http`, `https`, or no scheme, one can optionally set up a type
                  server that maps type URLs to message definitions as follows:

                  * If no scheme is provided, `https` is assumed.
                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the official
                  protobuf release, and it is not used for type URLs beginning with
                  type.googleapis.com.

                  Schemes other than `http`, `https` (or the empty scheme) might be
                  used with implementation specific semantics.
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".


              JSON
              ====
              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: TxBody is the body of a transaction that all signers sign over.
    tendermint.abci.Event:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              value:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                format: byte
              index:
                type: boolean
            description: EventAttribute is a single key-value pair, associated with
              an event.
      description: |-
        Event allows application developers to attach additional information to
        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.
        Later, transactions may be queried using these events.
    tendermint.abci.EventAttribute:
      type: object
      properties:
        key:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        index:
          type: boolean
      description: EventAttribute is a single key-value pair, associated with an event.
    cosmos.upgrade.v1beta1.ModuleVersion:
      type: object
      properties:
        name:
          title: name of the app module
          type: string
        version:
          title: consensus version of the app module
          type: string
          format: uint64
      description: |-
        ModuleVersion specifies a module and its consensus version.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.Plan:
      type: object
      properties:
        name:
          type: string
          description: |-
            Sets the name for the upgrade. This name will be used by the upgraded
            version of the software to apply any special "on-upgrade" commands during
            the first BeginBlock method after the upgrade is applied. It is also used
            to detect whether a software version can handle a given upgrade. If no
            upgrade handler with this name has been set in the software, it will be
            assumed that the software is out-of-date when the upgrade Time or Height is
            reached and the software will exit.
        time:
          type: string
          description: |-
            Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
            has been removed from the SDK.
            If this field is not empty, an error will be thrown.
          format: date-time
        height:
          type: string
          description: |-
            The height at which the upgrade must be performed.
            Only used if Time is not set.
          format: int64
        info:
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
          type: string
        upgraded_client_state:
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: Plan specifies information about a planned upgrade and when it
        should occur.
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      type: object
      properties:
        height:
          type: string
          description: height is the block height at which the plan was applied.
          format: int64
      description: |-
        QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      type: object
      properties:
        plan:
          type: object
          properties:
            name:
              type: string
              description: |-
                Sets the name for the upgrade. This name will be used by the upgraded
                version of the software to apply any special "on-upgrade" commands during
                the first BeginBlock method after the upgrade is applied. It is also used
                to detect whether a software version can handle a given upgrade. If no
                upgrade handler with this name has been set in the software, it will be
                assumed that the software is out-of-date when the upgrade Time or Height is
                reached and the software will exit.
            time:
              type: string
              description: |-
                Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                has been removed from the SDK.
                If this field is not empty, an error will be thrown.
              format: date-time
            height:
              type: string
              description: |-
                The height at which the upgrade must be performed.
                Only used if Time is not set.
              format: int64
            info:
              title: |-
                Any application specific upgrade info to be included on-chain
                such as a git commit that validators could automatically upgrade to
              type: string
            upgraded_client_state:
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: plan is the current upgrade plan.
      description: |-
        QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
        method.
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      type: object
      properties:
        module_versions:
          type: array
          description: module_versions is a list of module names with their consensus
            versions.
          items:
            type: object
            properties:
              name:
                title: name of the app module
                type: string
              version:
                title: consensus version of the app module
                type: string
                format: uint64
            description: |-
              ModuleVersion specifies a module and its consensus version.

              Since: cosmos-sdk 0.43
      description: |-
        QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
        RPC method.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          title: 'Since: cosmos-sdk 0.43'
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
        RPC method.
    terra.tx.v1beta1.ComputeTaxRequest:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_bytes:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: tx_bytes is the raw transaction.
          format: byte
      description: |-
        ComputeTaxRequest is the request type for the Service.ComputeTax
        RPC method.
    terra.tx.v1beta1.ComputeTaxResponse:
      type: object
      properties:
        tax_amount:
          title: amount is the amount of coins to be paid as a fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        ComputeTaxResponse is the response type for the Service.ComputeTax
        RPC method.
    terra.market.v1beta1.Params:
      type: object
      properties:
        base_pool:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        pool_recovery_period:
          type: string
          format: uint64
        min_stability_spread:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: Params defines the parameters for the market module.
    terra.market.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            base_pool:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            pool_recovery_period:
              type: string
              format: uint64
            min_stability_spread:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    terra.market.v1beta1.QuerySwapResponse:
      type: object
      properties:
        return_coin:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: return_coin defines the coin returned as a result of the swap
            simulation.
      description: QuerySwapResponse is the response type for the Query/Swap RPC method.
    terra.market.v1beta1.QueryTerraPoolDeltaResponse:
      type: object
      properties:
        terra_pool_delta:
          title: terra_pool_delta defines the gap between the TerraPool and the TerraBasePool
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: QueryTerraPoolDeltaResponse is the response type for the Query/TerraPoolDelta
        RPC method.
    terra.oracle.v1beta1.AggregateExchangeRatePrevote:
      title: |-
        struct for aggregate prevoting on the ExchangeRateVote.
        The purpose of aggregate prevote is to hide vote exchange rates with hash
        which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
      type: object
      properties:
        hash:
          type: string
        voter:
          type: string
        submit_block:
          type: string
          format: uint64
    terra.oracle.v1beta1.AggregateExchangeRateVote:
      type: object
      properties:
        exchange_rate_tuples:
          type: array
          items:
            title: ExchangeRateTuple - struct to store interpreted exchange rates
              data to store
            type: object
            properties:
              denom:
                type: string
              exchange_rate:
                type: string
        voter:
          type: string
      description: |-
        MsgAggregateExchangeRateVote - struct for voting on
        the exchange rates of Luna denominated in various Terra assets.
    terra.oracle.v1beta1.Denom:
      title: Denom - the object to hold configurations of each denom
      type: object
      properties:
        name:
          type: string
        tobin_tax:
          type: string
    terra.oracle.v1beta1.ExchangeRateTuple:
      title: ExchangeRateTuple - struct to store interpreted exchange rates data to
        store
      type: object
      properties:
        denom:
          type: string
        exchange_rate:
          type: string
    terra.oracle.v1beta1.Params:
      type: object
      properties:
        vote_period:
          type: string
          format: uint64
        vote_threshold:
          type: string
        reward_band:
          type: string
        reward_distribution_window:
          type: string
          format: uint64
        whitelist:
          type: array
          items:
            title: Denom - the object to hold configurations of each denom
            type: object
            properties:
              name:
                type: string
              tobin_tax:
                type: string
        slash_fraction:
          type: string
        slash_window:
          type: string
          format: uint64
        min_valid_per_window:
          type: string
      description: Params defines the parameters for the oracle module.
    terra.oracle.v1beta1.QueryActivesResponse:
      type: object
      properties:
        actives:
          type: array
          description: actives defines a list of the denomination which oracle prices
            aggreed upon.
          items:
            type: string
      description: |-
        QueryActivesResponse is response type for the
        Query/Actives RPC method.
    terra.oracle.v1beta1.QueryAggregatePrevoteResponse:
      type: object
      properties:
        aggregate_prevote:
          title: |-
            struct for aggregate prevoting on the ExchangeRateVote.
            The purpose of aggregate prevote is to hide vote exchange rates with hash
            which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
          type: object
          properties:
            hash:
              type: string
            voter:
              type: string
            submit_block:
              type: string
              format: uint64
      description: |-
        QueryAggregatePrevoteResponse is response type for the
        Query/AggregatePrevote RPC method.
    terra.oracle.v1beta1.QueryAggregatePrevotesResponse:
      type: object
      properties:
        aggregate_prevotes:
          title: aggregate_prevotes defines all oracle aggregate prevotes submitted
            in the current vote period
          type: array
          items:
            title: |-
              struct for aggregate prevoting on the ExchangeRateVote.
              The purpose of aggregate prevote is to hide vote exchange rates with hash
              which is formatted as hex string in SHA256("{salt}:{exchange rate}{denom},...,{exchange rate}{denom}:{voter}")
            type: object
            properties:
              hash:
                type: string
              voter:
                type: string
              submit_block:
                type: string
                format: uint64
      description: |-
        QueryAggregatePrevotesResponse is response type for the
        Query/AggregatePrevotes RPC method.
    terra.oracle.v1beta1.QueryAggregateVoteResponse:
      type: object
      properties:
        aggregate_vote:
          title: aggregate_vote defines oracle aggregate vote submitted by a validator
            in the current vote period
          type: object
          properties:
            exchange_rate_tuples:
              type: array
              items:
                title: ExchangeRateTuple - struct to store interpreted exchange rates
                  data to store
                type: object
                properties:
                  denom:
                    type: string
                  exchange_rate:
                    type: string
            voter:
              type: string
          description: |-
            MsgAggregateExchangeRateVote - struct for voting on
            the exchange rates of Luna denominated in various Terra assets.
      description: |-
        QueryAggregateVoteResponse is response type for the
        Query/AggregateVote RPC method.
    terra.oracle.v1beta1.QueryAggregateVotesResponse:
      type: object
      properties:
        aggregate_votes:
          title: aggregate_votes defines all oracle aggregate votes submitted in the
            current vote period
          type: array
          items:
            type: object
            properties:
              exchange_rate_tuples:
                type: array
                items:
                  title: ExchangeRateTuple - struct to store interpreted exchange
                    rates data to store
                  type: object
                  properties:
                    denom:
                      type: string
                    exchange_rate:
                      type: string
              voter:
                type: string
            description: |-
              MsgAggregateExchangeRateVote - struct for voting on
              the exchange rates of Luna denominated in various Terra assets.
      description: |-
        QueryAggregateVotesResponse is response type for the
        Query/AggregateVotes RPC method.
    terra.oracle.v1beta1.QueryExchangeRateResponse:
      type: object
      properties:
        exchange_rate:
          title: exchange_rate defines the exchange rate of Luna denominated in various
            Terra
          type: string
      description: |-
        QueryExchangeRateResponse is response type for the
        Query/ExchangeRate RPC method.
    terra.oracle.v1beta1.QueryExchangeRatesResponse:
      type: object
      properties:
        exchange_rates:
          type: array
          description: exchange_rates defines a list of the exchange rate for all
            whitelisted denoms.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              DecCoin defines a token with a denomination and a decimal amount.

              NOTE: The amount field is an Dec which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryExchangeRatesResponse is response type for the
        Query/ExchangeRates RPC method.
    terra.oracle.v1beta1.QueryFeederDelegationResponse:
      type: object
      properties:
        feeder_addr:
          title: feeder_addr defines the feeder delegation of a validator
          type: string
      description: |-
        QueryFeederDelegationResponse is response type for the
        Query/FeederDelegation RPC method.
    terra.oracle.v1beta1.QueryMissCounterResponse:
      type: object
      properties:
        miss_counter:
          title: miss_counter defines the oracle miss counter of a validator
          type: string
          format: uint64
      description: |-
        QueryMissCounterResponse is response type for the
        Query/MissCounter RPC method.
    terra.oracle.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            vote_period:
              type: string
              format: uint64
            vote_threshold:
              type: string
            reward_band:
              type: string
            reward_distribution_window:
              type: string
              format: uint64
            whitelist:
              type: array
              items:
                title: Denom - the object to hold configurations of each denom
                type: object
                properties:
                  name:
                    type: string
                  tobin_tax:
                    type: string
            slash_fraction:
              type: string
            slash_window:
              type: string
              format: uint64
            min_valid_per_window:
              type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    terra.oracle.v1beta1.QueryTobinTaxResponse:
      type: object
      properties:
        tobin_tax:
          title: tobin_taxe defines the tobin tax of a denom
          type: string
      description: |-
        QueryTobinTaxResponse is response type for the
        Query/TobinTax RPC method.
    terra.oracle.v1beta1.QueryTobinTaxesResponse:
      type: object
      properties:
        tobin_taxes:
          title: tobin_taxes defines a list of the tobin tax of all whitelisted denoms
          type: array
          items:
            title: Denom - the object to hold configurations of each denom
            type: object
            properties:
              name:
                type: string
              tobin_tax:
                type: string
      description: |-
        QueryTobinTaxesResponse is response type for the
        Query/TobinTaxes RPC method.
    terra.oracle.v1beta1.QueryVoteTargetsResponse:
      type: object
      properties:
        vote_targets:
          type: array
          description: |-
            vote_targets defines a list of the denomination in which everyone
            should vote in the current vote period.
          items:
            type: string
      description: |-
        QueryVoteTargetsResponse is response type for the
        Query/VoteTargets RPC method.
    terra.treasury.v1beta1.Params:
      type: object
      properties:
        tax_policy:
          title: PolicyConstraints - defines policy constraints can be applied in
            tax & reward policies
          type: object
          properties:
            rate_min:
              type: string
            rate_max:
              type: string
            cap:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
            change_rate_max:
              type: string
        reward_policy:
          title: PolicyConstraints - defines policy constraints can be applied in
            tax & reward policies
          type: object
          properties:
            rate_min:
              type: string
            rate_max:
              type: string
            cap:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: |-
                Coin defines a token with a denomination and an amount.

                NOTE: The amount field is an Int which implements the custom method
                signatures required by gogoproto.
            change_rate_max:
              type: string
        seigniorage_burden_target:
          type: string
        mining_increment:
          type: string
        window_short:
          type: string
          format: uint64
        window_long:
          type: string
          format: uint64
        window_probation:
          type: string
          format: uint64
        burn_tax_split:
          type: string
      description: Params defines the parameters for the oracle module.
    terra.treasury.v1beta1.PolicyConstraints:
      title: PolicyConstraints - defines policy constraints can be applied in tax
        & reward policies
      type: object
      properties:
        rate_min:
          type: string
        rate_max:
          type: string
        cap:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        change_rate_max:
          type: string
    terra.treasury.v1beta1.QueryIndicatorsResponse:
      type: object
      properties:
        trl_year:
          type: string
        trl_month:
          type: string
      description: |-
        QueryIndicatorsResponse is response type for the
        Query/Indicators RPC method.
    terra.treasury.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            tax_policy:
              title: PolicyConstraints - defines policy constraints can be applied
                in tax & reward policies
              type: object
              properties:
                rate_min:
                  type: string
                rate_max:
                  type: string
                cap:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                change_rate_max:
                  type: string
            reward_policy:
              title: PolicyConstraints - defines policy constraints can be applied
                in tax & reward policies
              type: object
              properties:
                rate_min:
                  type: string
                rate_max:
                  type: string
                cap:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
                change_rate_max:
                  type: string
            seigniorage_burden_target:
              type: string
            mining_increment:
              type: string
            window_short:
              type: string
              format: uint64
            window_long:
              type: string
              format: uint64
            window_probation:
              type: string
              format: uint64
            burn_tax_split:
              type: string
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    terra.treasury.v1beta1.QueryRewardWeightResponse:
      type: object
      properties:
        reward_weight:
          type: string
      description: |-
        QueryRewardWeightResponse is response type for the
        Query/RewardWeight RPC method.
    terra.treasury.v1beta1.QuerySeigniorageProceedsResponse:
      type: object
      properties:
        seigniorage_proceeds:
          type: string
      description: |-
        QuerySeigniorageProceedsResponse is response type for the
        Query/SeigniorageProceeds RPC method.
    terra.treasury.v1beta1.QueryTaxCapResponse:
      type: object
      properties:
        tax_cap:
          type: string
      description: |-
        QueryTaxCapResponse is response type for the
        Query/TaxCap RPC method.
    terra.treasury.v1beta1.QueryTaxCapsResponse:
      type: object
      properties:
        tax_caps:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              tax_cap:
                type: string
            description: |-
              QueryTaxCapsResponseItem is response item type for the
              Query/TaxCaps RPC method.
      description: |-
        QueryTaxCapsResponse is response type for the
        Query/TaxCaps RPC method.
    terra.treasury.v1beta1.QueryTaxCapsResponseItem:
      type: object
      properties:
        denom:
          type: string
        tax_cap:
          type: string
      description: |-
        QueryTaxCapsResponseItem is response item type for the
        Query/TaxCaps RPC method.
    terra.treasury.v1beta1.QueryTaxProceedsResponse:
      type: object
      properties:
        tax_proceeds:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        QueryTaxProceedsResponse is response type for the
        Query/TaxProceeds RPC method.
    terra.treasury.v1beta1.QueryTaxRateResponse:
      type: object
      properties:
        tax_rate:
          type: string
      description: |-
        QueryTaxRateResponse is response type for the
        Query/TaxRate RPC method.
    terra.wasm.v1beta1.CodeInfo:
      title: CodeInfo is data for the uploaded contract WASM code
      type: object
      properties:
        code_id:
          title: CodeID is the sequentially increasing unique identifier
          type: string
          format: uint64
        code_hash:
          title: CodeHash is the unique identifier created by wasmvm
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        creator:
          title: Creator address who initially stored the code
          type: string
    terra.wasm.v1beta1.ContractInfo:
      title: ContractInfo stores a WASM contract instance
      type: object
      properties:
        address:
          title: Address is the address of the contract
          type: string
        creator:
          title: Creator is the contract creator address
          type: string
        admin:
          title: Admin is who can execute the contract migration
          type: string
        code_id:
          title: CodeID is the reference to the stored Wasm code
          type: string
          format: uint64
        init_msg:
          title: InitMsg is the raw message used when instantiating a contract
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    terra.wasm.v1beta1.Params:
      type: object
      properties:
        max_contract_size:
          type: string
          format: uint64
        max_contract_gas:
          type: string
          format: uint64
        max_contract_msg_size:
          type: string
          format: uint64
      description: Params defines the parameters for the wasm module.
    terra.wasm.v1beta1.QueryByteCodeResponse:
      type: object
      properties:
        byte_code:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        QueryByteCodeResponse is response type for the
        QueryyByteCode RPC method.
    terra.wasm.v1beta1.QueryCodeInfoResponse:
      type: object
      properties:
        code_info:
          title: CodeInfo is data for the uploaded contract WASM code
          type: object
          properties:
            code_id:
              title: CodeID is the sequentially increasing unique identifier
              type: string
              format: uint64
            code_hash:
              title: CodeHash is the unique identifier created by wasmvm
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            creator:
              title: Creator address who initially stored the code
              type: string
      description: |-
        QueryCodeInfoResponse is response type for the
        QueryyCodeInfo RPC method.
    terra.wasm.v1beta1.QueryContractInfoResponse:
      type: object
      properties:
        contract_info:
          title: ContractInfo stores a WASM contract instance
          type: object
          properties:
            address:
              title: Address is the address of the contract
              type: string
            creator:
              title: Creator is the contract creator address
              type: string
            admin:
              title: Admin is who can execute the contract migration
              type: string
            code_id:
              title: CodeID is the reference to the stored Wasm code
              type: string
              format: uint64
            init_msg:
              title: InitMsg is the raw message used when instantiating a contract
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
      description: |-
        QueryContractInfoResponse is response type for the
        Query/ContractInfo RPC method.
    terra.wasm.v1beta1.QueryContractStoreResponse:
      type: object
      properties:
        query_result:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        QueryContractStoreResponse is response type for the
        Query/ContractStore RPC method.
    terra.wasm.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            max_contract_size:
              type: string
              format: uint64
            max_contract_gas:
              type: string
              format: uint64
            max_contract_msg_size:
              type: string
              format: uint64
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
    terra.wasm.v1beta1.QueryRawStoreResponse:
      type: object
      properties:
        data:
          title: Data contains the raw store data
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
      description: |-
        QueryRawStoreResponse is response type for the
        Query/RawStore RPC method.
    ibc.core.channel.v1.Channel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          default: ORDER_NONE_UNSPECIFIED
          enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end
                of the channel.
            channel_id:
              title: channel end on the counterparty chain
              type: string
        connection_hops:
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
          items:
            type: string
        version:
          title: opaque channel version, which is agreed upon during the handshake
          type: string
      description: |-
        Channel defines pipeline for exactly-once packet delivery between specific
        modules on separate blockchains, which has at least one end capable of
        sending packets and one end capable of receiving packets.
    ibc.core.channel.v1.Counterparty:
      title: Counterparty defines a channel end counterparty
      type: object
      properties:
        port_id:
          type: string
          description: port on the counterparty chain which owns the other end of
            the channel.
        channel_id:
          title: channel end on the counterparty chain
          type: string
    ibc.core.channel.v1.IdentifiedChannel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          default: ORDER_NONE_UNSPECIFIED
          enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end
                of the channel.
            channel_id:
              title: channel end on the counterparty chain
              type: string
        connection_hops:
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
          items:
            type: string
        version:
          title: opaque channel version, which is agreed upon during the handshake
          type: string
        port_id:
          title: port identifier
          type: string
        channel_id:
          title: channel identifier
          type: string
      description: |-
        IdentifiedChannel defines a channel with additional port and channel
        identifier fields.
    ibc.core.channel.v1.Order:
      title: Order defines if a channel is ORDERED or UNORDERED
      type: string
      description: |-
        - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
        which they were sent.
         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      default: ORDER_NONE_UNSPECIFIED
      enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
    ibc.core.channel.v1.PacketState:
      type: object
      properties:
        port_id:
          type: string
          description: channel port identifier.
        channel_id:
          type: string
          description: channel unique identifier.
        sequence:
          type: string
          description: packet sequence.
          format: uint64
        data:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: embedded data that represents packet state.
          format: byte
      description: |-
        PacketState defines the generic type necessary to retrieve and store
        packet commitments, acknowledgements, and receipts.
        Caller is responsible for knowing the context necessary to interpret this
        state as a commitment, acknowledgement, or a receipt.
    ibc.core.channel.v1.QueryChannelClientStateResponse:
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      properties:
        identified_client_state:
          title: client state associated with the channel
          type: object
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              title: client state
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryChannelConsensusStateResponse:
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the channel
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        client_id:
          title: client ID associated with the consensus state
          type: string
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryChannelResponse:
      type: object
      properties:
        channel:
          title: channel associated with the request identifiers
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              description: |-
                State defines if a channel is in one of the following states:
                CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              default: ORDER_NONE_UNSPECIFIED
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
            connection_hops:
              title: |-
                list of connection identifiers, in order, along which packets sent on
                this channel will travel
              type: array
              items:
                type: string
            version:
              title: opaque channel version, which is agreed upon during the handshake
              type: string
          description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryChannelResponse is the response type for the Query/Channel RPC method.
        Besides the Channel end, it includes a proof and the height from which the
        proof was retrieved.
    ibc.core.channel.v1.QueryChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          description: list of stored channels of the chain.
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                default: ORDER_NONE_UNSPECIFIED
                enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other
                      end of the channel.
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
              connection_hops:
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
                items:
                  type: string
              version:
                title: opaque channel version, which is agreed upon during the handshake
                type: string
              port_id:
                title: port identifier
                type: string
              channel_id:
                title: channel identifier
                type: string
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: QueryChannelsResponse is the response type for the Query/Channels
        RPC method.
    ibc.core.channel.v1.QueryConnectionChannelsResponse:
      title: |-
        QueryConnectionChannelsResponse is the Response type for the
        Query/QueryConnectionChannels RPC method
      type: object
      properties:
        channels:
          type: array
          description: list of channels associated with a connection.
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                description: |-
                  State defines if a channel is in one of the following states:
                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                description: |-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                default: ORDER_NONE_UNSPECIFIED
                enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other
                      end of the channel.
                  channel_id:
                    title: channel end on the counterparty chain
                    type: string
              connection_hops:
                title: |-
                  list of connection identifiers, in order, along which packets sent on
                  this channel will travel
                type: array
                items:
                  type: string
              version:
                title: opaque channel version, which is agreed upon during the handshake
                type: string
              port_id:
                title: port identifier
                type: string
              channel_id:
                title: channel identifier
                type: string
            description: |-
              IdentifiedChannel defines a channel with additional port and channel
              identifier fields.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
      title: |-
        QuerySequenceResponse is the request type for the
        Query/QueryNextSequenceReceiveResponse RPC method
      type: object
      properties:
        next_sequence_receive:
          title: next sequence receive number
          type: string
          format: uint64
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
      title: |-
        QueryPacketAcknowledgementResponse defines the client query response for a
        packet which also includes a proof and the height from which the
        proof was retrieved
      type: object
      properties:
        acknowledgement:
          title: packet associated with the request fields
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
      title: |-
        QueryPacketAcknowledgemetsResponse is the request type for the
        Query/QueryPacketAcknowledgements RPC method
      type: object
      properties:
        acknowledgements:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                description: packet sequence.
                format: uint64
              data:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: embedded data that represents packet state.
                format: byte
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketCommitmentResponse:
      title: |-
        QueryPacketCommitmentResponse defines the client query response for a packet
        which also includes a proof and the height from which the proof was
        retrieved
      type: object
      properties:
        commitment:
          title: packet associated with the request fields
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketCommitmentsResponse:
      title: |-
        QueryPacketCommitmentsResponse is the request type for the
        Query/QueryPacketCommitments RPC method
      type: object
      properties:
        commitments:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                description: packet sequence.
                format: uint64
              data:
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                type: string
                description: embedded data that represents packet state.
                format: byte
            description: |-
              PacketState defines the generic type necessary to retrieve and store
              packet commitments, acknowledgements, and receipts.
              Caller is responsible for knowing the context necessary to interpret this
              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryPacketReceiptResponse:
      title: |-
        QueryPacketReceiptResponse defines the client query response for a packet
        receipt which also includes a proof, and the height from which the proof was
        retrieved
      type: object
      properties:
        received:
          title: success flag for if receipt exists
          type: boolean
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryUnreceivedAcksResponse:
      title: |-
        QueryUnreceivedAcksResponse is the response type for the
        Query/UnreceivedAcks RPC method
      type: object
      properties:
        sequences:
          title: list of unreceived acknowledgement sequences
          type: array
          items:
            type: string
            format: uint64
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
      title: |-
        QueryUnreceivedPacketsResponse is the response type for the
        Query/UnreceivedPacketCommitments RPC method
      type: object
      properties:
        sequences:
          title: list of unreceived packet sequences
          type: array
          items:
            type: string
            format: uint64
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.channel.v1.State:
      type: string
      description: |-
        State defines if a channel is in one of the following states:
        CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A channel has just started the opening handshake.
         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
         - STATE_OPEN: A channel has completed the handshake. Open channels are
        ready to send and receive packets.
         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
        packets.
      default: STATE_UNINITIALIZED_UNSPECIFIED
      enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
    ibc.core.client.v1.Height:
      title: |-
        Height is a monotonically increasing data type
        that can be compared against another Height for the purposes of updating and
        freezing clients
      type: object
      properties:
        revision_number:
          title: the revision that the client is currently on
          type: string
          format: uint64
        revision_height:
          title: the height within the given revision
          type: string
          format: uint64
      description: |-
        Normally the RevisionHeight is incremented at each height while keeping
        RevisionNumber the same. However some consensus algorithms may choose to
        reset the height in certain conditions e.g. hard forks, state-machine
        breaking changes In these cases, the RevisionNumber is incremented so that
        height continues to be monitonically increasing even as the RevisionHeight
        gets reset
    ibc.core.client.v1.IdentifiedClientState:
      type: object
      properties:
        client_id:
          title: client identifier
          type: string
        client_state:
          title: client state
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        IdentifiedClientState defines a client state with an additional client
        identifier field.
    ibc.core.client.v1.ConsensusStateWithHeight:
      type: object
      properties:
        height:
          title: consensus state height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        consensus_state:
          title: consensus state
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        ConsensusStateWithHeight defines a consensus state with an additional height
        field.
    ibc.core.client.v1.Params:
      type: object
      properties:
        allowed_clients:
          type: array
          description: allowed_clients defines the list of allowed client state types.
          items:
            type: string
      description: Params defines the set of IBC light client parameters.
    ibc.core.client.v1.QueryClientParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            allowed_clients:
              type: array
              description: allowed_clients defines the list of allowed client state
                types.
              items:
                type: string
          description: params defines the parameters of the module.
      description: |-
        QueryClientParamsResponse is the response type for the Query/ClientParams RPC
        method.
    ibc.core.client.v1.QueryClientStateResponse:
      type: object
      properties:
        client_state:
          title: client state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryClientStateResponse is the response type for the Query/ClientState RPC
        method. Besides the client state, it includes a proof and the height from
        which the proof was retrieved.
    ibc.core.client.v1.QueryClientStatesResponse:
      type: object
      properties:
        client_states:
          type: array
          description: list of stored ClientStates of the chain.
          items:
            type: object
            properties:
              client_id:
                title: client identifier
                type: string
              client_state:
                title: client state
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: |-
              IdentifiedClientState defines a client state with an additional client
              identifier field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: |-
        QueryClientStatesResponse is the response type for the Query/ClientStates RPC
        method.
    ibc.core.client.v1.QueryClientStatusResponse:
      type: object
      properties:
        status:
          type: string
      description: |-
        QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
        method. It returns the current status of the IBC client.
    ibc.core.client.v1.QueryConsensusStateResponse:
      title: |-
        QueryConsensusStateResponse is the response type for the Query/ConsensusState
        RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the client identifier at the given
            height
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.client.v1.QueryConsensusStatesResponse:
      title: |-
        QueryConsensusStatesResponse is the response type for the
        Query/ConsensusStates RPC method
      type: object
      properties:
        consensus_states:
          title: consensus states associated with the identifier
          type: array
          items:
            type: object
            properties:
              height:
                title: consensus state height
                type: object
                properties:
                  revision_number:
                    title: the revision that the client is currently on
                    type: string
                    format: uint64
                  revision_height:
                    title: the height within the given revision
                    type: string
                    format: uint64
                description: |-
                  Normally the RevisionHeight is incremented at each height while keeping
                  RevisionNumber the same. However some consensus algorithms may choose to
                  reset the height in certain conditions e.g. hard forks, state-machine
                  breaking changes In these cases, the RevisionNumber is incremented so that
                  height continues to be monitonically increasing even as the RevisionHeight
                  gets reset
              consensus_state:
                title: consensus state
                type: object
                properties:
                  type_url:
                    type: string
                    description: |-
                      A URL/resource name that uniquely identifies the type of the serialized
                      protocol buffer message. This string must contain at least
                      one "/" character. The last segment of the URL's path must represent
                      the fully qualified name of the type (as in
                      `path/google.protobuf.Duration`). The name should be in a canonical form
                      (e.g., leading "." is not accepted).

                      In practice, teams usually precompile into the binary all types that they
                      expect it to use in the context of Any. However, for URLs which use the
                      scheme `http`, `https`, or no scheme, one can optionally set up a type
                      server that maps type URLs to message definitions as follows:

                      * If no scheme is provided, `https` is assumed.
                      * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the official
                      protobuf release, and it is not used for type URLs beginning with
                      type.googleapis.com.

                      Schemes other than `http`, `https` (or the empty scheme) might be
                      used with implementation specific semantics.
                  value:
                    pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                    type: string
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                description: |-
                  `Any` contains an arbitrary serialized protocol buffer message along with a
                  URL that describes the type of the serialized message.

                  Protobuf library provides support to pack/unpack Any values in the form
                  of utility functions or additional generated methods of the Any type.

                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default use
                  'type.googleapis.com/full.type.name' as the type URL and the unpack
                  methods only use the fully qualified type name after the last '/'
                  in the type URL, for example "foo.bar.com/x/y.z" will yield type
                  name "y.z".


                  JSON
                  ====
                  The JSON representation of an `Any` value uses the regular
                  representation of the deserialized, embedded message, with an
                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom JSON
                  representation, that representation will be embedded adding a field
                  `value` which holds the custom JSON in addition to the `@type`
                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: |-
              ConsensusStateWithHeight defines a consensus state with an additional height
              field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    ibc.core.client.v1.QueryUpgradedClientStateResponse:
      type: object
      properties:
        upgraded_client_state:
          title: client state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        QueryUpgradedClientStateResponse is the response type for the
        Query/UpgradedClientState RPC method.
    ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          title: Consensus state associated with the request identifier
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState RPC method.
    ibc.core.commitment.v1.MerklePrefix:
      title: |-
        MerklePrefix is merkle path prefixed to the key.
        The constructed key from the Path and the key will be append(Path.KeyPath,
        append(Path.KeyPrefix, key...))
      type: object
      properties:
        key_prefix:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    ibc.core.connection.v1.ConnectionEnd:
      type: object
      properties:
        client_id:
          type: string
          description: client associated with this connection.
        versions:
          type: array
          description: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection.
          items:
            type: object
            properties:
              identifier:
                title: unique version identifier
                type: string
              features:
                title: list of features compatible with the specified identifier
                type: array
                items:
                  type: string
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
        state:
          type: string
          description: current state of the connection end.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: counterparty chain associated with this connection.
        delay_period:
          type: string
          description: |-
            delay period that must pass before a consensus state can be used for
            packet-verification NOTE: delay period logic is only implemented by some
            clients.
          format: uint64
      description: |-
        ConnectionEnd defines a stateful object on a chain connected to another
        separate one.
        NOTE: there must only be 2 defined ConnectionEnds to establish
        a connection between two chains.
    ibc.core.connection.v1.Counterparty:
      type: object
      properties:
        client_id:
          type: string
          description: |-
            identifies the client on the counterparty chain associated with a given
            connection.
        connection_id:
          type: string
          description: |-
            identifies the connection end on the counterparty chain associated with a
            given connection.
        prefix:
          title: |-
            MerklePrefix is merkle path prefixed to the key.
            The constructed key from the Path and the key will be append(Path.KeyPath,
            append(Path.KeyPrefix, key...))
          type: object
          properties:
            key_prefix:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
          description: commitment merkle prefix of the counterparty chain.
      description: Counterparty defines the counterparty chain associated with a connection
        end.
    ibc.core.connection.v1.IdentifiedConnection:
      type: object
      properties:
        id:
          type: string
          description: connection identifier.
        client_id:
          type: string
          description: client associated with this connection.
        versions:
          title: |-
            IBC version which can be utilised to determine encodings or protocols for
            channels or packets utilising this connection
          type: array
          items:
            type: object
            properties:
              identifier:
                title: unique version identifier
                type: string
              features:
                title: list of features compatible with the specified identifier
                type: array
                items:
                  type: string
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
        state:
          type: string
          description: current state of the connection end.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: counterparty chain associated with this connection.
        delay_period:
          type: string
          description: delay period associated with this connection.
          format: uint64
      description: |-
        IdentifiedConnection defines a connection with additional connection
        identifier field.
    ibc.core.connection.v1.QueryClientConnectionsResponse:
      title: |-
        QueryClientConnectionsResponse is the response type for the
        Query/ClientConnections RPC method
      type: object
      properties:
        connection_paths:
          type: array
          description: slice of all the connection paths associated with a client.
          items:
            type: string
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was generated
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionClientStateResponse:
      title: |-
        QueryConnectionClientStateResponse is the response type for the
        Query/ConnectionClientState RPC method
      type: object
      properties:
        identified_client_state:
          title: client state associated with the channel
          type: object
          properties:
            client_id:
              title: client identifier
              type: string
            client_state:
              title: client state
              type: object
              properties:
                type_url:
                  type: string
                  description: |-
                    A URL/resource name that uniquely identifies the type of the serialized
                    protocol buffer message. This string must contain at least
                    one "/" character. The last segment of the URL's path must represent
                    the fully qualified name of the type (as in
                    `path/google.protobuf.Duration`). The name should be in a canonical form
                    (e.g., leading "." is not accepted).

                    In practice, teams usually precompile into the binary all types that they
                    expect it to use in the context of Any. However, for URLs which use the
                    scheme `http`, `https`, or no scheme, one can optionally set up a type
                    server that maps type URLs to message definitions as follows:

                    * If no scheme is provided, `https` is assumed.
                    * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the official
                    protobuf release, and it is not used for type URLs beginning with
                    type.googleapis.com.

                    Schemes other than `http`, `https` (or the empty scheme) might be
                    used with implementation specific semantics.
                value:
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".


                JSON
                ====
                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
          description: |-
            IdentifiedClientState defines a client state with an additional client
            identifier field.
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionConsensusStateResponse:
      title: |-
        QueryConnectionConsensusStateResponse is the response type for the
        Query/ConnectionConsensusState RPC method
      type: object
      properties:
        consensus_state:
          title: consensus state associated with the channel
          type: object
          properties:
            type_url:
              type: string
              description: |-
                A URL/resource name that uniquely identifies the type of the serialized
                protocol buffer message. This string must contain at least
                one "/" character. The last segment of the URL's path must represent
                the fully qualified name of the type (as in
                `path/google.protobuf.Duration`). The name should be in a canonical form
                (e.g., leading "." is not accepted).

                In practice, teams usually precompile into the binary all types that they
                expect it to use in the context of Any. However, for URLs which use the
                scheme `http`, `https`, or no scheme, one can optionally set up a type
                server that maps type URLs to message definitions as follows:

                * If no scheme is provided, `https` is assumed.
                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the official
                protobuf release, and it is not used for type URLs beginning with
                type.googleapis.com.

                Schemes other than `http`, `https` (or the empty scheme) might be
                used with implementation specific semantics.
            value:
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".


            JSON
            ====
            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        client_id:
          title: client ID associated with the consensus state
          type: string
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
    ibc.core.connection.v1.QueryConnectionResponse:
      type: object
      properties:
        connection:
          title: connection associated with the request identifier
          type: object
          properties:
            client_id:
              type: string
              description: client associated with this connection.
            versions:
              type: array
              description: |-
                IBC version which can be utilised to determine encodings or protocols for
                channels or packets utilising this connection.
              items:
                type: object
                properties:
                  identifier:
                    title: unique version identifier
                    type: string
                  features:
                    title: list of features compatible with the specified identifier
                    type: array
                    items:
                      type: string
                description: |-
                  Version defines the versioning scheme used to negotiate the IBC verison in
                  the connection handshake.
            state:
              type: string
              description: current state of the connection end.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
            counterparty:
              type: object
              properties:
                client_id:
                  type: string
                  description: |-
                    identifies the client on the counterparty chain associated with a given
                    connection.
                connection_id:
                  type: string
                  description: |-
                    identifies the connection end on the counterparty chain associated with a
                    given connection.
                prefix:
                  title: |-
                    MerklePrefix is merkle path prefixed to the key.
                    The constructed key from the Path and the key will be append(Path.KeyPath,
                    append(Path.KeyPrefix, key...))
                  type: object
                  properties:
                    key_prefix:
                      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                      type: string
                      format: byte
                  description: commitment merkle prefix of the counterparty chain.
              description: counterparty chain associated with this connection.
            delay_period:
              type: string
              description: |-
                delay period that must pass before a consensus state can be used for
                packet-verification NOTE: delay period logic is only implemented by some
                clients.
              format: uint64
          description: |-
            ConnectionEnd defines a stateful object on a chain connected to another
            separate one.
            NOTE: there must only be 2 defined ConnectionEnds to establish
            a connection between two chains.
        proof:
          title: merkle proof of existence
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryConnectionResponse is the response type for the Query/Connection RPC
        method. Besides the connection end, it includes a proof and the height from
        which the proof was retrieved.
    ibc.core.connection.v1.QueryConnectionsResponse:
      type: object
      properties:
        connections:
          type: array
          description: list of stored connections of the chain.
          items:
            type: object
            properties:
              id:
                type: string
                description: connection identifier.
              client_id:
                type: string
                description: client associated with this connection.
              versions:
                title: |-
                  IBC version which can be utilised to determine encodings or protocols for
                  channels or packets utilising this connection
                type: array
                items:
                  type: object
                  properties:
                    identifier:
                      title: unique version identifier
                      type: string
                    features:
                      title: list of features compatible with the specified identifier
                      type: array
                      items:
                        type: string
                  description: |-
                    Version defines the versioning scheme used to negotiate the IBC verison in
                    the connection handshake.
              state:
                type: string
                description: current state of the connection end.
                default: STATE_UNINITIALIZED_UNSPECIFIED
                enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
              counterparty:
                type: object
                properties:
                  client_id:
                    type: string
                    description: |-
                      identifies the client on the counterparty chain associated with a given
                      connection.
                  connection_id:
                    type: string
                    description: |-
                      identifies the connection end on the counterparty chain associated with a
                      given connection.
                  prefix:
                    title: |-
                      MerklePrefix is merkle path prefixed to the key.
                      The constructed key from the Path and the key will be append(Path.KeyPath,
                      append(Path.KeyPrefix, key...))
                    type: object
                    properties:
                      key_prefix:
                        pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                        type: string
                        format: byte
                    description: commitment merkle prefix of the counterparty chain.
                description: counterparty chain associated with this connection.
              delay_period:
                type: string
                description: delay period associated with this connection.
                format: uint64
            description: |-
              IdentifiedConnection defines a connection with additional connection
              identifier field.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
      description: |-
        QueryConnectionsResponse is the response type for the Query/Connections RPC
        method.
    ibc.core.connection.v1.State:
      type: string
      description: |-
        State defines if a connection is in one of the following states:
        INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A connection end has just started the opening handshake.
         - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty
        chain.
         - STATE_OPEN: A connection end has completed the handshake.
      default: STATE_UNINITIALIZED_UNSPECIFIED
      enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
    ibc.core.connection.v1.Version:
      type: object
      properties:
        identifier:
          title: unique version identifier
          type: string
        features:
          title: list of features compatible with the specified identifier
          type: array
          items:
            type: string
      description: |-
        Version defines the versioning scheme used to negotiate the IBC verison in
        the connection handshake.
    ibc.applications.transfer.v1.DenomTrace:
      type: object
      properties:
        path:
          type: string
          description: |-
            path defines the chain of port/channel identifiers used for tracing the
            source of the fungible token.
        base_denom:
          type: string
          description: base denomination of the relayed fungible token.
      description: |-
        DenomTrace contains the base denomination for ICS20 fungible tokens and the
        source tracing information path.
    ibc.applications.transfer.v1.Params:
      type: object
      properties:
        send_enabled:
          type: boolean
          description: |-
            send_enabled enables or disables all cross-chain token transfers from this
            chain.
        receive_enabled:
          type: boolean
          description: |-
            receive_enabled enables or disables all cross-chain token transfers to this
            chain.
      description: |-
        Params defines the set of IBC transfer parameters.
        NOTE: To prevent a single token from being transferred, set the
        TransfersEnabled parameter to true and then set the bank module's SendEnabled
        parameter for the denomination to false.
    ibc.applications.transfer.v1.QueryDenomHashResponse:
      type: object
      properties:
        hash:
          type: string
          description: hash (in hex format) of the denomination trace information.
      description: |-
        QueryDenomHashResponse is the response type for the Query/DenomHash RPC
        method.
    ibc.applications.transfer.v1.QueryDenomTraceResponse:
      type: object
      properties:
        denom_trace:
          type: object
          properties:
            path:
              type: string
              description: |-
                path defines the chain of port/channel identifiers used for tracing the
                source of the fungible token.
            base_denom:
              type: string
              description: base denomination of the relayed fungible token.
          description: |-
            DenomTrace contains the base denomination for ICS20 fungible tokens and the
            source tracing information path.
      description: |-
        QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
        method.
    ibc.applications.transfer.v1.QueryDenomTracesResponse:
      type: object
      properties:
        denom_traces:
          type: array
          description: denom_traces returns all denominations trace information.
          items:
            type: object
            properties:
              path:
                type: string
                description: |-
                  path defines the chain of port/channel identifiers used for tracing the
                  source of the fungible token.
              base_denom:
                type: string
                description: base denomination of the relayed fungible token.
            description: |-
              DenomTrace contains the base denomination for ICS20 fungible tokens and the
              source tracing information path.
        pagination:
          type: object
          properties:
            next_key:
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
              pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
              type: string
              format: byte
            total:
              title: |-
                total is total number of results available if PageRequest.count_total
                was set, its value is undefined otherwise
              type: string
              format: uint64
          description: pagination defines the pagination in the response.
      description: |-
        QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
        method.
    ibc.applications.transfer.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: boolean
              description: |-
                send_enabled enables or disables all cross-chain token transfers from this
                chain.
            receive_enabled:
              type: boolean
              description: |-
                receive_enabled enables or disables all cross-chain token transfers to this
                chain.
          description: params defines the parameters of the module.
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
  securitySchemes:
    kms:
      type: http
      scheme: basic
